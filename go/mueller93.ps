%!PS-Adobe-3.0%%Title: (Game Theories and Computer Go)%%Creator: (Microsoft Word: LaserWriter 8 8.3.3)%%CreationDate: (16:22 Tuesday, April 15, 1997)%%For: (mm)%%Pages: 19%%DocumentFonts: Times-Bold Symbol Times-Roman Times-Italic Helvetica-Narrow-Bold Helvetica-Bold Helvetica-Oblique%%DocumentNeededFonts: Times-Bold Symbol Times-Roman Times-Italic Helvetica-Narrow-Bold Helvetica-Bold Helvetica-Oblique%%DocumentSuppliedFonts:%%DocumentData: Clean7Bit%%PageOrder: Ascend%%Orientation: Portrait%%DocumentMedia: Default 595 842 0 () ()%ADO_ImageableArea: 29 31 567 812%%EndCommentsuserdict begin/dscInfo 5 dict dup begin/Title(Game Theories and Computer Go)def/Creator(Microsoft Word: LaserWriter 8 8.3.3)def/CreationDate(16:22 Tuesday, April 15, 1997)def/For(mm)def/Pages 19 defend def end/md 240 dict def md begin/currentpacking where {pop /sc_oldpacking currentpacking def true setpacking}if%%BeginFile: adobe_psp_basic%%Copyright: Copyright 1990-1993 Adobe Systems Incorporated. All Rights Reserved./bd{bind def}bind def/xdf{exch def}bd/xs{exch store}bd/ld{load def}bd/Z{0 def}bd/T/true/F/false/:L/lineto/lw/setlinewidth/:M/moveto/rl/rlineto/rm/rmoveto/:C/curveto/:T/translate/:K/closepath/:mf/makefont/gS/gsave/gR/grestore/np/newpath14{ld}repeat/$m matrix def/av 83 def/por true def/normland false def/psb-nosave{}bd/pse-nosave{}bd/us Z/psb{/us save store}bd/pse{us restore}bd/level2/languagelevel where{pop languagelevel 2 ge}{false}ifelsedef/featurecleanup{stoppedcleartomarkcountdictstack exch sub dup 0 gt{{end}repeat}{pop}ifelse}bd/noload Z/startnoload{{/noload save store}if}bd/endnoload{{noload restore}if}bdlevel2 startnoload/setjob{statusdict/jobname 3 -1 roll put}bd/setcopies{userdict/#copies 3 -1 roll put}bdlevel2 endnoload level2 not startnoload/setjob{1 dict begin/JobName xdf currentdict end setuserparams}bd/setcopies{1 dict begin/NumCopies xdf currentdict end setpagedevice}bdlevel2 not endnoload/pm Z/mT Z/sD Z/realshowpage Z/initializepage{/pm save store mT concat}bd/endp{pm restore showpage}def/$c/DeviceRGB def/rectclip where{pop/rC/rectclip ld}{/rC{np 4 2 roll:M1 index 0 rl0 exch rlneg 0 rl:Kclip np}bd}ifelse/rectfill where{pop/rF/rectfill ld}{/rF{gSnp4 2 roll:M1 index 0 rl0 exch rlneg 0 rlfillgR}bd}ifelse/rectstroke where{pop/rS/rectstroke ld}{/rS{gSnp4 2 roll:M1 index 0 rl0 exch rlneg 0 rl:KstrokegR}bd}ifelse%%EndFile%%BeginFile: adobe_psp_colorspace_level1%%Copyright: Copyright 1991-1993 Adobe Systems Incorporated. All Rights Reserved./G/setgray ld/:F1/setgray ld/:F/setrgbcolor ld/:F4/setcmykcolor where{pop/setcmykcolor ld}{{3{dup3 -1 roll adddup 1 gt{pop 1}if1 exch sub4 1 roll}repeatpopsetrgbcolor}bd}ifelse/:Fx{counttomark{0{G}0{:F}{:F4}}exch getexecpop}bd/:rg{/DeviceRGB :ss}bd/:sc{$cs :ss}bd/:dc{/$cs xdf}bd/:sgl{}def/:dr{}bd/:fCRD{pop}bd/:ckcs{}bd/:ss{/$c xdf}bd/$cs Z%%EndFilelevel2 startnoload%%BeginFile: adobe_psp_patterns_level1%%Copyright: Copyright 1991-1993 Adobe Systems Incorporated. All Rights Reserved./patfreq Z/patangle Z/bk Z/fg Z/docolorscreen Z/graystring Z/pattransf{}def/initQDpatterns{/patfreq 9.375 store/patangle1 0 $m defaultmatrix dtransformexch atanpor not{90 add}ifnormland{180 add}ifstore:a}def/docolorscreen/setcolorscreen where{pop/currentcolorscreen where{pop/setcmykcolor where{pop true}{false}ifelse}{false}ifelse}{false}ifelsedef/setgraypattern{/graystring xspatfreqpatangle{1 add4 mulcvigraystringexch getexch1 add 4 mulcvi7 subbitshift1 and}setscreen64 div setgray}bd/:b{/pattransf load settransferpop pop popsetgraypattern}bddocolorscreen startnoload/screensave 5 array def/:a{currentgray currentscreen currenttransfer screensave astore pop}bd/:e{screensave aload pop settransfer setscreen setgray}bd/:d{pop pop pop/pattransf load settransfersetgraypattern 8{pop}repeat}bd/:c/:d lddocolorscreen endnoload docolorscreen not startnoload/screensave 20 array def/:a{currentcmykcolor currentcolorscreen currentcolortransfer screensave astore pop}bd/:e{screensave aload pop setcolortransfer setcolorscreen setcmykcolor}bd/rstring Z/grstring Z/blstring Z/convroll{64 div 4 -1 roll}bd/setcolorpattern{/graystring xs/blstring xs/grstring xs/rstring xspatfreqpatangle{1 add 4 mul cvi rstringexch get exch 1 add 4 mulcvi 7 sub bitshift 1 and}patfreqpatangle{1 add 4 mul cvi grstringexch get exch 1 add 4 mulcvi 7 sub bitshift 1 and}patfreqpatangle{1 add 4 mul cvi blstringexch get exch 1 add 4 mulcvi 7 sub bitshift 1 and}patfreqpatangle{1 add 4 mul cvi graystringexch get exch 1 add 4 mulcvi 7 sub bitshift 1 and}setcolorscreenconvroll convroll convroll convrollsetcmykcolor}bd/:d{pop pop pop/pattransf load settransferpop pop setcolorpattern}bd/:c/:d lddocolorscreen not endnoload%%EndFilelevel2  endnoload level2 not startnoload%%BeginFile: adobe_psp_patterns_level2%%Copyright: Copyright 1990-1993 Adobe Systems Incorporated. All Rights Reserved./pmtx Z/BGnd Z/FGnd Z/PaintData Z/PatternMtx Z/PatHeight Z/PatWidth Z/$d Z/savecolor 4 array def/savecolorspace Z/patDecode Z/:a{mark 0 0 0 currentcolor savecolor astore pop cleartomark/savecolorspace currentcolorspace store$c setcolorspace/patDecode[currentcolor counttomarkdup 2 add 1rollcleartomark[exch{0 1}repeat]def}bd/:e{savecolorspace setcolorspacemark savecolor aload pop setcolor cleartomark}bd/initQDpatterns{gSinitmatrixmT dup 4 get exch 5 get :T1 0 dtransform round exch round exch idtransformdup mul exch dup mul exch add sqrt0 1 dtransform round exch round exch idtransformdup mul exch dup mul exch add sqrtnegscale0por not{90 add}ifnormland{180 add}ifrotatematrix currentmatrixgR/pmtx xs:a}bd/:t{14 dict begin/BGnd xdf/FGnd xdf/PaintData xdf/PatternType 1 def/PaintType 1 def/BBox[0 0 1 1]def/TilingType 1 def/XStep 1 def/YStep 1 def/PatternMtx[24 0 0 24 0 0]def/PaintProcBGnd null ne{{beginBGnd aload pop :F0 0 1 1 rFFGnd aload pop :F24 24 true PatternMtx PaintData imagemaskend}}{{beginFGnd aload pop :F24 24 true PatternMtx PaintData imagemaskend}}ifelsedefcurrentdictPatternMtxend$c setcolorspacegS pmtx setmatrix makepattern gR}bd/:u{14 dict begin/$d 8 dict def/PatternType 1 def/PaintType 1 def/BBox[0 0 1 1]def/TilingType 1 def/XStep 1 def/YStep 1 def/PaintData xdf/PatHeight xdf/PatWidth xdf/PatternMtx[PatWidth 0 0 PatHeight 0 0]def$d begin/ImageType 1 def/MultipleDataSource false def/Height PatHeight def/Width PatWidth def/Decode patDecode def/ImageMatrix PatternMtx def/DataSource PaintData def/BitsPerComponent 8 defend/PaintProc{begin$d imageend}defcurrentdictPatternMtxendgS $c setcolorspace pmtx setmatrix makepattern gR}bd/bk[1 1 1]def/fg[0 0 0]def/:b{:tsetpatternpop pop}bd/:d{:tsetpattern10{pop}repeat}bd/:c{:usetpattern10{pop}repeat}bd%%EndFilelevel2 not endnoload%%BeginFile: adobe_psp_uniform_graphics%%Copyright: Copyright 1990-1993 Adobe Systems Incorporated. All Rights Reserved./@a{np :M 0 rl :L 0 exch rl 0 rl :L fill}bd/@b{np :M 0 rl 0 exch rl :L 0 rl 0 exch rl fill}bd/arct where{pop}{/arct{arcto pop pop pop pop}bd}ifelse/x1 Z/x2 Z/y1 Z/y2 Z/rad Z/@q{/rad xs/y2 xs/x2 xs/y1 xs/x1 xsnpx2 x1 add 2 div y1 :Mx2 y1 x2 y2 rad arctx2 y2 x1 y2 rad arctx1 y2 x1 y1 rad arctx1 y1 x2 y1 rad arctfill}bd/@s{/rad xs/y2 xs/x2 xs/y1 xs/x1 xsnpx2 x1 add 2 div y1 :Mx2 y1 x2 y2 rad arctx2 y2 x1 y2 rad arctx1 y2 x1 y1 rad arctx1 y1 x2 y1 rad arct:Kstroke}bd/@i{np 0 360 arc fill}bd/@j{gSnp:Tscale0 0 .5 0 360 arcfillgR}bd/@e{np0 360 arc:Kstroke}bd/@f{np$m currentmatrixpop:Tscale0 0 .5 0 360 arc:K$m setmatrixstroke}bd/@k{gSnp:T0 0 :M0 0 5 2 rollarc fillgR}bd/@l{gSnp:T0 0 :Mscale0 0 .5 5 -2 roll arcfillgR}bd/@m{nparcstroke}bd/@n{np$m currentmatrixpop:Tscale0 0 .5 5 -2 roll arc$m setmatrixstroke}bd%%EndFile%%BeginFile: adobe_psp_basic_text%%Copyright: Copyright 1990-1993 Adobe Systems Incorporated. All Rights Reserved./S/show ld/A{0.0 exch ashow}bd/R{0.0 exch 32 exch widthshow}bd/W{0.0 3 1 roll widthshow}bd/J{0.0 32 4 2 roll 0.0 exch awidthshow}bd/V{0.0 4 1 roll 0.0 exch awidthshow}bd/fcflg true def/fc{fcflg{vmstatus exch sub 50000 lt{(%%[ Warning: Running out of memory ]%%\r)print flush/fcflg false store}if pop}if}bd/$f[1 0 0 -1 0 0]def/:ff{$f :mf}bd/MacEncoding StandardEncoding 256 array copy defMacEncoding 39/quotesingle putMacEncoding 96/grave put/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls/registered/copyright/trademark/acute/dieresis/notequal/AE/Oslash/infinity/plusminus/lessequal/greaterequal/yen/mu/partialdiff/summation/product/pi/integral/ordfeminine/ordmasculine/Omega/ae/oslash/questiondown/exclamdown/logicalnot/radical/florin/approxequal/Delta/guillemotleft/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide/lozenge/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex/Idieresis/Igrave/Oacute/Ocircumflex/apple/Ograve/Uacute/Ucircumflex/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla/hungarumlaut/ogonek/caronMacEncoding 128 128 getinterval astore poplevel2 startnoload/copyfontdict{findfont dup length dictbegin{1 index/FID ne{def}{pop pop}ifelse}forall}bdlevel2 endnoload level2 not startnoload/copyfontdict{findfont dup length dictcopybegin}bdlevel2 not endnoloadmd/fontname known not{/fontname/customfont def}if/Encoding Z/:mre{copyfontdict/Encoding MacEncoding deffontname currentdictenddefinefont :ff def}bd/:bsr{copyfontdict/Encoding Encoding 256 array copy defEncoding dup}bd/pd{put dup}bd/:esr{pop popfontname currentdictenddefinefont :ff def}bd/scf{scalefont def}bd/scf-non{$m scale :mf setfont}bd/ps Z/fz{/ps xs}bd/sf/setfont ld/cF/currentfont ld/mbf{/makeblendedfont where{popmakeblendedfont/ABlend exch definefont}{pop}ifelsedef}def%%EndFile%%BeginFile: adobe_psp_derived_styles%%Copyright: Copyright 1990-1993 Adobe Systems Incorporated. All Rights Reserved./wiversion(23.0)eq{{gS 0 0 0 0 rC stringwidth gR}bind}{/stringwidth load}ifelsedef/$o 1. def/gl{$o G}bd/ms{:M S}bd/condensedmtx[.82 0 0 1 0 0]def/:mc{condensedmtx :mf def}bd/extendedmtx[1.18 0 0 1 0 0]def/:me{extendedmtx :mf def}bd/basefont Z/basefonto Z/dxa Z/dxb Z/dxc Z/dxd Z/dsdx2 Z/bfproc Z/:fbase{dup/FontType get 0 eq{dup length dict begindup{1 index/FID ne 2 index/UniqueID ne and{def}{pop pop}ifelse}forall/FDepVector exch/FDepVector get[exch/:fbase load forall]def}/bfproc load ifelse/customfont currentdict end definefont}bd/:mo{/bfproc{dup dup length 2 add dictbegin{1 index/FID ne 2 index/UniqueID ne and{def}{pop pop}ifelse}forall/PaintType 2 def/StrokeWidth .012 0 FontMatrix idtransform pop def/customfont currentdictenddefinefont8 dict begin/basefonto xdf/basefont xdf/FontType 3 def/FontMatrix[1 0 0 1 0 0]def/FontBBox[0 0 1 1]def/Encoding StandardEncoding def/BuildChar{exch beginbasefont setfont( )dup 0 4 -1 roll putdup wisetcharwidth0 0 :MgSgldup showgRbasefonto setfontshowend}def}store :fbase}bd/:mso{/bfproc{7 dict begin/basefont xdf/FontType 3 def/FontMatrix[1 0 0 1 0 0]def/FontBBox[0 0 1 1]def/Encoding StandardEncoding def/BuildChar{exch beginsD begin/dxa 1 ps div defbasefont setfont( )dup 0 4 -1 roll putdup wi1 index 0 ne{exch dxa add exch}ifsetcharwidthdup 0 0 msdup dxa 0 msdup dxa dxa msdup 0 dxa msgldxa 2. div dup msendend}def}store :fbase}bd/:ms{/bfproc{dup dup length 2 add dictbegin{1 index/FID ne 2 index/UniqueID ne and{def}{pop pop}ifelse}forall/PaintType 2 def/StrokeWidth .012 0 FontMatrix idtransform pop def/customfont currentdictenddefinefont8 dict begin/basefonto xdf/basefont xdf/FontType 3 def/FontMatrix[1 0 0 1 0 0]def/FontBBox[0 0 1 1]def/Encoding StandardEncoding def/BuildChar{exch beginsD begin/dxb .05 defbasefont setfont( )dup 0 4 -1 roll putdup wiexch dup 0 ne{dxb add}ifexch setcharwidthdup dxb .01 add 0 ms0 dxb :TgSgldup 0 0 msgRbasefonto setfont0 0 msendend}def}store :fbase}bd/:mss{/bfproc{7 dict begin/basefont xdf/FontType 3 def/FontMatrix[1 0 0 1 0 0]def/FontBBox[0 0 1 1]def/Encoding StandardEncoding def/BuildChar{exch beginsD begin/dxc 1 ps div def/dsdx2 .05 dxc 2 div add defbasefont setfont( )dup 0 4 -1 roll putdup wiexch dup 0 ne{dsdx2 add}ifexch setcharwidthdup dsdx2 .01 add 0 ms0 .05 dxc 2 div sub :Tdup 0 0 msdup dxc 0 msdup dxc dxc msdup 0 dxc msgldxc 2 div dup msendend}def}store :fbase}bd/:msb{/bfproc{7 dict begin/basefont xdf/FontType 3 def/FontMatrix[1 0 0 1 0 0]def/FontBBox[0 0 1 1]def/Encoding StandardEncoding def/BuildChar{exch beginsD begin/dxd .03 defbasefont setfont( )dup 0 4 -1 roll putdup wi1 index 0 ne{exch dxd add exch}ifsetcharwidthdup 0 0 msdup dxd 0 msdup dxd dxd ms0 dxd msendend}def}store :fbase}bd/italicmtx[1 0 -.212557 1 0 0]def/:mi{italicmtx :mf def}bd/:v{[exch dup/FontMatrix get exchdup/FontInfo known{/FontInfo getdup/UnderlinePosition known{dup/UnderlinePosition get2 index 03 1 rolltransformexch pop}{.1}ifelse3 1 rolldup/UnderlineThickness known{/UnderlineThickness getexch 0 3 1 rolltransformexch popabs}{pop pop .067}ifelse}{pop pop .1 .067}ifelse]}bd/$t Z/$p Z/$s Z/:p{aload pop2 index mul/$t xs1 index mul/$p xs.012 mul/$s xs}bd/:m{gS0 $p rm$t lw0 rl strokegR}bd/:n{gS0 $p rm$t lw0 rlgSglstrokegRstrokepath$s lw/setstrokeadjust where{popcurrentstrokeadjust true setstrokeadjust stroke setstrokeadjust}{stroke}ifelsegR}bd/:o{gS0 $p rm$t 2 div dup rm$t lwdup 0 rlstrokegR:n}bd%%EndFile/currentpacking where {pop sc_oldpacking setpacking}if end%%EndProlog%%BeginSetupmd begincountdictstack[{%%BeginFeature: *ManualFeed False1 dict dup /ManualFeed false put setpagedevice%%EndFeature}featurecleanupcountdictstack[{%%BeginFeature: *PageSize A4Small    2 dict dup /PageSize [595 842] put dup /ImagingBBox null put setpagedevice%%EndFeature}featurecleanup(mm)setjob/mT[1 0 0 -1 29 812]definitQDpatterns/sD 16 dict def300 level2{1 dict dup/WaitTimeout 4 -1 roll put setuserparams}{statusdict/waittimeout 3 -1 roll put}ifelse%%IncludeFont: Times-Bold%%IncludeFont: Symbol%%IncludeFont: Times-Roman%%IncludeFont: Times-Italic%%IncludeFont: Helvetica-Narrow-Bold%%IncludeFont: Helvetica-Bold%%IncludeFont: Helvetica-Oblique/f0_1/Times-Bold:mre/f0_20 f0_1 20 scf/f0_16 f0_1 16 scf/f0_14 f0_1 14 scf/f0_12 f0_1 12 scf/f0_10 f0_1 10 scf/f1_1/Symbol:bsr240/apple pd:esr/f1_12 f1_1 12 scf/f1_10 f1_1 10 scf/f1_9 f1_1 9 scf/f2_1 f1_1def/f2_16 f2_1 16 scf/f2_14 f2_1 14 scf/f2_12 f2_1 12 scf/f3_1/Times-Roman:mre/f3_36 f3_1 36 scf/f3_12 f3_1 12 scf/f3_10 f3_1 10 scf/f3_9 f3_1 9 scf/f4_1/Times-Italic:mre/f4_12 f4_1 12 scf/f4_10 f4_1 10 scf/f4_9 f4_1 9 scf/f5_1 f1_1:mi/f5_12 f5_1 12 scf/f5_10 f5_1 10 scf/f5_9 f5_1 9 scf/f6_1/Helvetica-Narrow-Bold:mre/f6_21 f6_1 21 scf/f6_15 f6_1 15 scf/f6_13 f6_1 13 scf/f7_1/Helvetica-Bold:mre/f8_1 f7_1 1.04 scf/f8_12 f8_1 12 scf/f9_1/Helvetica-Oblique:mre/f10_1 f9_1def/f11_1 f10_1 1.04 scf/f11_10 f11_1 10 scf/Courier findfont[10 0 0 -10 0 0]:mf setfont%%EndSetup%%Page: 1 1%%BeginPageSetupinitializepage(mm; page: 1 of 19)setjob%%EndPageSetupgS 0 0 538 781 rC122 55 :Mf0_20 sf-.037(Game Theories and Computer Go)A215 84 :Mf0_16 sf-.163(Martin M\237ller)A185 110 :M-.163(Informatik, ETH Z\237rich)A294 149 :Mf3_10 sf1.553 .155(The research of Go programs is still in its)J267 160 :M.505 .05(infancy, but we shall see that to bring Go programs)J267 171 :M.502 .05(to a level comparable with current Chess programs,)J267 182 :M.195 .02(investigations of a totally different kind than used in)J267 193 :M.008 .001(computer chess are needed.       John McCarthy 1990)J56 221 :Mf0_14 sf.56(Abstract)A83 239 :Mf3_12 sf1.869 .187(Two kinds of theories have traditionally influenced computer game playing:)J56 251 :M-.066(Classical game theory, with its minimax principle, and specialized theories developed for)A56 263 :M.038 .004(a particular game. In addition to these, combinatorial game theory promises to be useful)J56 275 :M1.19 .119(for computer Go. We propose a model for Go based on this theory and discuss our)J56 287 :M1.357 .136(preliminary implementation. We claim that future Go programs will need powerful)J56 299 :M-.053(theories as well as lots of computing power.)A56 328 :Mf0_16 sf-.095(Organisation of the Paper)A83 353 :Mf3_12 sf1.959 .196(Section 1: Review of theories used for computer game playing. We discuss)J56 365 :M-.121(classical game theory, game-specific theories and their relation to each other.)A83 379 :M-.056(Section 2: Brief introduction to the concepts of combinatorial game theory we need)A56 391 :M1.955 .196(for our application to Go. We discuss sums of games and several algorithms for)J56 403 :M-.132(evaluating them.)A83 417 :M.607 .061(Section 3: The relation between computer Go and game theories. We survey the)J56 429 :M-.076(current state of the art, taking leading Go programs as examples.)A83 443 :M-.101(Section 4: Our framework for applying combinatorial game theory to Computer Go.)A56 455 :M.159 .016(We define local Go games, map them to abstract mathematical games and show how to)J56 467 :M-.037(play Go as a sum of local Go games.)A83 481 :M.935 .093(Section 5: Implementation issues of our model and differences to 'standard' Go)J56 493 :M.086(programs.)A83 507 :M.776 .078(Section 6: Limitations of our basic model and extensions designed to overcome)J56 519 :M-.117(these limitations.)A83 533 :M-.09(Section 7: Summary of our experiences and remaining research problems.)A56 562 :Mf0_16 sf-.191(1. Game Theories and Computer Game Playing)A83 587 :Mf3_12 sf.31 .031(Note: in this paper the term game is used exclusively for finite two person games)J56 599 :M1.046 .105(with perfect information, such as Go, Chess, Checkers, Othello, Nine Men's Morris,)J56 611 :M-.089(Shogi, Awari, and many abstract mathematical games. Not included are games of chance,)A56 623 :M-.002(imperfect information, or more than two players, such as Bridge, Scrabble, Blackjack or)A56 635 :M.202(Poker.)A56 664 :Mf0_14 sf3.452 .345(Classical Game Theory)J83 682 :Mf3_12 sf2.816 .282(Classical Game Theory was pioneered by von Neumann and others, who)J56 694 :M-.062(formalized and proved concepts game players had been applying for centuries [Neumann)A56 706 :M.052 .005(28, Neumann/Morgenstern 44]. In von Neumann's model of two-person  games, players)J56 718 :M-.141(alternate moves until they reach a terminal position. At a terminal position, the game value)Aendp%%Page: 2 2%%BeginPageSetupinitializepage(mm; page: 2 of 19)setjob%%EndPageSetup-29 -30 :TgS 29 30 538 781 rC85 79 :Mf3_12 sf.847 .085(is determined by an evaluation function. The minimax rule can be used to obtain the)J85 91 :M-.09(optimal values for nonterminal positions.)A112 105 :M.859 .086(Forward and backward search are practical applications of this theory. Forward)J85 117 :M.769 .077(search approximates a full game tree by a tree expanded up to some horizon, using a)J85 129 :M-.125(heuristic evaluation function to evaluate the leaves of this tree as if they were real terminal)A85 141 :M-.081(nodes. This tree is evaluated by a minimax procedure.)A112 155 :M1.252 .125(Exhaustive backward search, or retrograde analysis, constructs huge databases)J85 167 :M1.593 .159(containing information about )Jf4_12 sf.278(all)Af3_12 sf1.141 .114( positions of a game or subgame. Starting with the)J85 179 :M.69 .069(known values of all terminal positions, retrograde analysis computes the values of all)J85 191 :M.908 .091(other positions using the minimax rule. A forward searching program can then use a)J85 203 :M.318 .032(database containing all values from a subgame as if the positions in this subgame were)J85 215 :M-.103(terminal. This effectively reduces the size of the search space.)A112 229 :M1.414 .141(Both forward and backward search have proven successful in computer game)J85 241 :M-.107(playing. Many refinements have made forward search more practicable, such as alphabeta)A85 253 :M-.021(pruning, transposition tables, parallel search, and selective search expansion. Exhaustive)A85 265 :M1.295 .13(forward searching is currently feasible to a depth of 10 ply in chess, and 20 ply in)J85 277 :M-.053(Checkers and Awari.)A112 291 :M-.062(Many interesting databases have been computed by exhaustive backward search. In)A85 303 :M-.075(chess, all endgames up to 5 pieces [Thompson 86] and some with 6 pieces [Stiller 89] are)A85 315 :M.101 .01(solved. Databases exist for up to 8 pieces in Checkers [Schaeffer 92], up to 16 pieces in)J85 327 :M.503 .05(Nine Men's Morris [Gasser 92] and up to 20 stones in Awari [Gasser 92]. The biggest)J85 339 :M-.086(databases contain values of several billion positions.)A85 368 :Mf0_14 sf5.379 .538(Game-specific Theories)J112 386 :Mf3_12 sf.059 .006(Many specialized theories have been developed for solving a particular game, or a)J85 398 :M.316 .032(subgame such as King, Bishop and Knight against King, or 'KBNK', in chess.)J112 412 :M1.103 .11(The purpose of such theories is to reduce the search space, both by evaluating)J85 424 :M-.066(nonterminal positions and by supplying pruning rules which reduce the number of moves)A85 436 :M-.083(to be investigated in a forward search. Ideally a theory can solve a game by pure analysis,)A85 448 :M.336 .034(without any search. Another method applicable in some games is a decomposition into)J85 460 :M-.103(smaller parts which can then be analysed independently.)A112 474 :M.373 .037( A theory can be viewed as a compressed database: rules take much less space to)J85 486 :M1.261 .126(implement than exhaustive tables. Successful applications of specialized theories in)J85 498 :M-.06(conjunction with forward and backward search techniques are the solutions to 4-in-a-row)A85 510 :M-.065(and 5-in-a-row by Victor Allis [Allis 88, 92].)A112 524 :M.322 .032(Beyond strict theory, there is heuristics. Examples are formalized rules of thumb,)J85 536 :M.105 .011(or uses of a theory outside the space of guaranteed validity. A vast number of heuristics)J85 548 :M-.034(have been developed for the evaluation of game positions, and for pruning moves during)A85 560 :M-.12(selective search. Still other heuristic rules help decide when to apply heuristic evaluations:)A85 572 :Mf4_12 sf1.614 .161(Quiescence search)Jf3_12 sf.911 .091( is used to avoid evaluation of turbulent positions where heuristic)J85 584 :M-.037(evaluations often go wrong.)A85 613 :Mf0_16 sf-.225(2. Combinatorial Game Theory)A112 638 :Mf3_12 sf-.016(Combinatorial game theory has been developed and applied to many mathematical)A85 650 :M2.354 .235(games by Conway, Berlekamp and Guy among others [Conway 76, Berlekamp/)J85 662 :M-.087(Conway/ Guy 82]. This theory gives a very elegant mathematical definition of games that)A85 674 :M.753 .075(is more general than von Neumann's: It removes the condition that players must play)J85 686 :M-.124(alternately. Combinatorial game theory contains minimax theory as a special case. A main)A85 698 :M-.034(topic of the theory is the decomposition of games into independent subgames. This leads)A85 710 :M-.053(to the notion of a sum of games.)Aendp%%Page: 3 3%%BeginPageSetupinitializepage(mm; page: 3 of 19)setjob%%EndPageSetup-29 -30 :TgS 29 30 538 781 rC215 70 162 162 rC219 75 -1 1 224 74 1 219 74 @a-1 -1 220 79 1 1 219 74 @b219 84 -1 1 224 83 1 219 83 @a-1 -1 220 87 1 1 219 78 @b219 92 -1 1 224 91 1 219 91 @a-1 -1 220 96 1 1 219 87 @b6 7 219.5 100 @f6 7 219.5 108 @f219.5 116.5 3.5 @i7 8 219.5 125 @j219 134 -1 1 224 133 1 219 133 @a-1 -1 220 138 1 1 219 129 @b219 142 -1 1 224 141 1 219 141 @a-1 -1 220 146 1 1 219 137 @b219 151 -1 1 224 150 1 219 150 @a-1 -1 220 154 1 1 219 146 @b219.5 158.5 3 @e6 7 219.5 167 @f219 176 -1 1 224 175 1 219 175 @a-1 -1 220 180 1 1 219 171 @b219 184 -1 1 224 183 1 219 183 @a-1 -1 220 188 1 1 219 179 @b219 193 -1 1 224 192 1 219 192 @a-1 -1 220 196 1 1 219 188 @b219 201 -1 1 224 200 1 219 200 @a-1 -1 220 205 1 1 219 196 @b219 210 -1 1 224 209 1 219 209 @a-1 -1 220 213 1 1 219 204 @b6 7 219.5 217 @f219 226 -1 1 224 225 1 219 225 @a-1 -1 220 226 1 1 219 221 @b223 75 -1 1 232 74 1 223 74 @a-1 -1 229 79 1 1 228 74 @b228 83 4 @i228 91 4 @i228 100 4 @i228 108 3.5 @e7 6 228 116.5 @f228 125 3.5 @e228 133 3.5 @e228 142 3.5 @e228 150 3.5 @e8 7 228 158.5 @j223 168 -1 1 233 167 1 223 167 @a-1 -1 229 172 1 1 228 162 @b228 175 4 @i228 184 4 @i228 192 4 @i8 7 228 200.5 @j228 209 4 @i228 217 3.5 @e228 226 3.5 @e232 75 -1 1 241 74 1 232 74 @a-1 -1 237 79 1 1 236 74 @b236 83 4 @i232 92 -1 1 241 91 1 232 91 @a-1 -1 237 96 1 1 236 87 @b236 100 4 @i236 108 4 @i8 7 236 116.5 @j232 126 -1 1 241 125 1 232 125 @a-1 -1 237 130 1 1 236 120 @b232 134 -1 1 241 133 1 232 133 @a-1 -1 237 138 1 1 236 129 @b232 142 -1 1 241 141 1 232 141 @a-1 -1 237 147 1 1 236 137 @b236 150 3.5 @e8 7 236 158.5 @j232 168 -1 1 241 167 1 232 167 @a-1 -1 237 172 1 1 236 162 @b232 176 -1 1 241 175 1 232 175 @a-1 -1 237 180 1 1 236 171 @b232 184 -1 1 241 183 1 232 183 @a-1 -1 237 189 1 1 236 179 @b232 193 -1 1 241 192 1 232 192 @a-1 -1 237 197 1 1 236 188 @b8 7 236 200.5 @j232 210 -1 1 241 209 1 232 209 @a-1 -1 237 214 1 1 236 204 @b236 217 3.5 @e232 226 -1 1 241 225 1 232 225 @a-1 -1 237 227 1 1 236 221 @b7 6 245 74.5 @f245 83 4 @i240 92 -1 1 250 91 1 240 91 @a-1 -1 245 96 1 1 244 87 @b245 100 4 @i240 109 -1 1 250 108 1 240 108 @a-1 -1 245 113 1 1 244 104 @b8 7 245 116.5 @j245 125 3.5 @e245 133 3.5 @e240 142 -1 1 250 141 1 240 141 @a-1 -1 245 147 1 1 244 137 @b245 150 3.5 @e8 7 245 158.5 @j245 167 4 @i245 175 4 @i245 184 4 @i245 192 4 @i8 7 245 200.5 @j245 209 4 @i245 217 3.5 @e245 226 3.5 @e7 6 253 74.5 @f253 83 3.5 @e253 91 3.5 @e249 100 -1 1 258 99 1 249 99 @a-1 -1 254 105 1 1 253 95 @b249 109 -1 1 258 108 1 249 108 @a-1 -1 254 113 1 1 253 104 @b8 7 253 116.5 @j249 126 -1 1 258 125 1 249 125 @a-1 -1 254 130 1 1 253 120 @b253 133 3.5 @e249 142 -1 1 258 141 1 249 141 @a-1 -1 254 147 1 1 253 137 @b253 150 3.5 @e7 6 253 158.5 @f253 167 4 @i249 176 -1 1 258 175 1 249 175 @a-1 -1 254 180 1 1 253 171 @b249 184 -1 1 258 183 1 249 183 @a-1 -1 254 189 1 1 253 179 @b249 193 -1 1 258 192 1 249 192 @a-1 -1 254 197 1 1 253 188 @b249 201 -1 1 258 200 1 249 200 @a-1 -1 254 205 1 1 253 196 @b249 210 -1 1 258 209 1 249 209 @a-1 -1 254 214 1 1 253 204 @b253 217 4 @i253 226 4 @i261.5 74.5 3 @e7 8 261.5 83 @j7 8 261.5 91 @j7 8 261.5 100 @j7 8 261.5 108 @j261.5 116.5 3.5 @i7 8 261.5 125 @j6 7 261.5 133 @f257 142 -1 1 266 141 1 257 141 @a-1 -1 262 147 1 1 261 137 @b257 151 -1 1 266 150 1 257 150 @a-1 -1 262 155 1 1 261 146 @b261.5 158.5 3 @e7 8 261.5 167 @j257 176 -1 1 266 175 1 257 175 @a-1 -1 262 180 1 1 261 171 @b7 8 261.5 184 @j7 8 261.5 192 @j261.5 200.5 3.5 @i7 8 261.5 209 @j6 7 261.5 217 @f7 8 261.5 226 @j7 6 270 74.5 @f270 83 3.5 @e270 91 3.5 @e270 100 3.5 @e265 109 -1 1 275 108 1 265 108 @a-1 -1 271 113 1 1 270 104 @b265 117 -1 1 275 116 1 265 116 @a-1 -1 271 121 1 1 270 112 @b270 125 4 @i270 133 3.5 @e270 142 3.5 @e265 151 -1 1 275 150 1 265 150 @a-1 -1 271 155 1 1 270 146 @b7 6 270 158.5 @f270 167 4 @i270 175 4 @i270 184 4 @i270 192 3.5 @e7 6 270 200.5 @f270 209 3.5 @e270 217 3.5 @e270 226 4 @i7 6 278 74.5 @f278 83 4 @i278 91 4 @i274 100 -1 1 283 99 1 274 99 @a-1 -1 279 105 1 1 278 95 @b278 108 4 @i274 117 -1 1 283 116 1 274 116 @a-1 -1 279 121 1 1 278 112 @b278 125 4 @i278 133 4 @i274 142 -1 1 283 141 1 274 141 @a-1 -1 279 147 1 1 278 137 @b274 151 -1 1 283 150 1 274 150 @a-1 -1 279 155 1 1 278 146 @b7 6 278 158.5 @f278 167 4 @i274 176 -1 1 283 175 1 274 175 @a-1 -1 279 180 1 1 278 171 @b278 184 3.5 @e278 192 3.5 @e274 201 -1 1 283 200 1 274 200 @a-1 -1 279 205 1 1 278 196 @b274 210 -1 1 283 209 1 274 209 @a-1 -1 279 214 1 1 278 204 @b274 218 -1 1 283 217 1 274 217 @a-1 -1 279 222 1 1 278 213 @b278 226 4 @i282 75 -1 1 291 74 1 282 74 @a-1 -1 287 79 1 1 286 74 @b287 83 3.5 @e287 91 4 @i282 100 -1 1 292 99 1 282 99 @a-1 -1 287 105 1 1 286 95 @b287 108 4 @i282 117 -1 1 292 116 1 282 116 @a-1 -1 287 121 1 1 286 112 @b287 125 4 @i287 133 4 @i287 142 3.5 @e287 150 3.5 @e7 6 287 158.5 @f287 167 3.5 @e287 175 3.5 @e282 184 -1 1 292 183 1 282 183 @a-1 -1 287 189 1 1 286 179 @b287 192 3.5 @e282 201 -1 1 292 200 1 282 200 @a-1 -1 287 205 1 1 286 196 @b287 209 3.5 @e287 217 4 @i287 226 4 @i7 6 295 74.5 @f295 83 3.5 @e295 91 4 @i291 100 -1 1 300 99 1 291 99 @a-1 -1 296 105 1 1 295 95 @b295 100 1 @i295 108 4 @i291 117 -1 1 300 116 1 291 116 @a-1 -1 296 121 1 1 295 112 @b291 126 -1 1 300 125 1 291 125 @a-1 -1 296 130 1 1 295 120 @b295 133 4 @i295 142 4 @i295 150 4 @i8 7 295 158.5 @j295 167 4 @i295 175 4 @i295 184 3.5 @e291 193 -1 1 300 192 1 291 192 @a-1 -1 296 197 1 1 295 188 @b7 6 295 200.5 @f295 209 3.5 @e295 217 3.5 @e295 226 4 @i299 75 -1 1 308 74 1 299 74 @a-1 -1 304 79 1 1 303 74 @b6 7 303.5 83 @f7 8 303.5 91 @j7 8 303.5 100 @j7 8 303.5 108 @j303.5 116.5 3.5 @i299 126 -1 1 308 125 1 299 125 @a-1 -1 304 130 1 1 303 120 @b7 8 303.5 133 @j299 142 -1 1 308 141 1 299 141 @a-1 -1 304 147 1 1 303 137 @b299 151 -1 1 308 150 1 299 150 @a-1 -1 304 155 1 1 303 146 @b299 159 -1 1 308 158 1 299 158 @a-1 -1 304 163 1 1 303 154 @b299 168 -1 1 308 167 1 299 167 @a-1 -1 304 172 1 1 303 162 @b299 176 -1 1 308 175 1 299 175 @a-1 -1 304 180 1 1 303 171 @b7 8 303.5 184 @j6 7 303.5 192 @f303.5 200.5 3 @e299 210 -1 1 308 209 1 299 209 @a-1 -1 304 214 1 1 303 204 @b299 218 -1 1 308 217 1 299 217 @a-1 -1 304 222 1 1 303 213 @b7 8 303.5 226 @j7 6 312 74.5 @f312 83 3.5 @e312 91 4 @i307 100 -1 1 317 99 1 307 99 @a-1 -1 313 105 1 1 312 95 @b307 109 -1 1 317 108 1 307 108 @a-1 -1 313 113 1 1 312 104 @b307 117 -1 1 317 116 1 307 116 @a-1 -1 313 121 1 1 312 112 @b312 125 4 @i307 134 -1 1 317 133 1 307 133 @a-1 -1 313 138 1 1 312 129 @b307 142 -1 1 317 141 1 307 141 @a-1 -1 313 147 1 1 312 137 @b307 151 -1 1 317 150 1 307 150 @a-1 -1 313 155 1 1 312 146 @b307 159 -1 1 317 158 1 307 158 @a-1 -1 313 163 1 1 312 154 @b312 167 4 @i307 176 -1 1 317 175 1 307 175 @a-1 -1 313 180 1 1 312 171 @b312 184 4 @i307 193 -1 1 317 192 1 307 192 @a-1 -1 313 197 1 1 312 188 @b307 201 -1 1 317 200 1 307 200 @a-1 -1 313 205 1 1 312 196 @b307 210 -1 1 317 209 1 307 209 @a-1 -1 313 214 1 1 312 204 @b312 217 3.5 @e312 226 4 @i316 75 -1 1 325 74 1 316 74 @a-1 -1 321 79 1 1 320 74 @b320 83 3.5 @e320 91 4 @i316 100 -1 1 325 99 1 316 99 @a-1 -1 321 105 1 1 320 95 @b316 109 -1 1 325 108 1 316 108 @a-1 -1 321 113 1 1 320 104 @b8 7 320 116.5 @j316 126 -1 1 325 125 1 316 125 @a-1 -1 321 130 1 1 320 120 @b316 134 -1 1 325 133 1 316 133 @a-1 -1 321 138 1 1 320 129 @b320 142 4 @i316 151 -1 1 325 150 1 316 150 @a-1 -1 321 155 1 1 320 146 @b8 7 320 158.5 @j316 168 -1 1 325 167 1 316 167 @a-1 -1 321 172 1 1 320 162 @b320 175 4 @i320 184 3.5 @e320 192 3.5 @e7 6 320 200.5 @f320 209 3.5 @e320 217 3.5 @e320 226 4 @i7 6 329 74.5 @f329 83 3.5 @e329 91 4 @i324 100 -1 1 334 99 1 324 99 @a-1 -1 329 105 1 1 328 95 @b329 108 4 @i324 117 -1 1 334 116 1 324 116 @a-1 -1 329 121 1 1 328 112 @b329 125 4 @i329 133 4 @i324 142 -1 1 334 141 1 324 141 @a-1 -1 329 147 1 1 328 137 @b329 150 4 @i8 7 329 158.5 @j324 168 -1 1 334 167 1 324 167 @a-1 -1 329 172 1 1 328 162 @b329 175 4 @i324 184 -1 1 334 183 1 324 183 @a-1 -1 329 189 1 1 328 179 @b324 193 -1 1 334 192 1 324 192 @a-1 -1 329 197 1 1 328 188 @b324 201 -1 1 334 200 1 324 200 @a-1 -1 329 205 1 1 328 196 @b324 210 -1 1 334 209 1 324 209 @a-1 -1 329 214 1 1 328 204 @b324 218 -1 1 334 217 1 324 217 @a-1 -1 329 222 1 1 328 213 @b329 226 4 @i333 75 -1 1 341 74 1 333 74 @a-1 -1 338 79 1 1 337 74 @b333 84 -1 1 342 83 1 333 83 @a-1 -1 338 88 1 1 337 78 @b337 91 4 @i333 100 -1 1 342 99 1 333 99 @a-1 -1 338 105 1 1 337 95 @b337 108 4 @i7 6 337 116.5 @f337 125 4 @i337 133 3.5 @e337 142 3.5 @e337 150 3.5 @e7 6 337 158.5 @f337 167 4 @i337 175 3.5 @e337 184 3.5 @e337 192 3.5 @e7 6 337 200.5 @f337 209 3.5 @e337 217 3.5 @e337 226 3.5 @e341 75 -1 1 350 74 1 341 74 @a-1 -1 346 79 1 1 345 74 @b6 7 345.5 83 @f6 7 345.5 91 @f341 100 -1 1 350 99 1 341 99 @a-1 -1 346 105 1 1 345 95 @b1 2 345.5 100 @j7 8 345.5 108 @j341 117 -1 1 350 116 1 341 116 @a-1 -1 346 121 1 1 345 112 @b7 8 345.5 125 @j6 7 345.5 133 @f341 142 -1 1 350 141 1 341 141 @a-1 -1 346 147 1 1 345 137 @b341 151 -1 1 350 150 1 341 150 @a-1 -1 346 155 1 1 345 146 @b1 2 345.5 150 @j345.5 158.5 3.5 @i7 8 345.5 167 @j341 176 -1 1 350 175 1 341 175 @a-1 -1 346 180 1 1 345 171 @b341 184 -1 1 350 183 1 341 183 @a-1 -1 346 189 1 1 345 179 @b341 193 -1 1 350 192 1 341 192 @a-1 -1 346 197 1 1 345 188 @b341 201 -1 1 350 200 1 341 200 @a-1 -1 346 205 1 1 345 196 @b345.5 200.5 0.5 @i6 7 345.5 209 @f7 8 345.5 217 @j7 8 345.5 226 @j349 75 -1 1 358 74 1 349 74 @a-1 -1 355 79 1 1 354 74 @b354 83 3.5 @e349 92 -1 1 359 91 1 349 91 @a-1 -1 355 96 1 1 354 87 @b354 100 3.5 @e354 108 4 @i349 117 -1 1 359 116 1 349 116 @a-1 -1 355 121 1 1 354 112 @b354 125 4 @i354 133 3.5 @e349 142 -1 1 359 141 1 349 141 @a-1 -1 355 147 1 1 354 137 @b354 150 3.5 @e349 159 -1 1 359 158 1 349 158 @a-1 -1 355 163 1 1 354 154 @b354 167 3.5 @e354 175 3.5 @e354 184 3.5 @e354 192 3.5 @e349 201 -1 1 359 200 1 349 200 @a-1 -1 355 205 1 1 354 196 @b354 209 3.5 @e354 217 4 @i349 226 -1 1 358 225 1 349 225 @a-1 -1 355 227 1 1 354 221 @b358 75 -1 1 367 74 1 358 74 @a-1 -1 363 79 1 1 362 74 @b358 84 -1 1 367 83 1 358 83 @a-1 -1 363 88 1 1 362 78 @b362 91 3.5 @e362 100 3.5 @e362 108 4 @i358 117 -1 1 367 116 1 358 116 @a-1 -1 363 121 1 1 362 112 @b362 125 4 @i362 133 3.5 @e362 142 3.5 @e362 150 3.5 @e358 159 -1 1 367 158 1 358 158 @a-1 -1 363 163 1 1 362 154 @b362 167 3.5 @e358 176 -1 1 367 175 1 358 175 @a-1 -1 363 180 1 1 362 171 @b358 184 -1 1 367 183 1 358 183 @a-1 -1 363 189 1 1 362 179 @b362 192 3.5 @e7 6 362 200.5 @f362 209 3.5 @e362 217 4 @i362 226 4 @i366 75 -1 1 371 74 1 366 74 @a-1 -1 371 79 1 1 370 74 @b366 84 -1 1 372 83 1 366 83 @a-1 -1 371 87 1 1 370 78 @b366 92 -1 1 372 91 1 366 91 @a-1 -1 371 96 1 1 370 87 @b371 100 3.5 @e371 108 3.5 @e7 6 371 116.5 @f371 125 3.5 @e366 134 -1 1 372 133 1 366 133 @a-1 -1 371 138 1 1 370 129 @b366 142 -1 1 372 141 1 366 141 @a-1 -1 371 146 1 1 370 137 @b366 151 -1 1 372 150 1 366 150 @a-1 -1 371 154 1 1 370 146 @b7 6 371 158.5 @f366 168 -1 1 372 167 1 366 167 @a-1 -1 371 171 1 1 370 162 @b366 176 -1 1 372 175 1 366 175 @a-1 -1 371 180 1 1 370 171 @b366 184 -1 1 372 183 1 366 183 @a-1 -1 371 188 1 1 370 179 @b366 193 -1 1 372 192 1 366 192 @a-1 -1 371 196 1 1 370 188 @b366 201 -1 1 372 200 1 366 200 @a-1 -1 371 205 1 1 370 196 @b366 210 -1 1 372 209 1 366 209 @a-1 -1 371 213 1 1 370 204 @b371 217 4 @i366 226 -1 1 371 225 1 366 225 @a-1 -1 371 226 1 1 370 221 @bgRgS 29 30 538 781 rC204 251 :Mf4_12 sf-.046(Berlekamp's 9-Dan Stumping Problem)A112 275 :Mf3_12 sf1.012 .101(Recently,  Berlekamp and his students have successfully applied combinatorial)J85 287 :M.31 .031(game theory to Go Endgames [Berlekamp 91]. Anyone who has studied the theory can)J85 299 :M-.09(now beat professional Go players in carefully designed endgame positions containing lots)A85 311 :M1.285 .129(of similar looking, relatively simple independent local games. We are not aware of)J85 323 :M-.103(applications to traditional board games other than Go. Most games do not decompose into)A85 335 :M.333(sums.)A85 364 :Mf0_14 sf3.667 .367(Basic Definitions and Notation)J112 382 :Mf3_12 sf4.415 .442(For an introduction to combinatorial game theory, see [Conway 76],)J85 394 :M.091 .009([Berlekamp/Conway/Guy 82], [Berlekamp 91] or [High 92]. Note that we use the terms)J85 406 :M-.12(game, mathematical game, game position and position interchangeably. They all mean the)A85 418 :M-.064(same thing here.)A112 432 :M-.094(A )Af4_12 sf-.105(game)Af3_12 sf-.076( is played by two players called )Af4_12 sf-.075(Left)Af3_12 sf-.078( \(Black\) and )Af4_12 sf-.084(Right)Af3_12 sf-.076( \(White\). It is defined)A85 444 :M-.054(by its left and right )Af4_12 sf-.064(options)Af3_12 sf-.062(, i.e. the game positions to which Left and Right can move.)A227 470 :Mf4_12 sf.844 .084(G = { L)Jf4_9 sf0 2 rm.378(1)A0 -2 rmf4_12 sf.49(,\311,L)Af4_9 sf0 2 rm.378(n)A0 -2 rmf4_12 sf.581 .058( | R)Jf4_9 sf0 2 rm.378(1)A0 -2 rmf4_12 sf.503(,\311,R)Af4_9 sf0 2 rm.612 .061(m )J0 -2 rmf4_12 sf(})S244 492 :Mf3_12 sf(or)S271 492 :Mf4_12 sf.213 .021(G = { G)Jf4_9 sf0 2 rm.1(L)A0 -2 rmf4_12 sf.15 .015( | G)Jf4_9 sf0 2 rm.11(R)A0 -2 rmf4_12 sf.142 .014( })J112 516 :Mf3_12 sf.501 .05(This definition is recursive: L)Jf4_9 sf0 2 rm.062(i)A0 -2 rmf3_12 sf.301 .03( and R)Jf4_9 sf0 2 rm.062(j)A0 -2 rmf3_12 sf.401 .04( are again games. G)Jf3_9 sf0 2 rm.137(L)A0 -2 rmf3_12 sf.307 .031( and G)Jf3_9 sf0 2 rm.15(R)A0 -2 rmf3_12 sf.391 .039( denote sets of)J85 528 :M-.03(games here.)A112 542 :M-.066(The )Af4_12 sf-.065(inverse game)Af3_12 sf-.058( -G is constructed by swapping colors. Its definition is)A252 568 :Mf4_12 sf.213 .021(-G = { -G)Jf4_9 sf0 2 rm.097(R)A0 -2 rmf4_12 sf.154 .015( | -G)Jf4_9 sf0 2 rm.088(L)A0 -2 rmf4_12 sf.125 .012( })J112 592 :Mf3_12 sf.082 .008(An integer )Jf4_12 sf.029(number)Af3_12 sf( )Sf4_12 sf(n)Sf3_12 sf.076 .008( can be represented as the game where Left can move )Jf4_12 sf(n)Sf3_12 sf.091 .009( times)J85 604 :M.679 .068(whereas Right has no move, e.g. )Jf4_12 sf.499 .05(0 = {|}, 1 = {0|}, n+1)Jf3_12 sf.303 .03( = {)Jf4_12 sf.236(n)Af3_12 sf.886 .089(|}. Negative numbers are)J85 616 :M.045 .005(the inverses of positive numbers, e.g.)J216 630 :Mf4_12 sf.022 .002(-2 = -\(2\) = -{1|} = {|-1} = \311 = {|{|0}})J112 644 :Mf3_12 sf.122 .012(There are games corresponding to fractional numbers too, such as )Jf4_12 sf.111 .011(1/2 = {0|1})Jf3_12 sf.099 .01( and)J85 656 :Mf4_12 sf.098 .01(1/4 = {0|1/2})Jf3_12 sf(.)S112 670 :M-.025(The )Af4_12 sf-.032(Sum)Af3_12 sf-.023( of games )Af4_12 sf(G)Sf3_12 sf-.022( and )Af4_12 sf(H)Sf3_12 sf-.022( is defined as:)A182 696 :Mf4_12 sf.017 .002(G + H = { G + H)Jf4_9 sf0 2 rm(L)S0 -2 rmf4_12 sf(, G)Sf4_9 sf0 2 rm(L )S0 -2 rmf4_12 sf.017 .002(+ H | G + H)Jf4_9 sf0 2 rm(R)S0 -2 rmf4_12 sf(, G)Sf4_9 sf0 2 rm(R )S0 -2 rmf4_12 sf(+ H })S112 720 :Mf3_12 sf.666 .067( A move in a sum game )Jf4_12 sf.444(G+H)Af3_12 sf.731 .073( is therefore a move in either )Jf4_12 sf.454(G)Af3_12 sf.349 .035( or )Jf4_12 sf.454(H)Af3_12 sf1.042 .104(. Games and)J85 732 :M-.102(sums as defined above have the mathematical structure of a group.)A112 746 :Mf4_12 sf.211(Loopy)Af3_12 sf.483 .048( games: It is possible to define a game in terms of itself, as in )Jf4_12 sf.643 .064(G = {G|G})Jf3_12 sf(.)S85 758 :M.439 .044(Most of the theory only applies to )Jf4_12 sf.139(loopfree)Af3_12 sf.477 .048( games. In Go, loopy games appear only in)Jendp%%Page: 4 4%%BeginPageSetupinitializepage(mm; page: 4 of 19)setjob%%EndPageSetup-29 -30 :TgS 29 30 538 781 rC85 79 :Mf3_12 sf.902 .09(Ko fights. We will assume all games are loopfree from now on, except for section 6)J85 91 :M.211 .021(when we discuss Ko fights.)J112 105 :M.313 .031(Notation: In a sum game )Jf4_12 sf.493 .049(G = A+B+C+\311)Jf3_12 sf.287 .029(, the single games )Jf4_12 sf.317 .032(A, B, C,\311)Jf3_12 sf.312 .031( are called)J85 117 :Mf4_12 sf.36 .036(subgames )Jf3_12 sf.136 .014(of )Jf4_12 sf.118(G)Af3_12 sf(.)S112 131 :M1.217 .122(To abbreviate notation of games, curly braces can be omitted, and precedence)J85 143 :M-.102(indicated by multiple slashes.)A112 157 :M-.143(Example: )Af4_12 sf-.111({3 | {2 | 1}}  =  3 | {2 | 1}  =  3 || 2 | 1)A85 186 :Mf0_14 sf2.837 .284(Some Useful Operations and Functions on Mathematical Games)J85 214 :Mf0_12 sf2.926 .293(Comparing Games)J112 232 :Mf3_12 sf.042 .004(We can define the following partial order on games: )Jf4_12 sf.019(G)AcFf5_12 sf.019<B3>Asf.019(H)Af3_12 sf.029 .003( if Left can do at least as)J85 244 :M.145 .014(well in )Jf4_12 sf.098(G)Af3_12 sf.086 .009( as in )Jf4_12 sf.098(H)Af3_12 sf.195 .02( under any circumstances, i.e. any sum )Jf4_12 sf.175 .017(G + Rest)Jf3_12 sf.142 .014( is at least as good for)J85 256 :M-.055(Left as )Af4_12 sf-.066(H + Rest)Af3_12 sf-.059(. This partial order can be used for pruning options of a game.)A85 280 :Mf0_12 sf2.889 .289(Dominated and Reversible moves)J113 300 :Mf3_12 sf-.125(There are two rules for simplifying a game tree:)A113 316 :M1.09 .109(1.\) Remove dominated moves: If )Jf4_12 sf1.161 .116(G = {A,B,C..|..})Jf3_12 sf.555 .055(, and )Jf4_12 sf.388(A)AcFf5_12 sf.388<B3>Asf.388(B)Af3_12 sf.602 .06(, then )Jf4_12 sf.401(A)Af3_12 sf1.508 .151( dominates)J124 330 :Mf4_12 sf.173(B)Af3_12 sf.239 .024(, and )Jf4_12 sf.173(B)Af3_12 sf.332 .033( can be omitted: )Jf4_12 sf.579 .058(G = {A,C,\311|\311})J113 362 :Mf3_12 sf.816 .082(2.\) Reverse reversible moves: If )Jf4_12 sf.917 .092(G = {A,B,C..|..})Jf3_12 sf.438 .044(, and )Jf4_12 sf.317(A)Af3_12 sf.554 .055( has a right option )Jf4_12 sf.317(A)Af4_9 sf0 2 rm.238(R)A0 -2 rmf4_12 sf.377 .038( )JcFf5_12 sf.377 .038<A3>Jsf124 376 :M1.312(G)Af3_12 sf2.118 .212(, then Lefts move to )Jf4_12 sf1.11(A)Af3_12 sf2.644 .264( reverses through Right's move to )Jf4_12 sf1.11(A)Af4_9 sf0 2 rm.833(R)A0 -2 rmf3_12 sf1.049 .105(: If )Jf4_12 sf1.11(A)Af4_9 sf0 2 rm.833(R)A0 -2 rmf4_12 sf1.528 .153( =)J124 390 :M.605({A)Af4_9 sf0 2 rm.449(1)A0 -2 rmf4_12 sf.515(,A)Af4_9 sf0 2 rm.449(2)A0 -2 rmf4_12 sf.515(,A)Af4_9 sf0 2 rm.449(3)A0 -2 rmf4_12 sf.734<C97CC97D>Af3_12 sf1.096 .11(, then )Jf4_12 sf1.339 .134(G = {A)Jf4_9 sf0 2 rm.449(1)A0 -2 rmf4_12 sf.515(,A)Af4_9 sf0 2 rm.449(2)A0 -2 rmf4_12 sf.515(,A)Af4_9 sf0 2 rm.449(3)A0 -2 rmf4_12 sf.673(,\311,B,C,\311|\311})A113 422 :Mf3_12 sf-.01(Analogous definitions hold for Right's moves.)A113 438 :M-.062(Applying these rules as often as possible leads to a unique )Af4_12 sf-.072(normal form)Af3_12 sf-.079(..)A85 462 :Mf0_12 sf.833(Cooling)A112 480 :Mf3_12 sf-.039(Cooling transforms a game into a simpler one by adding a 'tax' on every move. It is)A85 492 :M-.011(a homomorphism used to simplify a game while retaining much of its structure. Cooling)A85 504 :M-.043(reduces the )Af4_12 sf-.048(temperature)Af3_12 sf-.041( of a 'hot' game. It does not change the )Af4_12 sf-.049(mean value)Af3_12 sf-.048(. Cooling by 1)A85 516 :M-.033(is an 'almost' isomorphic mapping for  Go-like loopfree games [Berlekamp 91].)A85 540 :Mf0_12 sf.204(Temperature)A112 558 :Mf3_12 sf-.047(Temperature is an estimate how urgent it is to make a move in a game. It is defined)A85 570 :M.589 .059(as the smallest )Jf4_12 sf.804 .08(cooling )Jf3_12 sf.679 .068(value such that the)Jf4_12 sf.606 .061( Leftscore )Jf3_12 sf.764 .076(and the)Jf4_12 sf.672 .067( Rightscore )Jf3_12 sf.726 .073(of the cooled)J85 582 :M.467 .047(game are the same. Cooling a game by more than its temperature yields a number, the)J85 594 :Mf4_12 sf-.122(mean value)Af3_12 sf-.116( of the game.)A85 618 :Mf0_12 sf1.938 .194(Mean Value)J112 636 :Mf3_12 sf1.807 .181(A measure how many points a game is worth on average. This must not be)J85 648 :M.265 .026(confused with the 'value of moving in a game', which cannot be expressed as a number)J85 660 :M-.114(in general. The mean value is linear: )Af4_12 sf-.143(mean \(A+B\) = mean\(A\) + mean\(B\))A85 684 :Mf0_12 sf.586(Incentive)A112 702 :Mf3_12 sf.073 .007(The improvement made by moving in a game, defined as the difference between a)J85 714 :M-.064(game and an option of this game. Incentives are games, not numbers. They are defined to)A85 726 :M-.123(be non-negative \(for games in canonical form\):)A258 754 :Mf4_12 sf-.064(Left incentive = G)Af4_9 sf0 2 rm-.066(L)A0 -2 rmf4_12 sf-.167(-G)Aendp%%Page: 5 5%%BeginPageSetupinitializepage(mm; page: 5 of 19)setjob%%EndPageSetup-29 -30 :TgS 29 30 538 781 rC254 79 :Mf4_12 sf-.055(Right incentive = G-G)Af4_9 sf0 2 rm(R)S0 -2 rm85 103 :Mf0_12 sf3.114 .311(Leftscore and Rightscore)J112 121 :Mf3_12 sf.121 .012(Leftscore and Rightscore provide some connection to classical game theory: They)J85 133 :M.083 .008(are the minimax values of a game when players move alternately and Left \(Right\) plays)J85 145 :M.136(first.)A85 169 :Mf0_12 sf4.173 .417(Switching Games)J112 187 :Mf3_12 sf.688 .069(Switching games are the simplest 'hot' games, with a )Jf4_12 sf.205(temperature)Af3_12 sf.292 .029( > 0. A )Jf4_12 sf.236(switch)A85 199 :M.077(a|b)Af3_12 sf.171 .017(, with )Jf4_12 sf.102(a>b)Af3_12 sf.221 .022(, has mean value )Jf4_12 sf.081(\(a+b\)/2)Af3_12 sf.27 .027( and temperature )Jf4_12 sf.072(\(a-b\)/2)Af3_12 sf.211 .021(. One can play a sum of)J85 211 :M-.022(switches optimally by moving in the switch with highest temperature. This strategy does)A85 223 :Mf4_12 sf-.065(not)Af3_12 sf-.065( always work for sums of other games more complicated than switches.)A85 252 :Mf0_14 sf2.43 .243(Sente and Gote)J112 270 :Mf3_12 sf-.054(The term )Af4_12 sf-.052(sente)Af3_12 sf-.051( is used if a move poses a threat big enough that it must be answered)A85 282 :M.358 .036(in the same subgame. A )Jf4_12 sf.114(gote)Af3_12 sf.371 .037( move can be ignored. For example, the switch )Jf4_12 sf.113(n|0)Af3_12 sf.137 .014( is a )Jf4_12 sf.133(n)Af3_12 sf(-)S85 294 :M.585 .058(point gote move for both players. It is important to understand that sente and gote are)J85 306 :M.225 .022(relative terms and depend on the size of the threat behind a move. Theory gives a more)J85 318 :M.733 .073(precise meaning to such notions and can explain some rules of thumb concerning the)J85 330 :M.689 .069(value of such moves. In the Go literature, special phrases are used for moves that are)J85 342 :M.221 .022(sente for both players, take away an opponent's sente move, or have a continuation that)J85 354 :M.192 .019(is sente.)J112 368 :M-.018(Example: In the game )Af4_12 sf-.018(BIG|n||0)Af3_12 sf-.015(, Left can get )Af4_12 sf(n)Sf3_12 sf-.016( points 'for free' by moving to )Af4_12 sf-.025(BIG|n)A85 380 :Mf3_12 sf-.02(because Right must prevent Left's move to )Af4_12 sf-.027(BIG)Af3_12 sf-.019(. A Right )Af4_12 sf-.02(gyaku yose )Af3_12 sf-.021(move to )Af4_12 sf(0)Sf3_12 sf-.018( is said to)A85 392 :M.03 .003(be almost twice as big as moving in a simple switch )Jf4_12 sf(n|0)Sf3_12 sf.049 .005(. Combinatorial theory confirms)J85 404 :M.651 .065(this rule of thumb. For example, the temperature of )Jf4_12 sf.198(10|0)Af3_12 sf.461 .046( is 5, but rises to 15/2 for the)J85 416 :M-.121(game )Af4_12 sf-.104(20|10||0)Af3_12 sf-.094( and to 10 for )Af4_12 sf-.109(BIG|10||0, BIG )AcFf5_12 sf-.109<B3>Asf-.109( 30)Af3_12 sf(.)S85 445 :Mf0_14 sf2.306 .231(Good and Optimal Play in Sum Games)J112 463 :Mf3_12 sf.998 .1(Move decision in a sum game proceeds in two stages: First we must select the)J85 475 :M.134 .013(subgame which contains the move to be played, then choose a move from all options in)J85 487 :M.239 .024(this game. We can distinguish )Jf4_12 sf.066(global)Af3_12 sf.227 .023( algorithms that need to compute the sum game to)J85 499 :M-.128(make a move decision from )Af4_12 sf-.117(local)Af3_12 sf-.12( algorithms that do not need the sum.)A85 523 :Mf0_12 sf2.566 .257(Evaluation of Sum Games)J112 541 :Mf3_12 sf.748 .075(Before attempting any evaluation, it is a good idea to bring all local games into)J85 553 :M-.085(canonical form, then )Af4_12 sf-.09(cool)Af3_12 sf-.087( them by 1. This simplifies the games considerably and does not)A85 565 :M-.124(change the outcome of the computation.)A112 579 :M.073 .007(For simple sums, a brute force evaluation is possible: compute the sum, determine)J85 591 :M.633 .063(the Leftscore \(or Rightscore\) of the sum and try all possible moves to find one which)J85 603 :M.067 .007(retains this score. This method is already better than a brute force global search because)J85 615 :M.785 .079(the local games have been simplified, and some more pruning may take place during)J85 627 :M1.738 .174(computation of he sum. Still, direct computation of the sum quickly becomes too)J85 639 :M-.087(complex for realistic subgames.)A85 651 :M-.268(Example: The canonical form of )Af4_12 sf-.257(1|0 + 2|0 + 3|0 + 4|0 + 5|0)Af3_12 sf-.287( is)A98 673 :Mf4_12 sf-.544({15|14||13|12|||12|11||10|9}|{11|10||9|8|||8|7||6|5}||{10|9||8|7|||7|6||5|4}|{6|5||4|3|||3|2||1|0})A112 697 :Mf3_12 sf.128 .013(Often we can play perfectly without computing the sum by proving that a move is)J85 709 :M(optimal. )Sf4_12 sf(Incentives)Sf3_12 sf-.003( of moves can be computed locally: If )Af4_12 sf(G = A+B+C+\311 )Sf3_12 sf(and we move)S85 721 :M.675 .068(from )Jf4_12 sf.282(A)Af3_12 sf.246 .025( to )Jf4_12 sf.282(A)Af4_9 sf0 2 rm.193(L)A0 -2 rmf3_12 sf.675 .068(, the Left incentive becomes )Jf4_12 sf.333(G)Af4_9 sf0 2 rm.193(L)A0 -2 rmf4_12 sf.27(-G=A)Af4_9 sf0 2 rm.193(L)A0 -2 rmf4_12 sf1.36 .136(+B+C+\311-\(A+B+C+\311\) = A)Jf4_9 sf0 2 rm.193(L)A0 -2 rmf4_12 sf.218(-A)Af3_12 sf(.)S85 733 :M.363 .036(The incentive depends only on the subgame A containing the move. It is easy to prove)J85 745 :M-.054(that we may prune all moves with dominated incentives. Often, only one candidate move)A85 757 :M-.089(will remain.)Aendp%%Page: 6 6%%BeginPageSetupinitializepage(mm; page: 6 of 19)setjob%%EndPageSetup-29 -30 :TgS 29 30 538 781 rC112 79 :Mf3_12 sf-.061(Otherwise, the optimal move may be hard to find. A simple approximate strategy is)A85 91 :M-.066(to play in a hottest subgame. A better algorithm is Thermostrat [Berlekamp/Conway/Guy)A85 103 :M.455 .046(82], [Berlekamp 92]. This algorithm bounds the maximum error by the temperature of)J85 115 :M1.286 .129(the hottest subgame. It is a local algorithm that only needs a relatively simple data)J85 127 :M-.08(structure, the )Af4_12 sf-.104(thermograph)Af3_12 sf-.099( of each subgame.)A85 156 :Mf0_16 sf-.18(3. Applications of Theories to Go Programs)A85 196 :Mf0_14 sf2.698 .27(State of Computer Go)J112 214 :Mf3_12 sf-.045(With the single exception of chess, more programming effort must have been spent)A85 226 :M1.024 .102(on Go than on any other game. But in playing strength measured on a human scale,)J85 238 :M.901 .09(programs for Go lag far behind their counterparts in Checkers, Awari or Nine Men's)J85 250 :M-.063(Morris. Reasons for this sad state of affairs can be found both in the inherent difficulty of)A85 262 :M-.108(the game and in the limitations of existing programs.)A85 291 :Mf0_14 sf2.572 .257(Some facts that make Go a difficult Game)J85 319 :Mf0_12 sf2.218 .222(Size and Structure of the Problem Space)J112 337 :Mf3_12 sf.633 .063(The size of the search space for 19x19 Go is probably the biggest of all popular)J85 349 :M.384(games)Af3_10 sf0 -3 rm.143 .014( )J0 3 rmf3_12 sf1.156 .116([Allis et al. 91]. No simple yet reasonable evaluation function exists. This is)J85 361 :M2.224 .222(evident to all serious Go players, and confirmed by the fact that many difficult)J85 373 :M1.127 .113(combinatorial problems can be formulated as Go problems [Lichtenstein/Sipser 78],)J85 385 :M.315 .031([Morris 81], [Robson 83].)J112 399 :M-.102(A Go position can be highly structured, making perfect play possible with very little)A85 411 :M.439 .044(search and a good theory, as in Berlekamp's problems. But it can also be very chaotic,)J85 423 :M.433 .043(leaving no alternatives to exhaustive analysis. Therefore a good Go program will need)J85 435 :M-.05(both good theories and lots of computing power.)A85 459 :Mf0_12 sf2.274 .227(Quality and Quantity of Human Knowledge)J112 477 :Mf3_12 sf.024 .002(Humans are able to recognize the very subtle differences in Go positions that have)J85 489 :M.144 .014(big effects later. Professionals know by intuition if a group can be killed or not. Strictly)J85 501 :M.649 .065(prove this however would take billions of nodes. They know which side is better in a)J85 513 :M.049 .005(game after a quick glance at the position, a feat that would involve enormous amount of)J85 525 :M.81 .081(processing on a computer, if it were feasible at all. We can contrast this with a more)J85 537 :M-.046(computer friendly games such as Nine Men's Morris and some chess endgames: Humans)A85 549 :M.199 .02(get lost in the 'combinatorial chaos' of the game, and machines can use their computing)J85 561 :M.163 .016(power well [Gasser 91], [Thompson 86].)J112 575 :M.693 .069(A lot of Go knowledge has accumulated over centuries. Most of it is implicit in)J85 587 :M1.459 .146(form of expert games. Still, thousands of tutorial books have been written. Pattern)J85 599 :M1.547 .155(knowledge of experts seems at least comparable to that of chess experts, which is)J85 611 :M-.073(daunting enough [De Groot 65]. Patterns recognized by humans are more than just stones)A85 623 :M-.078(and empty spaces: Players intuitively see liberties, or lack of liberties, and fuzzy concepts)A85 635 :M1.68 .168(such as light and heavy stones. This visual nature of the game is easy for human)J85 647 :M.238 .024(perception but hard to model. The cognitive models developed by Reitman and Wilcox)J85 659 :M.807 .081([Wilcox 79] were interesting, but today's programs only use relatively simple pattern)J85 671 :M-.036(matching [Boon 90].)A85 700 :Mf0_14 sf3.05 .305(Components of Current Go Programs)J112 718 :Mf3_12 sf.251 .025(A number of standard components of Go programs have evolved over the past 20)J85 730 :M-.036(years:)A0 16 rm-.036(\245 Basic data structures for blocks, groups of stones, and surrounded territories)A0 -16 rmendp%%Page: 7 7%%BeginPageSetupinitializepage(mm; page: 7 of 19)setjob%%EndPageSetup-29 -30 :TgS 29 30 538 781 rC113 79 :Mf3_12 sf2.793 .279(\245 Pattern matching module to generate moves, or data structures such as)J124 93 :M-.131(connections)A113 109 :M-.111(\245 Some influence function may be used to determine groups and territory)A113 125 :M2.031 .203(\245 Connections and boundaries between blocks are defined using patterns or)J124 139 :M-.205(influence)A113 155 :M.368 .037(\245 Move generation and evaluation mainly by static analysis. Multiple evaluations)J124 169 :M.91 .091(\(different motives\) for each move are possible. Selection of the best move is)J124 183 :M-.015(done by a linear combination of different evaluations, or by a priority scheme of)A124 197 :M(motives.)S85 226 :Mf0_14 sf3.007 .301(Applications of Minimax Search in Computer Go)J85 254 :Mf0_12 sf3.185 .318(Global Search)J112 272 :Mf3_12 sf1.996 .2(Global search, the move selection method of choice for most game playing)J85 284 :M1.355 .135(programs, runs into a lot of problems in Computer Go. Brute force search leads to)J85 296 :M.044 .004(combinatorial explosion very soon, and selective search strategies exhibit very irritating)J85 308 :M(behaviour.)S112 322 :M1.039 .104(When there are several 'hot' local fights in one position, global search tends to)J85 334 :M.116 .012(switch back and forth between them. Eventually search must stop while some fights are)J85 346 :M.407 .041(still hot, therefore hot positions must be evaluated. The depth needed to search several)J85 358 :M.034 .003(fights simultaneously is the sum of all locally needed depths. This leads to an exploding)J85 370 :M.237 .024(size of the search tree. Tools such as transposition tables cannot solve this fundamental)J85 382 :M-.067(problem. Global search in Go therefore often results in a bad quality of decisions.)A112 396 :M.856 .086(Our later case studies of Go programs will show that several attempts at global)J85 408 :M-.105(search have degenerated into specialized searches in one way or another.)A85 432 :Mf0_12 sf3.993 .399(Goal-oriented Searches)J112 450 :Mf3_12 sf1.537 .154(Most programs use tactical search to classify the status of blocks as dead \(is)J85 462 :M.977 .098(captured, cannot escape\), threatened \(can be captured, or escape\), or safe \(cannot be)J85 474 :M1.06 .106(captured tactically\). The simplest searches are )Jf4_12 sf.263(ladders)Af3_12 sf1.068 .107(. Move generators for general)J85 486 :M-.109(tactical searches are restricted to moves close to the block and its neighbor blocks.)A112 500 :M.677 .068(Similarly, many programs perform a Life-and-Death search for whole groups of)J85 512 :M-.013(several loosely connected blocks of stones. Wolf has built a strong specialized Life-and-)A85 524 :M-.084(Death program [Wolf 91].)A85 553 :Mf0_14 sf3.59 .359(Applications of Combinatorial Game Theory)J112 571 :Mf3_12 sf-.032(An early attempt to use sums of games for Go endgames is [Miller 76]. No playing)A85 583 :M-.075(program seems to have resulted from this research. The only application of combinatorial)A85 595 :M1.608 .161(game theory in a Go program we are aware of is our program for small endgame)J85 607 :M-.034(positions [M\237ller/Gasser 92].)A85 636 :Mf0_14 sf3.668 .367(Applications of Special Go Theories)J112 654 :Mf3_12 sf.491 .049(Much Go knowledge is available in form of proverbs. Most of this knowledge is)J85 666 :M1.232 .123(heuristic, such as "Five groups live, the sixth will die" or "Pon-nuki is worth thirty)J85 678 :M.087 .009(points". Other proverbs are strictly valid under suitable circumstances, for example "On)J85 690 :M-.068(the second line, 8 live, 6 die". Of course the circumstances are not given in the proverb.)A85 714 :Mf0_12 sf3.475 .347(Pattern Knowledge)J112 732 :Mf3_12 sf1.454 .145(A lot of Go knowledge is encoded as local patterns of stones. Some of these)J85 744 :M-.079(patterns deal with informal concepts such as good shape and thickness, but many patterns)A85 756 :M.683 .068(have a rigorous meaning. Examples are patterns describing eyes, sure connections, or)Jendp%%Page: 8 8%%BeginPageSetupinitializepage(mm; page: 8 of 19)setjob%%EndPageSetup-29 -30 :TgS 29 30 538 781 rC85 79 :Mf3_12 sf2.455 .245(capturing moves. The expressive power of patterns can be enhanced by adding)J85 91 :M-.051(conditions on stones in the pattern, such as a liberty count [Boon 90].)A112 105 :M-.126(Prototypical Life and Death problems that often occur in the corners and on the edge)A85 117 :M.105 .011(of the board can be put into a pattern library. Such specialized patterns greatly speed up)J85 129 :M1.579 .158(Life and Death searches. Still, the constraints for applying such a pattern must be)J85 141 :M-.07(designed very carefully.)A200 181 91 39 rC199 188 -1 1 213 187 1 199 187 @a-1 -1 207 195 1 1 206 181 @b206 200 5.5 @e199 214 -1 1 213 213 1 199 213 @a-1 -1 207 214 1 1 206 206 @b11 12 219 187.5 @f1 G214 195 10 10 rFgS.542 .488 scale396.919 420.26 :M0 Gf6_21 sf(a)SgR0 G212 214 -1 1 226 213 1 212 213 @a-1 -1 220 214 1 1 219 206 @b11 12 232 187.5 @f232 200 6 @i1 G227 208 10 10 rFgS.5 .488 scale456 446.911 :M0 Gf6_21 sf(b)SgR0 G11 12 245 187.5 @f245 200 6 @i238 214 -1 1 252 213 1 238 213 @a-1 -1 246 214 1 1 245 206 @b11 12 258 187.5 @f258 200 6 @i251 214 -1 1 265 213 1 251 213 @a-1 -1 259 214 1 1 258 206 @b11 12 271 187.5 @f271 200 6 @i1 G266 208 10 10 rFgS.542 .488 scale492.918 446.911 :M0 Gf6_21 sf(c)SgR0 G277 188 -1 1 285 187 1 277 187 @a-1 -1 285 194 1 1 284 181 @b284 200 6 @i277 214 -1 1 285 213 1 277 213 @a-1 -1 285 214 1 1 284 206 @bgRgS 29 30 538 781 rC292 221 :Mf3_12 sf(        )S316 155 77 65 rC12 11 322.5 187 @f12 11 322.5 200 @f316 214 -1 1 329 213 1 316 213 @a-1 -1 323 214 1 1 322 206 @b335 187 5.5 @e335 200 6 @i335 213 5.5 @egS.522 .5 scale633.744 436.027 :Mf6_21 sf(2)SgR348 187 5.5 @e348 200 6 @i1 G343 208 10 10 rFgS.394 .5 scale871.206 436.027 :M0 Gf6_21 sf(b?)SgR0 G361 161 5.5 @e354 175 -1 1 368 174 1 354 174 @a-1 -1 361 181 1 1 360 167 @b361 187 5.5 @e361 200 6 @i354 214 -1 1 367 213 1 354 213 @a-1 -1 361 214 1 1 360 206 @b367 162 -1 1 380 161 1 367 161 @a-1 -1 374 168 1 1 373 154 @b373 174 5.5 @e373 187 6 @i373 200 6 @i367 214 -1 1 380 213 1 367 213 @a-1 -1 374 214 1 1 373 206 @b379 162 -1 1 387 161 1 379 161 @a-1 -1 387 168 1 1 386 154 @b379 175 -1 1 387 174 1 379 174 @a-1 -1 387 181 1 1 386 167 @b386 187 6 @i379 201 -1 1 387 200 1 379 200 @a-1 -1 387 207 1 1 386 193 @b1 G381 208 10 10 rFgS.528 .5 scale725.253 436.027 :M0 Gf6_21 sf(a)SgRgRgS 29 30 538 781 rC197 240 :Mf4_12 sf-.211(Standard corner  Life and Death situations)A112 264 :Mf3_12 sf.242 .024(Pattern knowledge is more powerful if it is exhaustive for some subproblem: One)J85 276 :M-.043(can use the fact that no pattern is applicable, too. An example are small surrounded areas)A85 288 :M-.087(that form one eye and might be divided to form two eyes, the so-called )Af4_12 sf-.105(nakade)Af3_12 sf-.098( shapes.)A233 301 125 125 rC8 7 237 320.5 @j8 7 237 406.5 @j245 313 4 @i241 322 -1 1 250 321 1 241 321 @a-1 -1 246 325 1 1 245 317 @b8 7 245 328.5 @j8 7 245 359.5 @j8 7 245 367.5 @j8 7 245 375.5 @j8 7 245 398.5 @j241 407 -1 1 250 406 1 241 406 @a-1 -1 246 411 1 1 245 402 @b8 7 245 414.5 @j7 8 252.5 305 @j249 314 -1 1 257 313 1 249 313 @a-1 -1 254 318 1 1 253 309 @b253 313 1 @i249 322 -1 1 254 324 1 249 321 @a-1 -1 254 325 1 1 256 321 @b253 318 -1 1 257 321 1 253 317 @a-1 -1 250 322 1 1 253 317 @b249 329 -1 1 257 328 1 249 328 @a-1 -1 254 333 1 1 253 324 @b252.5 336.5 3.5 @i7 8 252.5 352 @j249 361 -1 1 257 360 1 249 360 @a-1 -1 254 364 1 1 253 356 @b253 360 1 @i249 368 -1 1 254 371 1 249 367 @a-1 -1 254 372 1 1 256 367 @b253 365 -1 1 257 367 1 253 364 @a-1 -1 250 368 1 1 253 364 @b249 376 -1 1 257 375 1 249 375 @a-1 -1 254 380 1 1 253 371 @b7 8 252.5 383 @j252.5 398.5 3.5 @i249 407 -1 1 254 410 1 249 406 @a-1 -1 254 411 1 1 256 406 @b253 404 -1 1 257 406 1 253 403 @a-1 -1 250 407 1 1 253 403 @b252.5 414.5 3.5 @i7 8 260.5 313 @j256 322 -1 1 265 321 1 256 321 @a-1 -1 261 325 1 1 260 317 @b256 329 -1 1 265 328 1 256 328 @a-1 -1 261 333 1 1 260 324 @b260.5 336.5 3.5 @i260.5 359.5 3.5 @i256 368 -1 1 265 367 1 256 367 @a-1 -1 261 372 1 1 260 363 @b260.5 375.5 3.5 @i260.5 398.5 3.5 @i256 407 -1 1 265 406 1 256 406 @a-1 -1 261 411 1 1 260 402 @b260.5 414.5 3.5 @i268.5 320.5 3.5 @i268.5 328.5 3.5 @i268.5 367.5 3.5 @i268.5 406.5 3.5 @i8 7 284 359.5 @j8 7 284 367.5 @j8 7 284 375.5 @j8 7 284 406.5 @j8 7 284 414.5 @j7 8 291.5 352 @j288 361 -1 1 296 360 1 288 360 @a-1 -1 293 364 1 1 292 356 @b288 368 -1 1 293 371 1 288 367 @a-1 -1 293 372 1 1 295 367 @b292 365 -1 1 296 367 1 292 364 @a-1 -1 289 368 1 1 292 364 @b288 376 -1 1 296 375 1 288 375 @a-1 -1 293 380 1 1 292 371 @b7 8 291.5 383 @j291.5 398.5 3.5 @i288 407 -1 1 293 410 1 288 406 @a-1 -1 293 411 1 1 295 406 @b292 404 -1 1 296 406 1 292 403 @a-1 -1 289 407 1 1 292 403 @b288 415 -1 1 296 414 1 288 414 @a-1 -1 293 419 1 1 292 410 @b7 8 291.5 422 @j299.5 359.5 3.5 @i295 368 -1 1 304 367 1 295 367 @a-1 -1 300 372 1 1 299 363 @b295 376 -1 1 304 375 1 295 375 @a-1 -1 300 380 1 1 299 371 @b7 8 299.5 383 @j299.5 398.5 3.5 @i295 407 -1 1 304 406 1 295 406 @a-1 -1 300 411 1 1 299 402 @b299.5 406.5 1.5 @i299.5 414.5 3.5 @i307.5 367.5 3.5 @i307.5 375.5 3.5 @i307.5 406.5 3.5 @i8 7 323 367.5 @j8 7 323 406.5 @j8 7 323 414.5 @j330.5 359.5 3.5 @i327 368 -1 1 335 367 1 327 367 @a-1 -1 332 372 1 1 331 363 @b330.5 375.5 3.5 @i330.5 398.5 3.5 @i327 407 -1 1 335 406 1 327 406 @a-1 -1 332 411 1 1 331 402 @b327 415 -1 1 335 414 1 327 414 @a-1 -1 332 419 1 1 331 410 @b7 8 330.5 422 @j7 8 338.5 352 @j334 361 -1 1 343 360 1 334 360 @a-1 -1 339 364 1 1 338 356 @b335 368 -1 1 339 371 1 335 367 @a-1 -1 339 372 1 1 342 367 @b338 365 -1 1 343 367 1 338 364 @a-1 -1 336 368 1 1 338 364 @b334 376 -1 1 343 375 1 334 375 @a-1 -1 339 380 1 1 338 371 @b7 8 338.5 383 @j338.5 398.5 3.5 @i334 407 -1 1 343 406 1 334 406 @a-1 -1 339 411 1 1 338 402 @b334 415 -1 1 343 414 1 334 414 @a-1 -1 339 419 1 1 338 410 @b7 8 338.5 422 @j346.5 359.5 3.5 @i342 368 -1 1 351 367 1 342 367 @a-1 -1 347 372 1 1 346 363 @b346.5 375.5 3.5 @i346.5 406.5 3.5 @i346.5 414.5 3.5 @i8 7 354 367.5 @jgRgS 29 30 538 781 rC261 446 :Mf4_12 sf-.11(Nakade shapes)A112 470 :Mf3_12 sf1.965 .197(A nakade shape is valid only if all surrounding blocks of stones are 'stable)J85 482 :M-.023(enough', i.e. it is not necessary to connect these blocks inside the area.)A112 496 :M-.082(This list of nakade shapes is exhaustive: Smaller areas \(1 or 2 points\) form only one)A85 509 :M-.055(eye, all other shapes can form two eyes even if the opponent moves first)Af3_9 sf0 -3 rm-.051(1)A0 3 rmf3_12 sf(.)S112 523 :M.96 .096(In case of a capturing race, a nakade shape gives additional liberties: For )Jf4_12 sf.377(n>1)Af3_12 sf(,)S85 537 :Mf4_12 sf-.099(0)AcFf5_12 sf-.099<A3>Asf-.099(m<n)Af3_12 sf-.05(, a )Af4_12 sf-.084(n)Af3_12 sf-.066( point nakade shape filled by )Af4_12 sf-.121(m)Af3_12 sf-.066( opponent stones is equivalent to )Af4_12 sf-.07(\(n)A0 -3 rm-.084(2)A0 3 rm-.083(-3n\)/2+3-)A85 549 :M-.093(m)Af3_12 sf-.049( outside liberties.)A85 573 :Mf0_12 sf2.209 .221(Example: The Semeai Formula)J112 591 :Mf3_12 sf.849 .085(This traditional formula [Lenz 82] gives a static evaluation of a class of simple)J85 603 :Mf4_12 sf-.142(semeai)Af3_12 sf-.127( \(capturing races\) where:)A113 619 :M-.032(\245 Each player has one threatened block, the 'target', with 0 or 1 eye. An eye may be)A124 633 :M.304 .03(a )Jf4_12 sf.253(nakade)Af3_12 sf.858 .086( shape with additional opponent stones inside, which are counted as)J124 647 :M-.1(outside liberties as explained above.)A113 663 :M-.131(\245 Both targets have separate outside liberties  and common liberties)A113 679 :M.099 .01(\245 Each target has an eye status: no eye, small eye \(less than 3 points\) or big eye \(3)J124 693 :M(or more points\).)S-4096 -4095 -1 1 -4094 -4095 1 -4096 -4096 @a85 741.24 -.24 .24 228.24 741 .24 85 741 @a85 754 :Mf3_9 sf(1)Sf3_10 sf0 3 rm-.024(All statements remain valid if some surrounding stones are replaced by the edge of the board, with one)A0 -3 rm85 768 :M.121 .012(famous exception: The 'bent four in the corner' position.)Jendp%%Page: 9 9%%BeginPageSetupinitializepage(mm; page: 9 of 19)setjob%%EndPageSetup-29 -30 :TgS 29 30 538 781 rC149 70 130 90 rC155 115 5.5 @e11 12 155 127.5 @f155 140 5.5 @e155 153 5.5 @e11 12 168 76.5 @f168 89 5.5 @e168 102 5.5 @e168 115 5.5 @e12 13 168 127.5 @j168 140 6 @i168 153 6 @i12 13 181 76.5 @j181 89 6 @i181 102 6 @i181 115 6 @i11 12 181 127.5 @f174 141 -1 1 188 140 1 174 140 @a-1 -1 182 147 1 1 181 134 @b181 153 6 @i187 77 -1 1 201 76 1 187 76 @a-1 -1 195 84 1 1 194 76 @b194 89 5.5 @e187 103 -1 1 201 102 1 187 102 @a-1 -1 195 109 1 1 194 95 @b194 115 6 @i11 12 194 127.5 @f187 141 -1 1 201 140 1 187 140 @a-1 -1 195 147 1 1 194 134 @b194 153 6 @i200 77 -1 1 214 76 1 200 76 @a-1 -1 208 84 1 1 207 76 @b200 90 -1 1 214 89 1 200 89 @a-1 -1 208 96 1 1 207 83 @b207 102 6 @i207 115 6 @i11 12 207 127.5 @f200 141 -1 1 214 140 1 200 140 @a-1 -1 208 147 1 1 207 134 @b207 153 6 @i12 13 220 76.5 @j220 89 6 @i220 102 6 @i213 116 -1 1 227 115 1 213 115 @a-1 -1 221 122 1 1 220 108 @b11 12 220 127.5 @f213 141 -1 1 227 140 1 213 140 @a-1 -1 221 147 1 1 220 134 @b220 153 6 @i226 77 -1 1 240 76 1 226 76 @a-1 -1 234 84 1 1 233 76 @b226 90 -1 1 240 89 1 226 89 @a-1 -1 234 96 1 1 233 83 @b226 103 -1 1 240 102 1 226 102 @a-1 -1 234 109 1 1 233 95 @b233 115 5.5 @e11 12 233 127.5 @f226 141 -1 1 240 140 1 226 140 @a-1 -1 234 147 1 1 233 134 @b233 153 6 @i11 12 246 76.5 @f246 89 5.5 @e246 102 5.5 @e246 115 5.5 @e11 12 246 127.5 @f246 140 5.5 @e246 153 6 @i252 77 -1 1 266 76 1 252 76 @a-1 -1 260 84 1 1 259 76 @b252 90 -1 1 266 89 1 252 89 @a-1 -1 260 96 1 1 259 83 @b252 103 -1 1 266 102 1 252 102 @a-1 -1 260 109 1 1 259 95 @b252 116 -1 1 266 115 1 252 115 @a-1 -1 260 122 1 1 259 108 @b252 128 -1 1 266 127 1 252 127 @a-1 -1 260 135 1 1 259 121 @b252 141 -1 1 266 140 1 252 140 @a-1 -1 260 147 1 1 259 134 @b259 153 6 @i12 13 272 76.5 @j272 89 6 @i272 102 6 @i272 115 6 @i12 13 272 127.5 @j272 140 6 @i272 153 6 @igRgS 29 30 538 781 rC280 161 :Mf3_12 sf(           )S314 70 130 90 rC320 115 5.5 @e11 12 320 127.5 @f320 140 5.5 @e320 153 5.5 @e11 12 333 76.5 @f333 89 5.5 @e333 102 5.5 @e333 115 5.5 @e12 13 333 127.5 @j333 140 6 @i333 153 6 @i12 13 346 76.5 @j346 89 6 @i346 102 6 @i346 115 6 @i11 12 346 127.5 @f346 140 6 @igS.536 .489 scale638.41 296.404 :Mf6_21 sf1 G(1)SgR346 153 6 @i11 12 359 76.5 @fgS.536 .489 scale662.677 165.578 :Mf6_21 sf(4)SgR359 89 5.5 @e-1 -1 355 93 1 1 359 84 @b354 93 -1 1 364 92 1 354 92 @a359 85 -1 1 364 92 1 359 84 @a359 102 5.5 @egS.536 .489 scale662.677 218.726 :Mf6_21 sf(2)SgR359 115 6 @i11 12 359 127.5 @f359 140 6 @igS.536 .489 scale662.677 296.404 :Mf6_21 sf1 G(3)SgR359 153 6 @i12 13 372 76.5 @jgS.362 .489 scale1010.881 165.578 :Mf6_21 sf1 G(13)SgR372 89 5.5 @egS.536 .489 scale686.945 192.152 :Mf6_21 sf(6)SgR372 102 6 @i372 115 6 @i11 12 372 127.5 @f372 140 6 @igS.536 .489 scale686.945 296.404 :Mf6_21 sf1 G(5)SgR372 153 6 @i12 13 385 76.5 @j385 89 6 @i385 102 6 @i385 115 5.5 @egS.536 .489 scale711.212 245.3 :Mf6_21 sf(8)SgR11 12 385 127.5 @f385 140 6 @igS.536 .489 scale711.212 296.404 :Mf6_21 sf1 G(7)SgR385 153 6 @i11 12 398 76.5 @fgS.362 .489 scale1082.692 165.578 :Mf6_21 sf(20)SgR398 89 5.5 @egS.362 .489 scale1082.692 192.152 :Mf6_21 sf(12)SgR398 102 5.5 @egS.362 .489 scale1082.692 218.726 :Mf6_21 sf(10)SgR398 115 5.5 @e11 12 398 127.5 @f398 140 6 @igS.536 .489 scale735.479 296.404 :Mf6_21 sf1 G(9)SgR398 153 6 @i11 12 411 76.5 @f411 89 5.5 @e411 102 5.5 @e411 115 5.5 @e11 12 411 127.5 @f411 140 5.5 @e411 153 6 @i417 77 -1 1 431 76 1 417 76 @a-1 -1 425 84 1 1 424 76 @b424 89 6 @igS.362 .489 scale1154.503 192.152 :Mf6_21 sf1 G(23)SgR424 102 6 @igS.362 .489 scale1154.503 218.726 :Mf6_21 sf1 G(19)SgR424 115 6 @igS.362 .489 scale1154.503 245.3 :Mf6_21 sf1 G(17)SgR12 13 424 127.5 @jgS.362 .489 scale1154.503 269.83 :Mf6_21 sf1 G(15)SgR424 140 6 @igS.362 .489 scale1154.503 296.404 :Mf6_21 sf1 G(11)SgR424 153 6 @i12 13 437 76.5 @j437 89 6 @i437 102 6 @i437 115 6 @i12 13 437 127.5 @j437 140 6 @i437 153 6 @igRgS 29 30 538 781 rC177 180 :Mf4_12 sf-.128(A semeai, and demonstration that Black can win  it)A197 202 :M-.053(14 at )AcFf5_12 sf-.053(D)Asf-.053(, 16 at 2, 18 at 4, 21 at 6, 22 at )AcFf5_12 sf-.053(D)Asf-.053(\).)A112 226 :Mf3_12 sf.727 .073(Example: Counting liberties, Black looks absolutely lost with 8 liberties against)J85 238 :M1.014 .101(White's 15. Applying the formula however, we find that both players can win going)J85 250 :M.919 .092(first. Using tree search for this kind of problem would be very expensive. Assuming)J85 262 :M(each player plays only on opponent's liberties, a problem with )Sf4_12 sf(n)Sf3_12 sf( liberties for each player)S85 276 :M-.054(has )Af4_12 sf-.057(n!)Af4_10 sf0 -3 rm-.057(2)A0 3 rmf3_12 sf-.049( states. Using a hash table it still has )Af4_12 sf-.068(2)Af4_10 sf0 -3 rm-.063(n+1)A0 3 rmf3_12 sf-.053( states.)A112 290 :M-.011(Results of simple semeai evaluated by the semeai formula can easily be mapped to)A85 302 :M-.183(mathematical games.)A85 326 :Mf0_12 sf3.517 .352(Definitions of Life)J112 354 :Mf3_12 sf1.394 .139(Benson has found a mathematical description of )Jf4_12 sf2.283 .228(unconditionally alive)Jf3_12 sf1.494 .149( blocks)J85 366 :M-.08([Benson 80]. These blocks cannot be captured even if the player never makes a move and)A85 378 :M.332 .033(the opponent moves as often as he likes. Popma and Allis studied the restriction where)J85 390 :M-.074(the opponent may move )Af4_12 sf-.082(n)Af3_12 sf-.067( times in a row [Popma/Allis 92]. Their concepts are applicable)A85 402 :M.211 .021(to Ko fights.)J112 416 :M.208 .021(Of more practical interest are algorithms for detecting groups of blocks which are)J85 428 :M-.064(safe with the usual alternating play. Thomas Wolf implemented such an algorithm for his)A85 440 :M-.079(Life and Death program, but published no details [Wolf 91].)A168 454 113 85 rC174 461 -1 1 182 460 1 174 460 @a-2 -2 176 468 2 2 174 453 @b174.5 474.5 6.5 @i174.5 488.5 6.5 @i174.5 502.5 6 @e174 517 -1 1 182 516 1 174 516 @a-2 -2 176 524 2 2 174 509 @b174 532 -2 2 182 530 2 174 530 @a-2 -2 176 532 2 2 174 523 @b181 461 -1 1 196 460 1 181 460 @a-1 -1 189 468 1 1 188 453 @b188.5 474.5 6.5 @i188.5 488.5 6 @e188.5 502.5 6 @e188.5 516.5 6.5 @i181 532 -2 2 196 530 2 181 530 @a-1 -1 189 532 1 1 188 523 @b195 461 -1 1 210 460 1 195 460 @a-1 -1 203 468 1 1 202 453 @b202.5 474.5 6.5 @i202.5 488.5 6 @e195 503 -1 1 210 502 1 195 502 @a-1 -1 203 510 1 1 202 495 @b195 517 -1 1 210 516 1 195 516 @a-1 -1 203 524 1 1 202 509 @b202.5 530.5 6 @e209 461 -1 1 224 460 1 209 460 @a-1 -1 217 468 1 1 216 453 @b209 475 -1 1 224 474 1 209 474 @a-1 -1 217 482 1 1 216 467 @b216.5 488.5 6.5 @i216.5 502.5 6.5 @i216.5 516.5 6 @e216.5 530.5 6 @e223 461 -1 1 238 460 1 223 460 @a-1 -1 231 468 1 1 230 453 @b223 475 -1 1 238 474 1 223 474 @a-1 -1 231 482 1 1 230 467 @b230.5 488.5 6.5 @i230.5 502.5 6 @e223 517 -1 1 238 516 1 223 516 @a-1 -1 231 524 1 1 230 509 @b230.5 530.5 6 @e237 475 -1 1 252 474 1 237 474 @a-1 -1 245 482 1 1 244 467 @b244.5 488.5 6.5 @i244.5 502.5 6.5 @i244.5 516.5 6 @e237 532 -2 2 252 530 2 237 530 @a-1 -1 245 532 1 1 244 523 @b251 489 -1 1 266 488 1 251 488 @a-1 -1 259 496 1 1 258 481 @b251 503 -1 1 266 502 1 251 502 @a-1 -1 259 510 1 1 258 495 @b258.5 516.5 6.5 @i258.5 530.5 6.5 @i265 503 -1 1 280 502 1 265 502 @a-1 -1 273 510 1 1 272 495 @b265 517 -1 1 280 516 1 265 516 @a-1 -1 273 524 1 1 272 509 @b265 532 -2 2 280 530 2 265 530 @a-1 -1 273 532 1 1 272 523 @bgRgS 29 30 538 781 rC283 541 :Mf3_12 sf(         )S311 454 113 85 rC310 461 -1 1 325 460 1 310 460 @a-1 -1 318 468 1 1 317 453 @b310 475 -1 1 325 474 1 310 474 @a-1 -1 318 482 1 1 317 467 @b310 489 -1 1 325 488 1 310 488 @a-1 -1 318 496 1 1 317 481 @b317.5 502.5 6.5 @i317.5 516.5 6.5 @i317.5 530.5 6.5 @i324 461 -1 1 339 460 1 324 460 @a-1 -1 332 468 1 1 331 453 @b331.5 474.5 6.5 @i331.5 488.5 6.5 @i331.5 502.5 6 @e331.5 516.5 6 @e331.5 530.5 6 @e338 461 -1 1 353 460 1 338 460 @a-1 -1 346 468 1 1 345 453 @b345.5 474.5 6.5 @i345.5 488.5 6 @e338 503 -1 1 353 502 1 338 502 @a-1 -1 346 510 1 1 345 495 @b345.5 516.5 6 @e338 532 -2 2 353 530 2 338 530 @a-1 -1 346 532 1 1 345 523 @b352 461 -1 1 367 460 1 352 460 @a-1 -1 360 468 1 1 359 453 @b359.5 474.5 6.5 @i359.5 488.5 6 @e359.5 502.5 6 @e359.5 516.5 6.5 @i359.5 530.5 6.5 @i366 461 -1 1 381 460 1 366 460 @a-1 -1 374 468 1 1 373 453 @b366 475 -1 1 381 474 1 366 474 @a-1 -1 374 482 1 1 373 467 @b373.5 488.5 6.5 @i373.5 502.5 6 @e373.5 516.5 6 @e373.5 530.5 6.5 @i380 461 -1 1 395 460 1 380 460 @a-1 -1 388 468 1 1 387 453 @b380 475 -1 1 395 474 1 380 474 @a-1 -1 388 482 1 1 387 467 @b387.5 488.5 6.5 @i387.5 502.5 6 @e387.5 516.5 6.5 @i380 532 -2 2 395 530 2 380 530 @a-1 -1 388 532 1 1 387 523 @b394 461 -1 1 409 460 1 394 460 @a-1 -1 402 468 1 1 401 453 @b394 475 -1 1 409 474 1 394 474 @a-1 -1 402 482 1 1 401 467 @b401.5 488.5 6.5 @i401.5 502.5 6 @e401.5 516.5 6 @e401.5 530.5 6 @e408 461 -1 1 423 460 1 408 460 @a-1 -1 416 468 1 1 415 453 @b408 475 -1 1 423 474 1 408 474 @a-1 -1 416 482 1 1 415 467 @b408 489 -1 1 423 488 1 408 488 @a-1 -1 416 496 1 1 415 481 @b415.5 502.5 6.5 @i415.5 516.5 6.5 @i415.5 530.5 6.5 @igRgS 29 30 538 781 rC99 560 :Mf4_12 sf-.076(White stones recognized as dead \(left\), and alive \(right\), by Wolf's static evaluation)A112 584 :Mf3_12 sf.225 .022(Several classes of living groups are introduced in [M\237ller 89]. Most Go programs)J85 596 :M-.085(contain some Life and Death  knowledge, often as a mixture of exact and heuristical rules)A85 608 :M.324 .032([Kraszek 88].)J112 622 :M.777 .078(Pure Life and Death algorithms have limited usefulness in go playing programs)J85 634 :M.883 .088(because they rely on the assumption that the target is completely surrounded by safe)J85 646 :M.138 .014(opponent stones.)J85 670 :Mf0_12 sf2.919 .292(Wolfe's Algorithm for Dependent Endgames)J112 688 :Mf3_12 sf1.145 .114(David Wolfe has developed a formula for evaluating certain sets of dependent)J85 700 :M-.056(endgames [Wolfe 91a]. This interesting application of combinatorial game theory will be)A85 712 :M-.014(discussed in section 6.)A85 741 :Mf0_14 sf3.006 .301(Current Computer Go Programs)Jendp%%Page: 10 10%%BeginPageSetupinitializepage(mm; page: 10 of 19)setjob%%EndPageSetup-29 -30 :TgS 29 30 538 781 rC85 79 :Mf0_12 sf2.284 .228(Search Methods Used by Current Go Programs)J112 97 :Mf3_12 sf1.009 .101(Go Intellect, by Ken Chen, uses a very detailed model of blocks and groups, a)J85 109 :M-.051(complex evaluation function, plus some specialized tactical and Life and Death searches.)A85 121 :M.037 .004(A very restricted global search provides input for the move selection procedure, but it is)J85 133 :M-.073(not the only criterion used.)A112 147 :M1.81 .181(Go 4.3, by Michael Reiss, deviates the furthest from the emerging 'standard)J85 159 :M.919 .092(model'. Reiss claims that it is easier to build a good evaluation function than a good)J85 171 :M.395 .039(selective move generator. His move selection procedure only acts as a rough filter that)J85 183 :M-.014(selects many moves \(typically 30-50\). Go 4.3 then does a one ply lookahead on all these)A85 195 :M.124 .012(moves and chooses the one with the best resulting position. All moves can be evaluated)J85 207 :M-.119(in parallel.)A112 221 :M1.142 .114(The search used in Goliath, by Mark Boon, is closest in spirit to the approach)J85 233 :M.557 .056(presented in this paper: In terms of combinatorial theory, it models a Go position as a)J85 245 :M.005 .001(sum of switches. Goliath identifies goals, such as cutting, attacking a group, or invading)J85 257 :M.009 .001(a territory. For each goal and each player going first it performs a goal-directed minmax)J85 269 :M.236 .024(search. The two scores for each goal form a switch. The local move with greatest score)J85 281 :M.237 .024(difference, i.e. the hottest switch, is played. There are some adjustments to increase the)J85 293 :M-.043(value of )Af4_12 sf-.046(sente)Af3_12 sf-.057( moves.)A112 307 :M.164 .016(Go Intellect and Goliath both play some 'obvious' moves instantly without search,)J85 319 :M-.079(such as )Af4_12 sf-.077(joseki)Af3_12 sf-.08( and some tactical patterns.)A85 343 :Mf0_12 sf2.69 .269(Summary: Go Skills Present, and Missing, in Go Programs)J112 361 :Mf3_12 sf1.665 .166(From games against humans and other programs, we can infer the following)J85 373 :M-.08(remarks hold for all existing Go programs:)A113 389 :M1.101 .11(\245 They have knowledge about basic attributes of Go positions, such as blocks,)J124 403 :M-.043(groups, patterns, joseki, simple tactics, territory, Life+Death)A113 419 :M-.119(\245 They rely a lot on heuristics which are incomplete, sometimes contradictory)A113 435 :M1.443 .144(\245 There is no clearly demonstrated correlation between computing power and)J124 449 :M-.04(playing strength, as exists in chess [Thompson 82]. Of course playing strength is)A124 463 :M2.343 .234(hurt if computing power sinks below some minimum. Some commercial)J124 477 :M1.557 .156(programs implement different levels of skill by simply switching off some)J124 491 :M-.092(components of their evaluation. No correlation between the amount of search and)A124 505 :M-.077(playing strength has been demonstrated.)A113 521 :M.121 .012(\245 They still lack many concepts: recognize or generate double threats, consistency)J124 535 :M.377 .038(of moves.)J85 562 :Mf0_16 sf-.148(4. Computer Go and Combinatorial Theory)A112 587 :Mf3_12 sf.867 .087(Stimulated by the success of Mathematical Go Theory for the late endgame we)J85 599 :M-.086(began to investigate possible applications to Computer Go in 1992 [M\237ller/Gasser 92].)A112 613 :M-.088(As a first step, an interface between Wolfe's toolkit for mathematical games and our)A85 625 :M-.01(Go program Explorer was implemented as a term project [Fierz 92]. Using this interface)A85 637 :M.635 .064(we built a special program that could recognize and solve sums of endgame positions)J85 649 :M.418 .042(such as )Jf4_12 sf.868 .087(node rooms)Jf3_12 sf.557 .056( [Wolf 91a]. In 'strict mode', we used Benson's algorithm to prove)J85 661 :M1.771 .177(independence of subgames. A 'heuristic mode' allowed analysis of more endgame)J85 673 :M-.068(positions where independence could not be proved.)A112 687 :M-.087(To solve bigger problems, we implemented enhancements such as local hash tables,)A85 699 :M.3 .03(decomposition of games during search and strict pruning rules. The final version could)J85 711 :M.589 .059(solve problems with local areas up to size 13. Currently we are interested in the more)J85 723 :M-.097(ambitious goal of using combinatorial game theory throughout a full game of Go.)Aendp%%Page: 11 11%%BeginPageSetupinitializepage(mm; page: 11 of 19)setjob%%EndPageSetup-29 -30 :TgS 29 30 538 781 rC85 82 :Mf0_14 sf2.975 .297(Why Combinatorial Game Theory is Applicable to Go)J112 100 :Mf3_12 sf.885 .088(As discussed above we cannot expect to succeed with global search in Go. But)J85 112 :M-.01(search has proven a very powerful method for other games, so we would like to use it as)A85 124 :M.499 .05(much as possible. Our feeling is that current programs fail to exploit the full power of)J85 136 :M.63 .063(search. Still the success of three time's world champion Goliath indicates that there is)J85 148 :M-.084(promise in localized deep searches. We propose to model a Go position as a sum of many)A85 160 :M1.161 .116(relatively small local search trees, then combine them not by brute force or 'switch')J85 172 :M-.102(models but using combinatorial game theory.)A85 201 :Mf0_14 sf2.348 .235(The Sum Game Model in Computer Go)J112 219 :Mf3_12 sf-.061(To apply the theory, we must define a mapping of a Go position to a sum of games.)A85 231 :M.31 .031(As a first step we must identify subgames. This is done by a )Jf4_12 sf.598 .06(board partition)Jf3_12 sf.531 .053( algorithm)J85 243 :M.01 .001(that identifies boundaries, territories, potential territories, connections, groups, endgame)J85 255 :M.945 .094(areas, and open areas. The board partition algorithm decides which structures on the)J85 267 :M-.067(board are independent, or nearly independent, from each other. The result is a set of )Af4_12 sf-.086(local)A85 279 :M.356 .036(Go games)Jf3_12 sf(.)S121 292 166 166 rC130 303 -2 2 140 301 2 130 301 @a-2 -2 132 311 2 2 130 301 @b130.5 319.5 8.5 @i130 338 -1 1 140 337 1 130 337 @a-2 -2 132 347 2 2 130 328 @b130.5 355.5 8.5 @i130 374 -1 1 140 373 1 130 373 @a-2 -2 132 383 2 2 130 364 @b130 392 -1 1 140 391 1 130 391 @a-2 -2 132 401 2 2 130 382 @b130 410 -1 1 140 409 1 130 409 @a-2 -2 132 419 2 2 130 400 @b130.5 427.5 8 @e130 447 -2 2 140 445 2 130 445 @a-2 -2 132 447 2 2 130 436 @b139 303 -2 2 158 301 2 139 301 @a-1 -1 149 311 1 1 148 301 @b148.5 319.5 8.5 @i148.5 337.5 8.5 @i148.5 355.5 8.5 @i148.5 373.5 8 @e148.5 391.5 8 @e148.5 409.5 8 @e148.5 427.5 8 @e148.5 445.5 8 @e157 303 -2 2 176 301 2 157 301 @a-1 -1 167 311 1 1 166 301 @b166.5 319.5 8.5 @i157 338 -1 1 176 337 1 157 337 @a-1 -1 167 347 1 1 166 328 @b166.5 355.5 8.5 @i166.5 373.5 8 @e157 392 -1 1 176 391 1 157 391 @a-1 -1 167 401 1 1 166 382 @b157 410 -1 1 176 409 1 157 409 @a-1 -1 167 419 1 1 166 400 @b166.5 427.5 8 @e157 447 -2 2 176 445 2 157 445 @a-1 -1 167 447 1 1 166 436 @b184.5 301.5 8.5 @i184.5 319.5 8.5 @i175 338 -1 1 194 337 1 175 337 @a-1 -1 185 347 1 1 184 328 @b184.5 355.5 8.5 @i184.5 373.5 8 @e184.5 391.5 8 @e175 410 -1 1 194 409 1 175 409 @a-1 -1 185 419 1 1 184 400 @b184.5 427.5 8 @e184.5 445.5 8 @e193 303 -2 2 212 301 2 193 301 @a-1 -1 203 311 1 1 202 301 @b202.5 319.5 8 @e202.5 337.5 8 @e202.5 355.5 8.5 @i202.5 373.5 8.5 @i202.5 391.5 8 @e202.5 409.5 8.5 @i202.5 427.5 8.5 @i202.5 445.5 8.5 @i211 303 -2 2 230 301 2 211 301 @a-1 -1 221 311 1 1 220 301 @b220.5 319.5 8 @e220.5 337.5 8.5 @i211 356 -1 1 230 355 1 211 355 @a-1 -1 221 365 1 1 220 346 @b220.5 373.5 8.5 @i220.5 391.5 8.5 @i220.5 409.5 8.5 @i220.5 427.5 8.5 @i220.5 445.5 8 @e238.5 301.5 8.5 @i238.5 319.5 8 @e238.5 337.5 8 @e238.5 355.5 8 @e238.5 373.5 8 @e229 392 -1 1 248 391 1 229 391 @a-1 -1 239 401 1 1 238 382 @b229 410 -1 1 248 409 1 229 409 @a-1 -1 239 419 1 1 238 400 @b229 428 -1 1 248 427 1 229 427 @a-1 -1 239 437 1 1 238 418 @b229 447 -2 2 248 445 2 229 445 @a-1 -1 239 447 1 1 238 436 @b256.5 301.5 8 @e247 320 -1 1 266 319 1 247 319 @a-1 -1 257 329 1 1 256 310 @b256.5 337.5 8 @e247 356 -1 1 266 355 1 247 355 @a-1 -1 257 365 1 1 256 346 @b256.5 373.5 8 @e256.5 391.5 8.5 @i256.5 409.5 8.5 @i256.5 427.5 8.5 @i256.5 445.5 8.5 @i265 303 -2 2 276 301 2 265 301 @a-2 -2 276 311 2 2 274 301 @b274.5 319.5 8 @e274.5 337.5 8 @e265 356 -1 1 276 355 1 265 355 @a-2 -2 276 365 2 2 274 346 @b265 374 -1 1 276 373 1 265 373 @a-2 -2 276 383 2 2 274 364 @b274.5 391.5 8.5 @i265 410 -1 1 276 409 1 265 409 @a-2 -2 276 419 2 2 274 400 @b274.5 427.5 8.5 @i265 447 -2 2 276 445 2 265 445 @a-2 -2 276 447 2 2 274 436 @bgRgS 29 30 538 781 rC287 458 :Mf3_12 sf(      )S.25 G305 292 166 166 rC306 293 18 18 rF0 G314 303 -2 2 324 301 2 314 301 @a-2 -2 316 311 2 2 314 301 @b314.5 319.5 8.5 @i.25 G306 329 18 18 rF0 G314 338 -1 1 324 337 1 314 337 @a-2 -2 316 347 2 2 314 328 @b314.5 355.5 8.5 @i1 G308 367 13 13 rF310 380 :M0 Gf6_13 sf(5)S1 G308 385 13 13 rF310 398 :M0 G(5)S1 G308 403 13 13 rF310 416 :M0 G(5)S314.5 427.5 8 @e.75 G306 437 18 18 rF0 G314 447 -2 2 324 445 2 314 445 @a-2 -2 316 447 2 2 314 436 @b.25 G324 293 18 18 rF0 G323 303 -2 2 342 301 2 323 301 @a-1 -1 333 311 1 1 332 301 @b332.5 319.5 8.5 @i332.5 337.5 8.5 @i332.5 355.5 8.5 @i332.5 373.5 8 @e332.5 391.5 8 @e332.5 409.5 8 @e332.5 427.5 8 @e332.5 445.5 8 @e.25 G342 293 18 18 rF0 G341 303 -2 2 360 301 2 341 301 @a-1 -1 351 311 1 1 350 301 @b350.5 319.5 8.5 @i1 G344 331 13 13 rF346 344 :M0 G(2)S350.5 355.5 8.5 @i350.5 373.5 8 @e1 G344 385 13 13 rF346 398 :M0 G(6)S1 G344 403 13 13 rF346 416 :M0 G(6)S350.5 427.5 8 @e.75 G342 437 18 18 rF0 G341 447 -2 2 360 445 2 341 445 @a-1 -1 351 447 1 1 350 436 @b368.5 301.5 8.5 @i368.5 319.5 8.5 @i1 G362 331 13 13 rF364 344 :M0 G(2)S368.5 355.5 8.5 @i368.5 373.5 8 @e368.5 391.5 8 @e1 G362 403 13 13 rF364 416 :M0 G(6)S368.5 427.5 8 @e368.5 445.5 8 @e1 G380 295 13 13 rF382 308 :M0 G(1)S386.5 319.5 8 @e386.5 337.5 8 @e386.5 355.5 8.5 @i386.5 373.5 8.5 @i386.5 391.5 8 @e386.5 409.5 8.5 @i386.5 427.5 8.5 @i386.5 445.5 8.5 @i1 G398 295 13 13 rF400 308 :M0 G(1)S404.5 319.5 8 @e404.5 337.5 8.5 @i400 344 :M1 G(3)S398 349 13 13 rF400 362 :M0 G(3)S404.5 373.5 8.5 @i404.5 391.5 8.5 @i404.5 409.5 8.5 @i404.5 427.5 8.5 @i404.5 445.5 8 @e400 452 :M(7)S422.5 301.5 8.5 @i418 308 :M1 G(1)S0 G422.5 319.5 8 @e422.5 337.5 8 @e422.5 355.5 8 @e422.5 373.5 8 @e1 G416 385 13 13 rF418 398 :M0 G(7)S1 G416 403 13 13 rF418 416 :M0 G(7)S1 G416 421 13 13 rF418 434 :M0 G(7)S1 G416 439 13 13 rF418 452 :M0 G(7)S440.5 301.5 8 @e.75 G432 311 18 18 rF0 G431 320 -1 1 450 319 1 431 319 @a-1 -1 441 329 1 1 440 310 @b440.5 337.5 8 @e1 G434 349 13 13 rF436 362 :M0 G(4)S440.5 373.5 8 @e440.5 391.5 8.5 @i440.5 409.5 8.5 @i440.5 427.5 8.5 @i440.5 445.5 8.5 @i.75 G450 293 18 18 rF0 G449 303 -2 2 460 301 2 449 301 @a-2 -2 460 311 2 2 458 301 @b458.5 319.5 8 @e458.5 337.5 8 @e1 G452 349 13 13 rF454 362 :M0 G(4)S1 G452 367 13 13 rF454 380 :M0 G(4)S458.5 391.5 8.5 @i.25 G450 401 18 18 rF0 G449 410 -1 1 460 409 1 449 409 @a-2 -2 460 419 2 2 458 400 @b458.5 427.5 8.5 @i.25 G450 437 18 18 rF0 G449 447 -2 2 460 445 2 449 445 @a-2 -2 460 447 2 2 458 436 @bgRgS 29 30 538 781 rC126 477 :Mf4_12 sf-.189(A Go position and its partition into safe territories and independent areas)A112 501 :Mf3_12 sf.092 .009(Each local game is then analysed independently by performing a local tree search.)J85 513 :M-.044(This search allows for several consecutive moves by the same player. Terminal positions)A85 525 :M-.086(are evaluated locally, and the values are backed up in the tree, resulting in a mathematical)A85 537 :M-.104(game that forms an evaluation of the root.)A112 551 :M-.039(The full board position is modelled as a sum of these evaluations of local games. A)A85 563 :M.648 .065(sum game evaluation algorithm such as thermostrat is used to find a globally good or)J85 575 :M-.11(optimal move.)A85 604 :Mf0_14 sf2.867 .287(Local Go Games)J112 622 :Mf3_12 sf-.154(A )Af4_12 sf-.144(local Go game)Af3_12 sf-.123( in a given position p is defined as:)A112 636 :M-.135(\245 The )Af4_12 sf-.138(local area)Af3_12 sf-.134(, a subset of points on the board)A112 650 :M.072 .007(\245 A )Jf4_12 sf.226 .023(move tree)Jf3_12 sf.102 .01(, with an )Jf4_12 sf.211 .021(initial local position)Jf3_12 sf.119 .012( \(p restricted to )Jf4_12 sf.223 .022(local area)Jf3_12 sf.175 .018(\). All moves)J85 662 :M-.218(must lie inside )Af4_12 sf-.234(local area)Af3_12 sf(.)S112 676 :M-.164(\245 A numerical )Af4_12 sf-.167(evaluation)Af3_12 sf-.157( of all terminal nodes in the move tree.)A85 705 :Mf0_14 sf3.212 .321(Dependencies of Local Go Games)J112 723 :Mf3_12 sf-.041(To assure the desired independence of subgames we must prove that a move in one)A85 735 :M-.006(subgame cannot affect evaluation of another subgame. Dependencies between two areas)A85 747 :M-.049(can occur when they share weak boundaries. A move in one game can set up a capture in)Aendp%%Page: 12 12%%BeginPageSetupinitializepage(mm; page: 12 of 19)setjob%%EndPageSetup-29 -30 :TgS 29 30 538 781 rC85 79 :Mf3_12 sf.678 .068(another game, or even remove the boundary block between the two subgames. Often,)J85 91 :M-.098(some dependencies do exist but have no influence on the game.)A204 104 184 184 rC214 116 -2 2 225 114 2 214 114 @a-2 -2 216 125 2 2 214 114 @b214 135 -1 1 225 134 1 214 134 @a-2 -2 216 145 2 2 214 124 @b214 155 -1 1 225 154 1 214 154 @a-2 -2 216 165 2 2 214 144 @b214.5 174.5 9.5 @i214 195 -1 1 225 194 1 214 194 @a-2 -2 216 205 2 2 214 184 @b214 215 -1 1 225 214 1 214 214 @a-2 -2 216 225 2 2 214 204 @b214 235 -1 1 225 234 1 214 234 @a-2 -2 216 245 2 2 214 224 @b214.5 254.5 9 @e214 276 -2 2 225 274 2 214 274 @a-2 -2 216 276 2 2 214 264 @b224 116 -2 2 245 114 2 224 114 @a-1 -1 235 125 1 1 234 114 @b234.5 134.5 9.5 @i234.5 154.5 9.5 @i234.5 174.5 9.5 @i234.5 194.5 9 @e234.5 214.5 9 @e234.5 234.5 9 @e234.5 254.5 9 @e234.5 274.5 9 @e244 116 -2 2 265 114 2 244 114 @a-1 -1 255 125 1 1 254 114 @b254.5 134.5 9.5 @i244 155 -1 1 265 154 1 244 154 @a-1 -1 255 165 1 1 254 144 @b254.5 174.5 9.5 @i254.5 194.5 9 @e244 215 -1 1 265 214 1 244 214 @a-1 -1 255 225 1 1 254 204 @b244 235 -1 1 265 234 1 244 234 @a-1 -1 255 245 1 1 254 224 @b254.5 254.5 9 @e244 276 -2 2 265 274 2 244 274 @a-1 -1 255 276 1 1 254 264 @b274.5 114.5 9.5 @i274.5 134.5 9.5 @i264 155 -1 1 285 154 1 264 154 @a-1 -1 275 165 1 1 274 144 @b274.5 174.5 9.5 @i274.5 194.5 9 @e274.5 214.5 9 @e264 235 -1 1 285 234 1 264 234 @a-1 -1 275 245 1 1 274 224 @b274.5 254.5 9 @e274.5 274.5 9 @e1 G287 107 15 15 rFgS1.1 1 scale262.729 123 :M0 Gf6_15 sf(B)SgR0 G294.5 134.5 9 @e-1 -1 289 139 1 1 294 127 @b288 139 -1 1 301 138 1 288 138 @a294 128 -1 1 301 138 1 294 127 @a294.5 154.5 9 @e-1 -1 289 159 1 1 294 147 @b288 159 -1 1 301 158 1 288 158 @a294 148 -1 1 301 158 1 294 147 @a294.5 174.5 9.5 @i294.5 194.5 9.5 @i294.5 214.5 9 @e294.5 234.5 9.5 @i294.5 254.5 9.5 @i294.5 274.5 9.5 @i1 G307 107 15 15 rFgS1.1 1 scale280.911 123 :M0 Gf6_15 sf(B)SgR0 G314.5 134.5 9 @e-1 -1 309 139 1 1 314 127 @b308 139 -1 1 321 138 1 308 138 @a314 128 -1 1 321 138 1 314 127 @a314.5 154.5 9.5 @i1 G307 167 15 15 rFgS1.1 1 scale280.911 183 :M0 Gf6_15 sf(C)SgR0 G314.5 194.5 9.5 @i314.5 214.5 9.5 @i314.5 234.5 9.5 @i314.5 254.5 9.5 @i314.5 274.5 9 @e334.5 114.5 9.5 @i334.5 134.5 9 @e-1 -1 329 139 1 1 334 127 @b328 139 -1 1 341 138 1 328 138 @a334 128 -1 1 341 138 1 334 127 @a334.5 154.5 9 @e-1 -1 329 159 1 1 334 147 @b328 159 -1 1 341 158 1 328 158 @a334 148 -1 1 341 158 1 334 147 @a334.5 174.5 9 @e-1 -1 329 179 1 1 334 167 @b328 179 -1 1 341 178 1 328 178 @a334 168 -1 1 341 178 1 334 167 @a334.5 194.5 9 @e-1 -1 329 199 1 1 334 187 @b328 199 -1 1 341 198 1 328 198 @a334 188 -1 1 341 198 1 334 187 @a324 215 -1 1 345 214 1 324 214 @a-1 -1 335 225 1 1 334 204 @b324 235 -1 1 345 234 1 324 234 @a-1 -1 335 245 1 1 334 224 @b324 255 -1 1 345 254 1 324 254 @a-1 -1 335 265 1 1 334 244 @b324 276 -2 2 345 274 2 324 274 @a-1 -1 335 276 1 1 334 264 @b354.5 114.5 9 @e-1 -1 349 119 1 1 354 107 @b348 119 -1 1 361 118 1 348 118 @a354 108 -1 1 361 118 1 354 107 @a344 135 -1 1 365 134 1 344 134 @a-1 -1 355 145 1 1 354 124 @b354.5 154.5 9 @e-1 -1 349 159 1 1 354 147 @b348 159 -1 1 361 158 1 348 158 @a354 148 -1 1 361 158 1 354 147 @a344 175 -1 1 365 174 1 344 174 @a-1 -1 355 185 1 1 354 164 @b354.5 194.5 9 @e-1 -1 349 199 1 1 354 187 @b348 199 -1 1 361 198 1 348 198 @a354 188 -1 1 361 198 1 354 187 @a354.5 214.5 9.5 @i354.5 234.5 9.5 @i354.5 254.5 9.5 @i354.5 274.5 9.5 @i364 116 -2 2 376 114 2 364 114 @a-2 -2 376 125 2 2 374 114 @b374.5 134.5 9 @e-1 -1 369 139 1 1 374 127 @b368 139 -1 1 381 138 1 368 138 @a374 128 -1 1 381 138 1 374 127 @a1 G367 147 15 15 rF369 163 :M0 Gf6_15 sf(A)S1 G367 167 15 15 rF369 183 :M0 G(A)S1 G367 187 15 15 rF369 203 :M0 G(A)S374.5 214.5 9.5 @i364 235 -1 1 376 234 1 364 234 @a-2 -2 376 245 2 2 374 224 @b374.5 254.5 9.5 @i364 276 -2 2 376 274 2 364 274 @a-2 -2 376 276 2 2 374 264 @bgRgS 29 30 538 781 rC221 307 :Mf4_12 sf-.071(Berlekamp's Endgame Problem)A112 331 :Mf3_12 sf2.091 .209(Example: This is another endgame problem by Berlekamp, from which our)J85 343 :M.052 .005(previous example was derived. The main difference is a stone at the uppermost A point.)J85 355 :M1.575 .157(The marked stones are not completely safe because if Black gets all six moves in)J85 367 :M.86 .086(endgames )Jf4_12 sf.473 .047(A, B)Jf3_12 sf.299 .03( and )Jf4_12 sf.257(C)Af3_12 sf.532 .053( the white stones will die. This relation does not affect the game)J85 379 :M.777 .078(value in this case, i.e. the value of the upper right corner is equal to the sum of local)J85 391 :M-.038(games )Af4_12 sf-.053(A+B+C)Af3_12 sf(.)S112 405 :M-.101(More information on dependencies will follow in the extensions in chapter 6.)A85 434 :Mf0_14 sf2.44 .244(How to Find Local Go Games)J112 452 :Mf3_12 sf-.026(We will determine which blocks are safe by using an algorithm based on Benson's.)A85 464 :M.679 .068(These blocks subdivide the rest of the board into independent areas. We can sacrifice)J85 476 :M.839 .084(accuracy for better board partition by using relatively safe blocks and other probable)J85 488 :M.007 .001(border lines as boundaries, too.)J112 502 :M-.021(Surrounded areas can be classified as territory, potential territory, open area. Move)A85 514 :M.471 .047(generation can be restricted for potential territories, and is not necessary at all for safe)J85 526 :M-.058(territories.)A85 555 :Mf0_16 sf-.151(5. Design of a Go Program Using Combinatorial Game Theory)A112 580 :Mf3_12 sf.845 .084(In this section we discuss suitable representations for local Go games and local)J85 592 :M-.07(search. We point out differences to the requirements of normal Go programs.)A85 621 :Mf0_14 sf2.814 .281(Data Structures for Local Go Games)J112 639 :Mf3_12 sf-.096(We found the following data structures necessary or desirable:)A113 655 :M-.117(\245 The local area and all local data such as blocks and territory must be kept.)A113 671 :M.088 .009(\245 The mathematical game evaluation must be built. This can be done in depth first)J124 685 :M-.104(fashion while building the local search tree.)A113 701 :M-.055(\245 Moves from the root position must be stored with the options of the mathematical)A124 715 :M-.019(game: In case a move to game )Af4_12 sf(G)Sf4_10 sf0 2 rm(L)S0 -2 rmf3_12 sf-.018( from the root node with value )Af4_12 sf(G)Sf3_12 sf-.016( is selected, it)A124 729 :M-.089(must be possible to retrieve the move leading to )Af4_12 sf-.161(G)Af4_10 sf0 2 rm-.104(L)A0 -2 rmf3_10 sf0 2 rm(.)S0 -2 rm113 745 :Mf3_12 sf-.073(\245 It is probably a good idea to keep the whole local tree in memory. Construction of)A124 759 :M1.851 .185(the mathematical game can then be done in a separate tree traversal after)Jendp%%Page: 13 13%%BeginPageSetupinitializepage(mm; page: 13 of 19)setjob%%EndPageSetup-29 -30 :TgS 29 30 538 781 rC124 79 :Mf3_12 sf-.12(expansion is complete. Local trees can be reused during a game if the local area is)A124 93 :M-.076(unchanged. Iterative tree expansion algorithms can work on such a stored tree.)A85 122 :Mf0_14 sf3.739 .374(Local Search)J112 140 :Mf3_12 sf-.032(In contrast to global search, local search can use special properties of the local area)A85 152 :M-.042(to guide search.)A112 166 :M.835 .083(\245 When the local area is small \(less than 10 empty points\), exhaustive search is)J85 178 :M-.035(possible [M\237ller/Gasser 92].)A112 192 :M.243 .024(\245 When specialized theories are applicable, drastic restrictions of the search space)J85 204 :M-.102(may be possible by strong pruning of moves and early static evaluation \(compare with the)A85 216 :Mf4_12 sf-.125(semeai)Af3_12 sf-.124( example above\).)A112 230 :M1.525 .152(\245 When heuristics propose a dominant local theme \(e.g. a weak group\) move)J85 242 :M-.116(generation can be restricted.)A112 256 :M.937 .094(\245 If no special case applies, other heuristics must be used to guide search. This)J85 268 :M-.111(entails all the usual problems of selective search.)A85 297 :Mf0_14 sf3.928 .393(Move Generation)J112 315 :Mf3_12 sf.422 .042(There are some differences to move generation for minimax evaluation: we must)J85 327 :M-.006(generate moves for both colors at each node. Furthermore we must distribute computing)A85 339 :M2.045 .205(time over all local games. Clearly some games will be more important, or more)J85 351 :M-.079(complicated, so they need more search.)A112 365 :Mf4_12 sf1.173 .117(Pruning rules)Jf3_12 sf.789 .079( determine which local move will not be generated. Examples are)J85 377 :Mf4_12 sf(dame)Sf3_12 sf-.006( moves and moves dominated by other moves [M\237ller/Gasser 92]. Other rules may)A85 389 :M-.084(be to use only the )Af4_12 sf-.109(n)Af3_12 sf-.084( best moves for each color at a level, with )Af4_12 sf-.109(n)Af3_12 sf-.094( depending on the depth or)A85 401 :M-.033(temperature of the node. It may be possible to implement )Af4_12 sf-.031(sente cutoffs)Af3_12 sf-.031(, i.e. generate only)A85 413 :M-.092(one artificial very high penalty value for not answering a proposed sente move.)A112 427 :Mf4_12 sf-.103(Termination rules)Af3_12 sf-.102( decide when a node should not be further expanded. The simplest)A85 439 :M-.077(case is when the pruning rules leave no legal moves.)A112 453 :M.145 .014(Otherwise we can use a static temperature estimate calculated from the number of)J85 465 :M.146 .015(unstable points inside the local area. Quiet nodes below a given temperature bound will)J85 477 :M.054 .005(not be expanded further. This strategy is well suited for an iterative deepening approach)J85 489 :M-.076(using a progressively smaller temperature bound.)A85 518 :Mf0_14 sf4.622 .462(Position Evaluation)J112 536 :Mf3_12 sf.701 .07(Evaluation of terminal nodes must map the local area to a number, a count how)J85 548 :M-.006(many points belong to either color. This is easy in real terminal position, where safe and)A85 560 :M-.069(dead stones, territories and neutral points are known exactly.)A112 574 :M.224 .022(If termination rules force evaluation of a nonterminal node, we must use heuristic)J85 586 :M.474 .047(evaluation. To give meaningful results, the evaluation error should lie below the static)J85 598 :M-.164(temperature estimate.)A85 627 :Mf0_14 sf3.478 .348(Implementation of Combinatorial Game Theory)J112 645 :Mf3_12 sf1.034 .103(Wolfe's toolkit [Wolfe 91b] implements mathematical games with many utility)J85 657 :M-.05(functions and operations such as adding games, converting numbers to games, building a)A85 669 :M.559 .056(game from its options, reduction to normal form, cooling, computing the temperature,)J85 681 :M.654 .065(Leftscores and Rightscores and comparing games. It provides conversion of games to)J85 693 :M.049 .005(text strings and vice versa. Our port to the Macintosh and Smart Game Board [Fierz 92])J85 705 :M.271 .027(adds menu commands for accessing the toolkit, storing mathematical games in a Smart)J85 717 :M-.151(Game Board node and converting an evaluated game tree into a mathematical game.)Aendp%%Page: 14 14%%BeginPageSetupinitializepage(mm; page: 14 of 19)setjob%%EndPageSetup-29 -30 :TgS 29 30 538 781 rC85 82 :Mf0_14 sf2.739 .274(Adapting Explorer to Use the Sum Game Model)J112 100 :Mf3_12 sf.674 .067(Recently we have started to integrate our sum game model into the Go program)J85 112 :M.058 .006(Explorer [Chen et al. 90]. We found the conversion to be easy in some parts and hard in)J85 124 :M.113(others.)A112 152 :M-.064(Easy tasks were:)A112 166 :M-.092(\245 To interface Wolfe's toolkit with Explorer)A112 180 :M-.151(\245 To implement several sum evaluation strategies)A113 196 :M-.128(\245 To replace the existing move decision procedure with a sum game engine)A112 226 :M-.15(More difficult tasks are:)A113 242 :M-.109(\245 Tune the existing board partition algorithm for the needs of sum games)A113 258 :M1.061 .106(\245 'Localize' existing algorithms, i.e. remove references to global \(whole board\))J124 272 :M-.032(properties as much as possible.)A113 288 :M.647 .065(\245 Re-use local results from previous moves: store partially expanded local trees,)J124 302 :M1.51 .151(scan and expand old trees in the new global context, garbage collection of)J124 316 :M-.187(irrelevant local trees)A112 346 :M-.079(As a preliminary conclusion some non trivial adaptations of Explorer are necessary,)A85 358 :M.304 .03(but it is certainly better to use it than to rewrite a Go program from scratch. Many data)J85 370 :M-.068(structures are local by nature anyway. Also, the transition can be done step by step with a)A85 382 :M-.033(slight abuse of the sum game model: an old move generator and evaluator can be used to)A85 394 :M-.131(generate a switch game value|0 that approximates the value of a move.)A85 423 :Mf0_16 sf-.135(6. Extensions of the Basic Sum Game Model)A112 448 :Mf3_12 sf.737 .074(In this section we discuss various problems with a simple sum game model and)J85 460 :M-.041(how they might be solved.)A85 489 :Mf0_14 sf3.248 .325(Problem: With Strict Independence Rules, Local Areas Become)J85 504 :M4.334 .433(Too Big)J112 522 :Mf3_12 sf-.038(Before the very late endgame, few local games are really independent from the rest)A85 534 :M.573 .057(of the board. It is hard to develop proper heuristics when games should be considered)J85 546 :M.467 .047(independent. A frequent case is a territory that can be reduced from several sides. The)J85 558 :M-.096(question is if these reductions can be treated as independent.)A139 572 80 67 rC145 579 -1 1 152 578 1 145 578 @a-1 -1 146 585 1 1 145 571 @b145 592 -1 1 152 591 1 145 591 @a-1 -1 146 598 1 1 145 584 @b145 605 -1 1 152 604 1 145 604 @a-1 -1 146 611 1 1 145 598 @b145 618 -1 1 152 617 1 145 617 @a-1 -1 146 624 1 1 145 611 @b145 632 -1 1 152 631 1 145 631 @a-1 -1 146 632 1 1 145 624 @b158 578 6 @i151 592 -1 1 165 591 1 151 591 @a-1 -1 159 599 1 1 158 584 @b151 605 -1 1 165 604 1 151 604 @a-1 -1 159 612 1 1 158 598 @b151 618 -1 1 165 617 1 151 617 @a-1 -1 159 625 1 1 158 611 @b151 632 -1 1 165 631 1 151 631 @a-1 -1 159 632 1 1 158 624 @b13 12 171.5 578 @j171.5 591.5 6 @e171.5 604.5 6 @e171.5 617.5 6 @e164 632 -1 1 178 631 1 164 631 @a-1 -1 172 632 1 1 171 624 @b13 12 184.5 578 @j184.5 591.5 6.5 @i184.5 604.5 6 @e178 618 -1 1 192 617 1 178 617 @a-1 -1 185 625 1 1 184 611 @b178 632 -1 1 191 631 1 178 631 @a-1 -1 185 632 1 1 184 624 @b11 12 198 591.5 @f11 12 198 604.5 @f191 618 -1 1 205 617 1 191 617 @a-1 -1 199 625 1 1 198 611 @b191 632 -1 1 204 631 1 191 631 @a-1 -1 199 632 1 1 198 624 @b12 13 211 604.5 @j12 13 211 617.5 @j204 632 -1 1 218 631 1 204 631 @a-1 -1 212 632 1 1 211 624 @bgRgS 29 30 538 781 rC220 640 :Mf3_36 sf-.048(   )A0 -30 rm-.157(= )A0 30 rm277 573 40 66 rC283 580 -1 1 290 579 1 283 579 @a-1 -1 284 585 1 1 283 572 @b283 593 -1 1 290 592 1 283 592 @a-1 -1 284 599 1 1 283 585 @b283 606 -1 1 290 605 1 283 605 @a-1 -1 284 612 1 1 283 598 @b283 619 -1 1 290 618 1 283 618 @a-1 -1 284 625 1 1 283 611 @b283 632 -1 1 289 631 1 283 631 @a-1 -1 284 632 1 1 283 624 @b296 579 6 @i289 593 -1 1 303 592 1 289 592 @a-1 -1 297 599 1 1 296 585 @b289 606 -1 1 303 605 1 289 605 @a-1 -1 297 612 1 1 296 598 @b289 619 -1 1 303 618 1 289 618 @a-1 -1 297 625 1 1 296 611 @b289 632 -1 1 303 631 1 289 631 @a-1 -1 297 633 1 1 296 624 @b309 579 6 @i309 592 5.5 @e309 605 5.5 @e309 618 5.5 @egRgS 29 30 538 781 rC318 640 :Mf3_36 sf-.048(  )A0 -30 rm-.109(+)A0 30 rm-.097(  )A375 580 53 40 rC381 586 5.5 @e381 599 5.5 @e374 613 -1 1 387 612 1 374 612 @a-1 -1 382 613 1 1 381 605 @b394 586 5.5 @e387 600 -1 1 401 599 1 387 599 @a-1 -1 395 606 1 1 394 592 @b387 613 -1 1 401 612 1 387 612 @a-1 -1 395 613 1 1 394 605 @b407 586 5.5 @e400 600 -1 1 414 599 1 400 599 @a-1 -1 408 606 1 1 407 592 @b400 613 -1 1 414 612 1 400 612 @a-1 -1 408 613 1 1 407 605 @b420 586 6 @i420 599 6 @i413 613 -1 1 427 612 1 413 612 @a-1 -1 421 613 1 1 420 605 @bgRgS 29 30 538 781 rC429 610 :Mf3_36 sf( ?)S251 668 :Mf4_12 sf-.124(One game, or two?)A85 707 :Mf0_14 sf4.587 .459(External Dependencies)J112 725 :Mf3_12 sf.212 .021(One way to get better board partition is to allow explicit external dependencies of)J85 737 :M1.503 .15(local areas, such as a number of external liberties of blocks, outside eye space, or)J85 749 :M.966 .097(connections. Using such a model allows stronger partition, but it is more difficult to)Jendp%%Page: 15 15%%BeginPageSetupinitializepage(mm; page: 15 of 19)setjob%%EndPageSetup-29 -30 :TgS 29 30 538 781 rC85 79 :Mf3_12 sf.149 .015(recognize and maintain the dependencies. After each change of outside dependencies, a)J85 91 :M-.124(local area must be recomputed.)A263 105 67 53 rC269 112 -1 1 276 111 1 269 111 @a-1 -1 270 117 1 1 269 111 @b269 125 -1 1 276 124 1 269 124 @a-1 -1 270 131 1 1 269 117 @b269 137 6 @i275 112 -1 1 289 111 1 275 111 @a-1 -1 283 118 1 1 282 111 @b275 125 -1 1 290 124 1 275 124 @a-1 -1 283 131 1 1 282 117 @b13 12 282.5 137 @j289 112 -1 1 302 111 1 289 111 @a-1 -1 296 118 1 1 295 111 @b289 125 -1 1 303 124 1 289 124 @a-1 -1 296 131 1 1 295 117 @b13 12 295.5 137 @j1 G291 145 9 10 rFgS.663 .655 scale440.122 236.746 :M0 Gf6_15 sf(?)SgR0 G13 12 308.5 111 @j13 12 308.5 124 @j13 12 308.5 137 @j1 G317 119 10 10 rFgS.663 .655 scale480.818 197.034 :M0 Gf6_15 sf(?)SgRgRgS 29 30 538 781 rC244 178 :Mf4_12 sf-.158(6 Points in the Corner)A112 202 :Mf3_12 sf-.04(Example: The evaluation of this 6 point corner area depends only on the number of)A85 214 :M-.089(outside liberties and eyes of the black stones, but not on their exact location on the board.)A85 243 :Mf0_14 sf3.049 .305(Expanding the Local Area During Search)J112 261 :Mf3_12 sf1.078 .108(When using a heuristical board partition algorithm, search may step across the)J85 273 :M-.093(boundaries of the local area.)A201 287 190 60 rC205 292 -1 1 211 291 1 205 291 @a-1 -1 206 297 1 1 205 291 @b205 302 -1 1 211 301 1 205 301 @a-1 -1 206 307 1 1 205 296 @b205 312 -1 1 211 311 1 205 311 @a-1 -1 206 317 1 1 205 306 @b205 322 -1 1 211 321 1 205 321 @a-1 -1 206 327 1 1 205 316 @b205 332 -1 1 211 331 1 205 331 @a-1 -1 206 337 1 1 205 326 @b205 342 -1 1 211 341 1 205 341 @a-1 -1 206 347 1 1 205 336 @b210 292 -1 1 221 291 1 210 291 @a-1 -1 216 297 1 1 215 291 @b210 302 -1 1 221 301 1 210 301 @a-1 -1 216 307 1 1 215 296 @b210 312 -1 1 221 311 1 210 311 @a-1 -1 216 317 1 1 215 306 @b210 322 -1 1 221 321 1 210 321 @a-1 -1 216 327 1 1 215 316 @b210 332 -1 1 221 331 1 210 331 @a-1 -1 216 337 1 1 215 326 @b210 342 -1 1 221 341 1 210 341 @a-1 -1 216 347 1 1 215 336 @b222 289 -1 1 230 295 1 222 288 @a-1 -1 223 296 1 1 229 288 @b222 299 -1 1 230 305 1 222 298 @a-1 -1 223 306 1 1 229 298 @b220 312 -1 1 231 311 1 220 311 @a-1 -1 226 317 1 1 225 306 @b220 322 -1 1 231 321 1 220 321 @a-1 -1 226 327 1 1 225 316 @b220 332 -1 1 231 331 1 220 331 @a-1 -1 226 337 1 1 225 326 @b220 342 -1 1 231 341 1 220 341 @a-1 -1 226 347 1 1 225 336 @b232 289 -1 1 240 295 1 232 288 @a-1 -1 233 296 1 1 239 288 @b232 299 -1 1 240 305 1 232 298 @a-1 -1 233 306 1 1 239 298 @b235.5 311.5 4.5 @i235.5 321.5 4.5 @i235.5 331.5 4.5 @i235.5 341.5 4.5 @i242 289 -1 1 250 295 1 242 288 @a-1 -1 243 296 1 1 249 288 @b242 299 -1 1 250 305 1 242 298 @a-1 -1 243 306 1 1 249 298 @b242 309 -1 1 250 315 1 242 308 @a-1 -1 243 316 1 1 249 308 @b240 322 -1 1 251 321 1 240 321 @a-1 -1 246 327 1 1 245 316 @b245.5 331.5 4 @e240 342 -1 1 251 341 1 240 341 @a-1 -1 246 347 1 1 245 336 @b252 289 -1 1 260 295 1 252 288 @a-1 -1 253 296 1 1 259 288 @b252 299 -1 1 260 305 1 252 298 @a-1 -1 253 306 1 1 259 298 @b255.5 311.5 4 @e250 322 -1 1 261 321 1 250 321 @a-1 -1 256 327 1 1 255 316 @b255.5 331.5 4 @e255.5 341.5 4.5 @i262 289 -1 1 270 295 1 262 288 @a-1 -1 263 296 1 1 269 288 @b262 299 -1 1 270 305 1 262 298 @a-1 -1 263 306 1 1 269 298 @b260 312 -1 1 271 311 1 260 311 @a-1 -1 266 317 1 1 265 306 @b260 322 -1 1 271 321 1 260 321 @a-1 -1 266 327 1 1 265 316 @b265.5 331.5 4 @e260 342 -1 1 271 341 1 260 341 @a-1 -1 266 347 1 1 265 336 @b270 292 -1 1 281 291 1 270 291 @a-1 -1 276 297 1 1 275 291 @b270 302 -1 1 281 301 1 270 301 @a-1 -1 276 307 1 1 275 296 @b270 312 -1 1 281 311 1 270 311 @a-1 -1 276 317 1 1 275 306 @b270 322 -1 1 281 321 1 270 321 @a-1 -1 276 327 1 1 275 316 @b270 332 -1 1 281 331 1 270 331 @a-1 -1 276 337 1 1 275 326 @b270 342 -1 1 281 341 1 270 341 @a-1 -1 276 347 1 1 275 336 @b280 292 -1 1 291 291 1 280 291 @a-1 -1 286 297 1 1 285 291 @b280 302 -1 1 291 301 1 280 301 @a-1 -1 286 307 1 1 285 296 @b280 312 -1 1 291 311 1 280 311 @a-1 -1 286 317 1 1 285 306 @b280 322 -1 1 291 321 1 280 321 @a-1 -1 286 327 1 1 285 316 @b280 332 -1 1 291 331 1 280 331 @a-1 -1 286 337 1 1 285 326 @b285.5 341.5 4 @e290 292 -1 1 301 291 1 290 291 @a-1 -1 296 297 1 1 295 291 @b290 302 -1 1 301 301 1 290 301 @a-1 -1 296 307 1 1 295 296 @b290 312 -1 1 301 311 1 290 311 @a-1 -1 296 317 1 1 295 306 @b290 322 -1 1 301 321 1 290 321 @a-1 -1 296 327 1 1 295 316 @b295.5 321.5 1.5 @i290 332 -1 1 301 331 1 290 331 @a-1 -1 296 337 1 1 295 326 @b295.5 341.5 4 @e300 292 -1 1 311 291 1 300 291 @a-1 -1 306 297 1 1 305 291 @b300 302 -1 1 311 301 1 300 301 @a-1 -1 306 307 1 1 305 296 @b300 312 -1 1 311 311 1 300 311 @a-1 -1 306 317 1 1 305 306 @b300 322 -1 1 311 321 1 300 321 @a-1 -1 306 327 1 1 305 316 @b300 332 -1 1 311 331 1 300 331 @a-1 -1 306 337 1 1 305 326 @b300 342 -1 1 311 341 1 300 341 @a-1 -1 306 347 1 1 305 336 @b310 292 -1 1 321 291 1 310 291 @a-1 -1 316 297 1 1 315 291 @b310 302 -1 1 321 301 1 310 301 @a-1 -1 316 307 1 1 315 296 @b310 312 -1 1 321 311 1 310 311 @a-1 -1 316 317 1 1 315 306 @b315.5 321.5 4 @e310 332 -1 1 321 331 1 310 331 @a-1 -1 316 337 1 1 315 326 @b315.5 341.5 4 @e320 292 -1 1 331 291 1 320 291 @a-1 -1 326 297 1 1 325 291 @b320 302 -1 1 331 301 1 320 301 @a-1 -1 326 307 1 1 325 296 @b320 312 -1 1 331 311 1 320 311 @a-1 -1 326 317 1 1 325 306 @b320 322 -1 1 331 321 1 320 321 @a-1 -1 326 327 1 1 325 316 @b320 332 -1 1 331 331 1 320 331 @a-1 -1 326 337 1 1 325 326 @b320 342 -1 1 331 341 1 320 341 @a-1 -1 326 347 1 1 325 336 @b330 292 -1 1 341 291 1 330 291 @a-1 -1 336 297 1 1 335 291 @b330 302 -1 1 341 301 1 330 301 @a-1 -1 336 307 1 1 335 296 @b335.5 311.5 4 @e330 322 -1 1 341 321 1 330 321 @a-1 -1 336 327 1 1 335 316 @b335.5 331.5 4.5 @i330 342 -1 1 341 341 1 330 341 @a-1 -1 336 347 1 1 335 336 @b340 292 -1 1 351 291 1 340 291 @a-1 -1 346 297 1 1 345 291 @b340 302 -1 1 351 301 1 340 301 @a-1 -1 346 307 1 1 345 296 @b340 312 -1 1 351 311 1 340 311 @a-1 -1 346 317 1 1 345 306 @b340 322 -1 1 351 321 1 340 321 @a-1 -1 346 327 1 1 345 316 @b340 332 -1 1 351 331 1 340 331 @a-1 -1 346 337 1 1 345 326 @b340 342 -1 1 351 341 1 340 341 @a-1 -1 346 347 1 1 345 336 @b350 292 -1 1 361 291 1 350 291 @a-1 -1 356 297 1 1 355 291 @b355.5 301.5 4 @e350 312 -1 1 361 311 1 350 311 @a-1 -1 356 317 1 1 355 306 @b355.5 321.5 4.5 @i350 332 -1 1 361 331 1 350 331 @a-1 -1 356 337 1 1 355 326 @b350 342 -1 1 361 341 1 350 341 @a-1 -1 356 347 1 1 355 336 @b360 292 -1 1 371 291 1 360 291 @a-1 -1 366 297 1 1 365 291 @b360 302 -1 1 371 301 1 360 301 @a-1 -1 366 307 1 1 365 296 @b365.5 311.5 4.5 @i360 322 -1 1 371 321 1 360 321 @a-1 -1 366 327 1 1 365 316 @b360 332 -1 1 371 331 1 360 331 @a-1 -1 366 337 1 1 365 326 @b365.5 341.5 4.5 @i370 292 -1 1 381 291 1 370 291 @a-1 -1 376 297 1 1 375 291 @b370 302 -1 1 381 301 1 370 301 @a-1 -1 376 307 1 1 375 296 @b370 312 -1 1 381 311 1 370 311 @a-1 -1 376 317 1 1 375 306 @b370 322 -1 1 381 321 1 370 321 @a-1 -1 376 327 1 1 375 316 @b370 332 -1 1 381 331 1 370 331 @a-1 -1 376 337 1 1 375 326 @b370 342 -1 1 381 341 1 370 341 @a-1 -1 376 347 1 1 375 336 @b380 292 -1 1 386 291 1 380 291 @a-1 -1 386 297 1 1 385 291 @b380 302 -1 1 387 301 1 380 301 @a-1 -1 386 307 1 1 385 296 @b380 312 -1 1 387 311 1 380 311 @a-1 -1 386 317 1 1 385 306 @b380 322 -1 1 387 321 1 380 321 @a-1 -1 386 327 1 1 385 316 @b380 332 -1 1 387 331 1 380 331 @a-1 -1 386 337 1 1 385 326 @b380 342 -1 1 387 341 1 380 341 @a-1 -1 386 347 1 1 385 336 @bgRgS 29 30 538 781 rC237 367 :Mf4_12 sf-.23(An open-ended local area)A112 391 :Mf3_12 sf.071 .007(In the example above, board partition might generate a local area consisting of the)J85 403 :M.724 .072(marked points. The problem is that this area is open toward adjacent black and white)J85 415 :M.491 .049(territory, and search eventually expands into that territory. If such an open border of a)J85 427 :M-.123(local area is reached during search we must extend the area in that direction.)A201 441 190 60 rC205 446 -1 1 211 445 1 205 445 @a-1 -1 206 451 1 1 205 445 @b205 456 -1 1 211 455 1 205 455 @a-1 -1 206 461 1 1 205 450 @b205 466 -1 1 211 465 1 205 465 @a-1 -1 206 471 1 1 205 460 @b205 476 -1 1 211 475 1 205 475 @a-1 -1 206 481 1 1 205 470 @b205 486 -1 1 211 485 1 205 485 @a-1 -1 206 491 1 1 205 480 @b205 496 -1 1 211 495 1 205 495 @a-1 -1 206 501 1 1 205 490 @b210 446 -1 1 221 445 1 210 445 @a-1 -1 216 451 1 1 215 445 @b210 456 -1 1 221 455 1 210 455 @a-1 -1 216 461 1 1 215 450 @b210 466 -1 1 221 465 1 210 465 @a-1 -1 216 471 1 1 215 460 @b210 476 -1 1 221 475 1 210 475 @a-1 -1 216 481 1 1 215 470 @b210 486 -1 1 221 485 1 210 485 @a-1 -1 216 491 1 1 215 480 @b210 496 -1 1 221 495 1 210 495 @a-1 -1 216 501 1 1 215 490 @b222 443 -1 1 230 449 1 222 442 @a-1 -1 223 450 1 1 229 442 @b222 453 -1 1 230 459 1 222 452 @a-1 -1 223 460 1 1 229 452 @b220 466 -1 1 231 465 1 220 465 @a-1 -1 226 471 1 1 225 460 @b220 476 -1 1 231 475 1 220 475 @a-1 -1 226 481 1 1 225 470 @b220 486 -1 1 231 485 1 220 485 @a-1 -1 226 491 1 1 225 480 @b220 496 -1 1 231 495 1 220 495 @a-1 -1 226 501 1 1 225 490 @b232 443 -1 1 240 449 1 232 442 @a-1 -1 233 450 1 1 239 442 @b232 453 -1 1 240 459 1 232 452 @a-1 -1 233 460 1 1 239 452 @b235.5 465.5 4.5 @i235.5 475.5 4.5 @i235.5 485.5 4.5 @i235.5 495.5 4.5 @i242 443 -1 1 250 449 1 242 442 @a-1 -1 243 450 1 1 249 442 @b245.5 455.5 4.5 @i:a0<FFFFFFFFFFFFFFFF><FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF>bk null:b242 453 -1 1 250 459 1 242 452 @a-1 -1 243 460 1 1 249 452 @b:egS.55 .5 scale440.01 918.056 :M0 Gf6_15 sf1 G(1)SgR0 G242 463 -1 1 250 469 1 242 462 @a-1 -1 243 470 1 1 249 462 @b240 476 -1 1 251 475 1 240 475 @a-1 -1 246 481 1 1 245 470 @b245.5 485.5 4 @e240 496 -1 1 251 495 1 240 495 @a-1 -1 246 501 1 1 245 490 @b252 443 -1 1 260 449 1 252 442 @a-1 -1 253 450 1 1 259 442 @b252 453 -1 1 260 459 1 252 452 @a-1 -1 253 460 1 1 259 452 @b255.5 465.5 4 @e250 476 -1 1 261 475 1 250 475 @a-1 -1 256 481 1 1 255 470 @b255.5 485.5 4 @e255.5 495.5 4.5 @i262 443 -1 1 270 449 1 262 442 @a-1 -1 263 450 1 1 269 442 @b265.5 455.5 4.5 @i:a0<FFFFFFFFFFFFFFFF><FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF>bk null:b262 453 -1 1 270 459 1 262 452 @a-1 -1 263 460 1 1 269 452 @b:egS.55 .5 scale476.374 918.056 :M0 Gf6_15 sf1 G(2)SgR0 G260 466 -1 1 271 465 1 260 465 @a-1 -1 266 471 1 1 265 460 @b260 476 -1 1 271 475 1 260 475 @a-1 -1 266 481 1 1 265 470 @b265.5 485.5 4 @e260 496 -1 1 271 495 1 260 495 @a-1 -1 266 501 1 1 265 490 @b270 446 -1 1 281 445 1 270 445 @a-1 -1 276 451 1 1 275 445 @b270 456 -1 1 281 455 1 270 455 @a-1 -1 276 461 1 1 275 450 @b270 466 -1 1 281 465 1 270 465 @a-1 -1 276 471 1 1 275 460 @b270 476 -1 1 281 475 1 270 475 @a-1 -1 276 481 1 1 275 470 @b270 486 -1 1 281 485 1 270 485 @a-1 -1 276 491 1 1 275 480 @b270 496 -1 1 281 495 1 270 495 @a-1 -1 276 501 1 1 275 490 @b280 446 -1 1 291 445 1 280 445 @a-1 -1 286 451 1 1 285 445 @b280 456 -1 1 291 455 1 280 455 @a-1 -1 286 461 1 1 285 450 @b280 466 -1 1 291 465 1 280 465 @a-1 -1 286 471 1 1 285 460 @b280 476 -1 1 291 475 1 280 475 @a-1 -1 286 481 1 1 285 470 @b280 486 -1 1 291 485 1 280 485 @a-1 -1 286 491 1 1 285 480 @b285.5 495.5 4 @e290 446 -1 1 301 445 1 290 445 @a-1 -1 296 451 1 1 295 445 @b290 456 -1 1 301 455 1 290 455 @a-1 -1 296 461 1 1 295 450 @b290 466 -1 1 301 465 1 290 465 @a-1 -1 296 471 1 1 295 460 @b290 476 -1 1 301 475 1 290 475 @a-1 -1 296 481 1 1 295 470 @b295.5 475.5 1.5 @i290 486 -1 1 301 485 1 290 485 @a-1 -1 296 491 1 1 295 480 @b295.5 495.5 4 @e300 446 -1 1 311 445 1 300 445 @a-1 -1 306 451 1 1 305 445 @b300 456 -1 1 311 455 1 300 455 @a-1 -1 306 461 1 1 305 450 @b300 466 -1 1 311 465 1 300 465 @a-1 -1 306 471 1 1 305 460 @b300 476 -1 1 311 475 1 300 475 @a-1 -1 306 481 1 1 305 470 @b300 486 -1 1 311 485 1 300 485 @a-1 -1 306 491 1 1 305 480 @b300 496 -1 1 311 495 1 300 495 @a-1 -1 306 501 1 1 305 490 @b310 446 -1 1 321 445 1 310 445 @a-1 -1 316 451 1 1 315 445 @b310 456 -1 1 321 455 1 310 455 @a-1 -1 316 461 1 1 315 450 @b310 466 -1 1 321 465 1 310 465 @a-1 -1 316 471 1 1 315 460 @b315.5 475.5 4 @e310 486 -1 1 321 485 1 310 485 @a-1 -1 316 491 1 1 315 480 @b315.5 495.5 4 @e320 446 -1 1 331 445 1 320 445 @a-1 -1 326 451 1 1 325 445 @b320 456 -1 1 331 455 1 320 455 @a-1 -1 326 461 1 1 325 450 @b320 466 -1 1 331 465 1 320 465 @a-1 -1 326 471 1 1 325 460 @b320 476 -1 1 331 475 1 320 475 @a-1 -1 326 481 1 1 325 470 @b320 486 -1 1 331 485 1 320 485 @a-1 -1 326 491 1 1 325 480 @b320 496 -1 1 331 495 1 320 495 @a-1 -1 326 501 1 1 325 490 @b330 446 -1 1 341 445 1 330 445 @a-1 -1 336 451 1 1 335 445 @b330 456 -1 1 341 455 1 330 455 @a-1 -1 336 461 1 1 335 450 @b335.5 465.5 4 @e330 476 -1 1 341 475 1 330 475 @a-1 -1 336 481 1 1 335 470 @b335.5 485.5 4.5 @i330 496 -1 1 341 495 1 330 495 @a-1 -1 336 501 1 1 335 490 @b340 446 -1 1 351 445 1 340 445 @a-1 -1 346 451 1 1 345 445 @b340 456 -1 1 351 455 1 340 455 @a-1 -1 346 461 1 1 345 450 @b340 466 -1 1 351 465 1 340 465 @a-1 -1 346 471 1 1 345 460 @b340 476 -1 1 351 475 1 340 475 @a-1 -1 346 481 1 1 345 470 @b340 486 -1 1 351 485 1 340 485 @a-1 -1 346 491 1 1 345 480 @b340 496 -1 1 351 495 1 340 495 @a-1 -1 346 501 1 1 345 490 @b350 446 -1 1 361 445 1 350 445 @a-1 -1 356 451 1 1 355 445 @b355.5 455.5 4 @e350 466 -1 1 361 465 1 350 465 @a-1 -1 356 471 1 1 355 460 @b355.5 475.5 4.5 @i350 486 -1 1 361 485 1 350 485 @a-1 -1 356 491 1 1 355 480 @b350 496 -1 1 361 495 1 350 495 @a-1 -1 356 501 1 1 355 490 @b360 446 -1 1 371 445 1 360 445 @a-1 -1 366 451 1 1 365 445 @b360 456 -1 1 371 455 1 360 455 @a-1 -1 366 461 1 1 365 450 @b365.5 465.5 4.5 @i360 476 -1 1 371 475 1 360 475 @a-1 -1 366 481 1 1 365 470 @b360 486 -1 1 371 485 1 360 485 @a-1 -1 366 491 1 1 365 480 @b365.5 495.5 4.5 @i370 446 -1 1 381 445 1 370 445 @a-1 -1 376 451 1 1 375 445 @b370 456 -1 1 381 455 1 370 455 @a-1 -1 376 461 1 1 375 450 @b370 466 -1 1 381 465 1 370 465 @a-1 -1 376 471 1 1 375 460 @b370 476 -1 1 381 475 1 370 475 @a-1 -1 376 481 1 1 375 470 @b370 486 -1 1 381 485 1 370 485 @a-1 -1 376 491 1 1 375 480 @b370 496 -1 1 381 495 1 370 495 @a-1 -1 376 501 1 1 375 490 @b380 446 -1 1 386 445 1 380 445 @a-1 -1 386 451 1 1 385 445 @b380 456 -1 1 387 455 1 380 455 @a-1 -1 386 461 1 1 385 450 @b380 466 -1 1 387 465 1 380 465 @a-1 -1 386 471 1 1 385 460 @b380 476 -1 1 387 475 1 380 475 @a-1 -1 386 481 1 1 385 470 @b380 486 -1 1 387 485 1 380 485 @a-1 -1 386 491 1 1 385 480 @b380 496 -1 1 387 495 1 380 495 @a-1 -1 386 501 1 1 385 490 @bgRgS 29 30 538 781 rC207 521 :Mf4_12 sf-.161(Search extends into neighbor territory)A112 545 :Mf3_12 sf-.003(This extension introduces several problems:  A basic question is where to limit the)A85 557 :M.489 .049(expansion of the area. We do not want our search to run around the whole board. One)J85 569 :M-.07(possible solution is to set a maximal area at the very beginning. A problem for evaluation)A85 581 :M1.083 .108(is that it takes place at different point sets now. This must be adjusted too. Another)J85 593 :M.408 .041(problem is that new unexpected dependencies may show up during search, when areas)J85 605 :M1.444 .144(begin to overlap. More research is needed to find workable solutions to this board)J85 617 :M-.097(partition problem.)A85 646 :Mf0_14 sf2.934 .293(Splitting a Local Game)J112 664 :Mf3_12 sf-.072(Moves executed during local search often cause more board partition. Therefore we)A85 676 :M1.841 .184(can split our game into a sum of several subgames. In our experiments with late)J85 688 :M.532 .053(endgames, such 'dynamic splitting' reduced the search space substantially. Very often,)J85 700 :M.214 .021(some split off parts can be classified statically as territory or neutral points. In any case)J85 712 :M-.098(further decomposition helps fight combinatorial explosion.)Aendp%%Page: 16 16%%BeginPageSetupinitializepage(mm; page: 16 of 19)setjob%%EndPageSetup-29 -30 :TgS 29 30 538 781 rC254 70 84 73 rC320 113 6 @i10 11 308.5 137 @f-1 -1 309 132 1 1 308 119 @b302 126 -1 1 315 125 1 302 125 @a-1 -1 273 120 1 1 272 107 @b266 114 -1 1 279 113 1 266 113 @a-1 -1 309 120 1 1 308 107 @b302 114 -1 1 315 113 1 302 113 @a296 101 6 @i297 77 5.5 @e331.5 112.5 5.5 @i11 12 331.5 101 @j11 12 331.5 89 @j10 11 308.5 77 @f-1 -1 297 120 1 1 296 107 @b290 114 -1 1 303 113 1 290 113 @a320 89 6 @i284 101 6 @i12 11 284 112.5 @j272 101 6 @i-1 -1 321 108 1 1 320 95 @b314 102 -1 1 327 101 1 314 101 @a-1 -1 309 96 1 1 308 83 @b302 90 -1 1 315 89 1 302 89 @a-1 -1 297 96 1 1 296 83 @b290 90 -1 1 303 89 1 290 89 @a-1 -1 297 132 1 1 296 119 @b290 126 -1 1 303 125 1 290 125 @a285 125 5.5 @e285 137 5.5 @e285 89 5.5 @e285 77 5.5 @e297 137 5.5 @e272 124 6 @i260.5 112.5 5.5 @i11 12 260.5 124 @j11 12 260.5 101 @j320 137 5.5 @e320 125 5.5 @e305 96 6 11 rCgS.656 .664 scale469.286 152.713 :T-469.286 -152.713 :T466.286 156.713 :Mf8_12 sf(a)SgRgRgS 29 30 538 781 rC222 162 :Mf4_12 sf-.262(Splitting an area into three parts)A112 186 :Mf3_12 sf.056 .006(Splitting the area implies shrinking the local area, which leads to similar problems)J85 198 :M.432 .043(as expanding it. A surprising implementation problem arose when using hash tables in)J85 210 :M.273 .027(conjunction with area splitting. Now a real local hash table is needed because the same)J85 222 :M-.045(global position can appear after in different contexts after different sequences of splitting)A85 234 :M(operations.)S85 263 :Mf0_14 sf2.844 .284(How to Handle Dependencies)J112 281 :Mf3_12 sf-.054(Dependencies between games can occur when the areas of local Go games overlap.)A85 293 :M-.067(This happens when using expanding areas. Another case of dependencies between games)A85 305 :M.024 .002(is if external dependencies of one local game are related to another game. The effects of)J85 317 :M-.054(such dependencies differ widely: Very often independence does not hold strictly, but it is)A85 329 :M1.413 .141(a useful approximation. In cases such as double threats however, dependencies are)J85 341 :M-.091(crucial.)A112 355 :M-.116(Three strategies of dealing with dependencies seem possible:)A113 371 :M-.065(\245 ignore them.)A113 387 :M.559 .056(\245 Merge dependent local areas, then start from scratch with merged area. Maybe)J124 401 :M-.074(reuse previously generated local trees for further expansions.)A113 417 :M.874 .087(\245 Analyse the interaction between local games, then use a specialized theory to)J124 431 :M-.104(construct a joint game.)A112 445 :M-.031(A frequent kind of dependency is the )Af4_12 sf-.03(double threat: )Af3_12 sf-.032(the same first move appears in)A85 457 :M.741 .074(two games which then continue independently. This case can be handled formally by)J85 469 :M-.067(replacing the options )Af4_12 sf-.09(G + H)Af4_9 sf0 2 rm-.071(L)A0 -2 rmf4_12 sf-.07(, G)Af4_9 sf0 2 rm-.052(L )A0 -2 rmf4_12 sf-.074(+ H  )Af3_12 sf-.074(of the sum game )Af4_12 sf-.09(G + H)Af3_12 sf-.069( with)Af4_12 sf-.083( G)Af4_9 sf0 2 rm-.071(L)A0 -2 rmf4_12 sf-.094(+ H)Af4_9 sf0 2 rm-.071(L)A0 -2 rmf4_12 sf(.)Sf4_9 sf0 2 rm( )S0 -2 rmf3_12 sf-.08(Other kinds)A85 481 :M-.091(of merging two games by identifying moves can be imagined as well.)A112 495 :M-.064([Wolfe 91a] analyses sets of simple endgames )Af4_12 sf-.062(\(corridors\))Af3_12 sf-.063( which are adjacent to the)A85 507 :M1.484 .148(same block. This block must be saved from capture after those liberties which are)J85 519 :M-.102(distributed over the endgames have been occupied.)A85 548 :Mf0_14 sf3.162 .316(Bounds for Game Evaluation)J112 566 :Mf3_12 sf1.592 .159(Conservative evaluation can be used to calculate upper and lower bounds on)J85 578 :M.219 .022(terminal positions of local games. These values can then be backed up to get upper and)J85 590 :M-.018(lower bounds for the mathematical game evaluation of the root. Such an approach might)A85 602 :M.734 .073(lead to better algorithms for selective expansion of the local search trees. Games that)J85 614 :M-.095(contribute most to uncertainty of root evaluation can be expanded deeper. It remains to be)A85 626 :M.549 .055(seen whether significant differences to a temperature driven expansion strategy result.)J85 638 :M-.026(One advantage of such a procedure is that with valid bounds a win could be proven even)A85 650 :M-.136(if the exact game value is not computable.)A85 679 :Mf0_14 sf2.926 .293(Local Go Games with  Loops \(Ko's\))J112 697 :Mf3_12 sf-.108(The theory of loopy combinatorial games is still being developed [Berlekamp 92]. It)A85 709 :M.281 .028(seems that two fundamentally different classes of Ko positions exist. For the 'harmless')J85 721 :M-.032(class of Ko's much combinatorial game theory can be applied: For example, mean value,)A85 733 :M.271 .027(temperature, Leftscore and Rightscore of such games exist and they are independent of)J85 745 :M.41 .041(Ko threats. For the other class of 'hyperactive' games these values depend on available)J85 757 :M-.073(Ko threats, and a general theory seems more difficult.)Aendp%%Page: 17 17%%BeginPageSetupinitializepage(mm; page: 17 of 19)setjob%%EndPageSetup-29 -30 :TgS 29 30 538 781 rC112 79 :Mf3_12 sf.611 .061([Berlekamp 92] gives an extension of thermostrat that incorporates loopy games)J85 91 :M-.046(and simple Ko threats.)A112 105 :M3.557 .356(Iterative calculation of bounds for games involving Ko is described in)J85 117 :M-.034([M\237ller/Gasser 92].)A112 131 :M-.069(A complete theory of Ko's is hard: for example, it must handle the tradeoff between)A85 143 :M-.053(playing a move for profit and saving it as a later Ko threat, or when to play a point losing)A85 155 :M.722 .072(threat, or when to generate or remove Ko threats instead of making points, or how to)J85 167 :M-.079(play small Ko threats in a small Ko fight and leave the big ones for a later, bigger Ko.)A85 196 :Mf0_16 sf-.181(7. Summary, Outlook and Open Problems)A85 236 :Mf0_14 sf2.701 .27(Features of the Proposed Sum Game Model for Go)J113 256 :Mf3_12 sf-.045(\245 The Go knowledge is clearly separated from the evaluation, therefore both can be)A124 270 :M-.085(improved separately.)A113 286 :M1.032 .103(\245 There is inherent parallelism on many levels: independent local searches and)J124 300 :M-.113(mapping to math games, operations on math games can be parallelized.)A113 316 :M.888 .089(\245 Stepwise, directed expansion of search is supported. This provides more time)J124 330 :M-.06(control than usual iterative deepening. It is easy to use opponent's time.)A113 346 :M-.075(\245 Important Go terms can be expressed formally.)A113 362 :M1.472 .147(\245 Locality reduces the complexity of move generation. With the emphasis on)J124 376 :M.225 .022(evaluation, clever pruning during move generation is not as crucial as in global)J124 390 :M-.084(search because of the reduced search space.)A113 406 :M-.121(\245 Added complexity for managing mathematical games, and sets of local trees.)A113 422 :M-.088(\245 Board partition and recognition of dependencies must be good.)A113 438 :M-.135(\245 The usual problems of selective search appear in complicated local games: missing)A124 452 :M-.04(crucial moves, wrong evaluations.)A113 468 :M.947 .095(\245 Local games may be overlooked completely, such as territories with unstable)J124 482 :M.035(boundaries.)A85 511 :Mf0_14 sf3.15 .315(Future Work)J112 529 :Mf3_12 sf.213 .021(We believe that sums of games provide a useful general framework for Computer)J85 541 :M-.051(Go. Many details must be worked out to make it work.)A113 557 :M.795 .08(\245 More specialized theories, and better heuristics for local games: the better the)J124 571 :M.438 .044(quality of local games, the better the overall quality of play. Examples are eye)J124 585 :M-.082(detection, Life and Death, or proving the safety of territories.)A113 601 :M-.107(\245 More Go knowledge expressed in terms of combinatorial game theory)A113 617 :M-.123(\245 Algorithms for dependent games)A113 633 :M-.104(\245 Investigate algorithms for the evaluation of sum games: estimate size of errors and)A124 647 :M.103 .01(computational complexity of different algorithms. Define a class of random go-)J124 661 :M-.107(like mathematical games and test the algorithms on sums of such games. Develop)A124 675 :M.679 .068(an approximation scheme to calculate progressively better bounds on a game,)J124 689 :M-.085(maybe by computing partial sums.)A113 705 :M-.127(\245 Adaptation for parallel computers.)A113 721 :M.332 .033(\245 A long term goal: identify areas where computer is superior to humans, such as)J124 735 :M-.108(chaotic tactical fights, or difficult endgames with many similar summands.)Aendp%%Page: 18 18%%BeginPageSetupinitializepage(mm; page: 18 of 19)setjob%%EndPageSetup-29 -30 :TgS 29 30 538 781 rC85 82 :Mf0_14 sf.666(Conclusions)A112 100 :Mf3_12 sf.069 .007(Go is a complex game. The board size, the number of possible moves and average)J85 112 :M1.972 .197(length of a game are greater than in chess or most other games. Still, Go is not)J85 124 :M-.124(completely beyond human comprehension. The game exhibits a lot of logical, geometrical)A85 136 :M.79 .079(and combinatorial structure which human players recognize and exploit very well. In)J85 148 :M-.008(contrast, today's Go programs handle only the most basic concepts of Go. Our plan for a)A85 160 :M.818 .082(Go Program is to model the highly structured parts of the game to narrow the gap to)J85 172 :M2.661 .266(humans with their knowledge. Use the detected structure to formulate relevant)J85 184 :M.034 .003(subproblems. On top of that, use lots of search to outcalculate the humans in the chaotic)J85 196 :M-.056(parts of the game.)A112 210 :M-.079(To make progress, we feel it is necessary both to develop more Go-specific theories)A85 222 :M-.103(and to apply relevant other theories such as combinatorial game theory to Go.)A85 251 :Mf0_16 sf-.178(References)A85 274 :Mf3_10 sf.211 .021([Allis 88])J181 274 :M-.057(A Knowledge-based Approach of Connect-Four. The game is solved: White)A181 285 :M.49 .049(wins. Allis, L.V., M.Sc. thesis, Free University, Amsterdam 1988.)J85 304 :M.319 .032([Allis et al. 91])J181 304 :M.264 .026(Which games will survive? Allis, L.V., van den Herik, H.J., Herschberg, I.S.)J181 315 :M-.051(In: [Levy/Beal 91].)A85 334 :M.211 .021([Allis 92])J181 334 :M.065 .007(To appear in: Heuristic Programming in Artificial Intelligence 4.)J85 353 :M-.115([Benson 80])A181 353 :M.068 .007(A mathematical analysis of Go. B)Jf3_9 sf.025(ENSON)Af3_10 sf.054 .005(, D.B. In: Proc. of the 2nd Seminar on)J181 364 :M.033 .003(Scientific Go-Theory. H)Jf3_9 sf(EINE)Sf3_10 sf.024 .002(, K. \(ed.\) Institut f\237r Strahlenchemie, M\237hlheim a.)J181 375 :M.281 .028(d. Ruhr \(1979\), pp.55-64.)J85 394 :M-.156([Berlekamp 91])A181 394 :M-.064(Introductory Overview of Mathematical Go Endgames. B)Af3_9 sf-.088(ERLEKAMP)Af3_10 sf-.056(, E. In:)A181 405 :M.33 .033(Proc. of Symposia in Applied Mathematics, Vol. 43, Combinatorial Games, pp.)J181 416 :M.029(73-100.)A85 435 :M-.156([Berlekamp 92])A181 435 :M.031 .003(Mathematical Go: Thermographs find the biggest move asymptotically.)J181 446 :M(B)Sf3_9 sf-.025(ERLEKAMP)Af3_10 sf-.018(, E. Unpublished manuscript, 1992.)A85 465 :M-.065([Berlekamp/Conway/Guy 82] )A225 465 :M.131 .013(Winning Ways. B)Jf3_9 sf.039(ERLEKAMP)Af3_10 sf.06 .006(, E., C)Jf3_9 sf.044(ONWAY)Af3_10 sf.073 .007(, J.H., G)Jf3_9 sf.042(UY)Af3_10 sf.102 .01(, R.K.)J181 476 :M-.046(Academic Press, London 1982.)A85 495 :M-.036([Boon 90] )A181 495 :M.197 .02(A Pattern Matcher for Goliath. B)Jf3_9 sf.08(OON)Af3_10 sf.197 .02(, M., Computer Go 13, p.12-23.)J85 514 :M.178 .018([Chen et al. 90])J181 514 :M.146 .015(The Evolution of Go Explorer. C)Jf3_9 sf.055(HEN)Af3_10 sf.09 .009(, K.; K)Jf3_9 sf.047(IERULF)Af3_10 sf.096 .01(, A.; M)Jf3_9 sf.052(\206LLER)Af3_10 sf.122 .012(, M.;)J181 525 :M(N)Sf3_9 sf(IEVERGELT)Sf3_10 sf-.002(, J.  In: Chess - Drosophila of AI? M)Af3_9 sf(ARSLAND)Sf3_10 sf(, T. A.;)S181 536 :M(S)Sf3_9 sf.008(CHAEFFER)Af3_10 sf.023 .002(, J. \(Eds.\) Springer Verlag, 1990.)J85 555 :M-.048([Conway 76])A181 555 :M-.048(On Numbers and Games. C)Af3_9 sf-.069(ONWAY)Af3_10 sf-.045(, J., Academic Press, London/New York)A181 566 :M.125(1976.)A85 585 :M-.053([De Groot 65])A181 585 :M.177 .018(Thought and choice in chess. D)Jf3_9 sf.062(E)Af3_10 sf.091 .009( G)Jf3_9 sf.069(ROOT)Af3_10 sf.156 .016(, A. D.,  Mouton, The Hague, 1965.)J85 604 :M-.077([Fierz 92])A181 604 :M.091 .009(Go Endgames. F)Jf3_9 sf.023(IERZ)Af3_10 sf.085 .008(, W., Semesterarbeit, ETH Z\237rich 1992.)J85 623 :M-.136([Gasser 91])A181 623 :M.052 .005(Applying Retrograde Analysis to Nine Men's Morris. Gasser, R. In: [Levy/Beal)J181 634 :M.057(91].)A85 653 :M-.136([Gasser 92])A181 653 :M.242 .024(Gasser, R., personal communication.)J85 672 :M-.019([High 92])A181 672 :M.084 .008(Mathematical Go. H)Jf3_9 sf.021(IGH)Af3_10 sf.056 .006(, R.G. In: The Go Player's Almanac, B)Jf3_9 sf.022(OZULICH)Af3_10 sf.042 .004(, R.)J181 683 :M.38 .038(\(Ed.\), Ishi Press, Tokio 1992, p.218-224.)J85 702 :M-.093([Kierulf 90])A181 702 :M-.041(Smart Game Board: a Workbench for Game-Playing Programs, with Go and)A181 713 :M.275 .028(Othello as Case Studies. K)Jf3_9 sf.089(IERULF)Af3_10 sf.268 .027(, A. Ph.D. Thesis, ETH Z\237rich, 1990.)J85 732 :M-.117([Kraszek 88] )A181 732 :M-.008(Heuristics in the Life and Death Algorithm of a Go-playing Program. K)Af3_9 sf-.011(RASZEK)Af3_10 sf(,)S181 743 :M.622 .062(J., In: Computer Go 9, p.13.)J85 762 :M-.143([Lenz 82])A181 762 :M.284 .028(Die Semeai-Formel. Lenz, K.F. Deutsche Go-Zeitung 57, No.4, 1982.)Jendp%%Page: 19 19%%BeginPageSetupinitializepage(mm; page: 19 of 19)setjob%%EndPageSetup-29 -30 :TgS 29 30 538 781 rC85 79 :Mf3_10 sf-.139([Levy/Beal 91])A181 79 :M.115 .012(Heuristic Programming in Artificial Intelligence 2. Levy, D.N.L., and Beal,)J181 90 :M.19 .019(D.F.\(eds.\), Ellis Horwood 1991.)J85 109 :M-.015([Lichtenstein/Sipser 78])A190 109 :M.051 .005(GO is Polynomial-Space Hard. L)Jf3_9 sf.014(ICHTENSTEIN)Af3_10 sf.025 .003(, D.; S)Jf3_9 sf.013(IPSER)Af3_10 sf.02 .002(, M. )Jf4_10 sf.074 .007(Journal ACM)J181 120 :Mf0_10 sf.123(27)Af3_10 sf.412 .041(, 2 \(April 1980\), 393-401. \(Also: IEEE Symp. on Foundations of Computer)J181 131 :M.023 .002(Science, \(1978\), 48-54\).)J85 151 :M-.015([Miller 76])A181 151 :M.195 .019(The End Game of Go. M)Jf3_9 sf.071(ILLER)Af3_10 sf.077 .008(, J. )Jf11_10 sf.143 .014(In: )Jf3_10 sf.293 .029(Proc. Northwest 76 ACM/CIPS Pacific)J181 162 :M.29 .029(Regional Symposium \(Seattle Pacific College, Seattle, Washington, June 24-25,)J181 173 :M.034(1976\).)A85 192 :M-.037([Morris 81])A181 192 :M.562 .056(Playing Disjunctive Sums is Polynomial Space Complete. Morris, F.L., Int.)J181 203 :M.369 .037(Journal Game Theory, Vol. 10, No. 3-4, p.195-205, 1981.)J85 222 :M-.037([M\237ller 89])A181 222 :M-.002(Eine Theoretische Basis zur Programmierung von Go. M)Af3_9 sf(\206LLER)Sf3_10 sf(, M. Diploma)S181 233 :M.221 .022(thesis, Techn. University of Graz, Austria, April 1989.)J85 252 :M-.079([M\237ller/Gasser 92])A181 252 :M.105 .01(Experiments in Computer Go Endgames. M)Jf3_9 sf.03(\206LLER)Af3_10 sf.058 .006(, M., and G)Jf3_9 sf.029(ASSER)Af3_10 sf.056 .006(, R. To)J181 263 :M.042 .004(appear in: Heuristic Programming in Artificial Intelligence 4.)J85 282 :M-.094([Neumann 28])A181 282 :M.169 .017(Zur Theorie der Gesellschaftsspiele. Neumann, J. von, Math. Ann. 100, pp. 295-)J181 293 :M.167(320.)A85 312 :M-.082([Neumann/Morgenstern 44])A225 312 :M-.022(Theory of Games and Economic Behaviour. Neumann, J. von, and)A181 323 :M.189 .019(Morgenstern, O., Princeton University Press, Princeton, 2nd ed. 1947.)J85 342 :M.339 .034([Popma/Allis 92])J181 342 :M.201 .02(Life and Death refined. Popma, R.; Allis, L.V. In: Heuristic Programming in)J181 353 :M.094 .009(Artificial Intelligence 3, van den Herik, j., and Allis, V. \(Eds.\), Ellis Horwood)J181 364 :M.669 .067(1992, p.157-164.)J85 383 :M.776 .078([Robson 83]\000\000\000)J181 383 :M.137 .014(The Complexity of Go. R)Jf3_9 sf.052(OBSON)Af3_10 sf.144 .014(, J.M. Proc. IFIP \(International Federation of)J181 394 :M.089 .009(Information Processing\), \(1983\), 13-417.)J85 413 :M-.069([Schaeffer et al. 91])A181 413 :M.227 .023(Reviving the Game of Checkers. Schaeffer, J., Culberson, J., Treloar, N.,)J181 424 :M.323 .032(Knight, B., Lu, P., Szafron, D. In: [Levy/Beal 91])J85 443 :M-.189([Schaeffer 92])A181 443 :M-.006(Man Versus Machine: The Silicon Graphics World Checkers Championship.)A181 454 :M.072 .007(Schaeffer, J., unpublished manuscript available by )Jf4_10 sf(ftp)Sf3_10 sf(.)S85 473 :M-.014([Shannon 50])A181 473 :M.037 .004(Programming a computer for playing chess. S)Jf3_9 sf.014(HANNON)Af3_10 sf.02 .002(, C.E. )Jf4_10 sf.01(Philosophical)A181 484 :M.107(Magazine)Af3_10 sf.049 .005( )Jf0_10 sf.109(41)Af3_10 sf.383 .038(, 314 \(1950\), 256-275.)J85 503 :M.193 .019([Stiller 89])J181 503 :M.307 .031(Parallel Analyses of Certain Endgames. Stiller, L. ICCA Journal 12, no. 2, p.)J181 514 :M.034(55-64.)A85 533 :M.031 .003([Thompson 82])J181 533 :M.175 .017(Computer Chess Strength, T)Jf3_9 sf.054(HOMPSON)Af3_10 sf.128 .013(, K. In: Advances in Computer Chess 3.)J181 544 :M(C)Sf3_9 sf.035(LARKE)Af3_10 sf.106 .011(, M.R.B. \(Ed.\), Pergamon Press, Oxford, 1982.)J85 563 :M.031 .003([Thompson 86])J181 563 :M.137 .014(Retrograde Analysis of Certain Endgames. Thompson, K. ICCA Journal 9, no.)J181 574 :M.658 .066(3, p. 131-139.)J85 593 :M.148 .015([Turing et al. 53])J181 593 :M.404 .04(Digital Computers applied to Games. Turing, A.M., Strachey, C., Bates, M.A.,)J181 604 :M.061 .006(Bowden, B.V. In: Faster than thought, Bowden, B.V. \(Ed.\), Pitman, London)J181 615 :M.603 .06(1953, p. 286-297.)J85 634 :M.396 .04([Wilcox 79]\000\000\000)J181 634 :M.01 .001(Computer Go - The Reitman-Wilcox Program. W)Jf3_9 sf(ILCOX)Sf3_10 sf(, B. )Sf4_10 sf(American Go)S181 645 :M.405 .04(Journal )Jf0_10 sf.108(14)Af3_10 sf.344 .034(, 5/6 \(1979\), 23-41.)J85 664 :M-.087([Wolf 91])A181 664 :M.286 .029(Investigating Tsumego Problems with RisiKo. Wolf, T., In: [Levy/Beal 91].)J85 683 :M-.158([Wolfe 91a])A181 683 :M.285 .028(Mathematics of Go: Chilling Corridors. Wolfe, D., Dissertation, Univ. of)J181 694 :M-.025(California, Berkeley 1991.)A85 713 :M-.182([Wolfe91b])A181 713 :M.054 .005(Games program available via anonymous ftp from milton.u.washington.edu)J181 724 :M.573 .057(\(128.95.136.1\), file theory.sh.Z.)Jendp%%Trailerend%%EOF