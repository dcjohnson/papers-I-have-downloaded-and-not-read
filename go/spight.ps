%!PS-Adobe-2.0
%%Creator: dvips(k) 5.86 Copyright 1999 Radical Eye Software
%%Title: spight.dvi
%%Pages: 18
%%PageOrder: Ascend
%%BoundingBox: 0 0 612 792
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -Pcup spight
%DVIPSParameters: dpi=1270, compressed
%DVIPSSource:  TeX output 2002.05.02:2302
%%BeginProcSet: texc.pro
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/id 0 N/rw 0 N/rc 0 N/gp 0 N/cp 0 N/G 0 N/CharBuilder{save 3
1 roll S A/base get 2 index get S/BitMaps get S get/Cd X pop/ctr 0 N Cdx
0 Cx Cy Ch sub Cx Cw add Cy setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx
sub Cy .1 sub]/id Ci N/rw Cw 7 add 8 idiv string N/rc 0 N/gp 0 N/cp 0 N{
rc 0 ne{rc 1 sub/rc X rw}{G}ifelse}imagemask restore}B/G{{id gp get/gp
gp 1 add N A 18 mod S 18 idiv pl S get exec}loop}B/adv{cp add/cp X}B
/chg{rw cp id gp 4 index getinterval putinterval A gp add/gp X adv}B/nd{
/cp 0 N rw exit}B/lsh{rw cp 2 copy get A 0 eq{pop 1}{A 255 eq{pop 254}{
A A add 255 and S 1 and or}ifelse}ifelse put 1 adv}B/rsh{rw cp 2 copy
get A 0 eq{pop 128}{A 255 eq{pop 127}{A 2 idiv S 128 and or}ifelse}
ifelse put 1 adv}B/clr{rw cp 2 index string putinterval adv}B/set{rw cp
fillstr 0 4 index getinterval putinterval adv}B/fillstr 18 string 0 1 17
{2 copy 255 put pop}for N/pl[{adv 1 chg}{adv 1 chg nd}{1 add chg}{1 add
chg nd}{adv lsh}{adv lsh nd}{adv rsh}{adv rsh nd}{1 add adv}{/rc X nd}{
1 add set}{1 add clr}{adv 2 chg}{adv 2 chg nd}{pop nd}]A{bind pop}
forall N/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: special.pro
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/copypage{}N/p 3 def @MacSetUp}N/doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N/endTexFig{end psf$SavedState restore}N/@beginspecial{SDict
begin/SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count/ocount X/dcount countdictstack N}N/@setspecial{
CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if/showpage{}N/erasepage{}N/copypage{}N newpath}N
/@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{end}
repeat grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
TeXDict begin 40258437 52099154 1000 1270 1270 (spight.dvi)
@start
%DVIPSBitmapFont: Fa cmcsc10 9 29
/Fa 29 117 df<EA07F0EA1FF8487E487E7FB51280A214C0A414E07EA27EEA1FFDEA07F1
EA0001A51303A214C0A313071480A2130F14005BA2133EA25B137813F8485AA2485A485A
485A48C7FC123E123C121813306F9033>44 D<EA07F0487E487E487E487EB51280A76C13
006C5A6C5A6C5A6C5A11116F9033>46 D<923807FF80037F13F80203B6FC020F15C09126
1FFE017F913A7FF0003FF8DAFFC0EB0FFC010390C7EA03FF49486E7F49486E7F49486F7E
4A153F49486F7E017F834A150F01FF8348496F7EA2488491C97E481980A348487013C0A3
001F19E0A3003F19F0A34982A2007F19F8A800FF19FCB3A9007F19F8A76C6C4C13F0A500
1F19E0A46C6C4C13C0A36C1980A26C6D4B1300A26C606E150F6C606E151F017F5F6D6C4B
5A6E157F011F5F6D6C4B5A6D6C4A5B6D6C6C010790C7FC6D6D495A9026007FF0EB3FF891
3A3FFE01FFF0020FB612C0020392C8FCDA007F13F803071380466E78E957>48
D<ED7FFC0207B512E0023F14FC91B7FC010316C049D9007F13F0D91FF801077FD93FC001
017F49486D6CB4FC01FEC86C7F48486F7F48486F7F498148486F7F484883496F7F121F90
CA7F5A003E717E127EEA7FF001FC7013807FB5FC1AC08084A66C90C9FCA26C5A6C485ED8
07F01880CBFCA2601A00A34E5AA24D5B615F614D5BA24D5B4D5B96C7FC4D5A4D5A604D5A
4C5B4C5B604C90C8FC4C5A4C5AEE3FF04C5A4C5A4B5B4B90C9FC16FC4B5A4B5A4B5A4B5A
4B5A4BCAFC4A5ADA03F8ED07C04A5A4A5A4A48ED0F804A5A4AC9FC14FE495A5C4948161F
49481700495A49CA5A133E4917FF90BAFC5A48605A5A5A5A5ABAFC61A4426A76E957>50
D<183E183F6060A25F5FA25F5FA25F5FA25F94B5FCA25E5E17EFEE07CF160F178FEE1F0F
163F163E167C16FC16F8ED01F0150316E0ED07C0150F1680ED1F005D153E5D15FC5D4A5A
14035D4A5A140F5D4AC7FC5C143E5C14FC5C495A13035C495A130F5C49C8FC5B133E5B13
FC5B485A12035B485A120F5B48C9FC5A123E5A12FCBCFCA5CA001F90C7FCB34D7F4D7F04
03B512F8031FB8FCA5486C79EB57>52 D<017017E0017C1607D97F80153F02F8EC03FFDA
FFE0017F5B92B75A96C7FC6060606018C0604DC8FC17F817E01780017C02FCC9FC020190
CAFC91CCFCB3A2ED07FF037F13F00203B512FC020F14FF91263FFC0313C091267FC00013
F002FEC7EA3FF8D97FF86E7E4A6E7E4A6E7E02806E7F91C86C7F85017E81017C83017870
7EA290CA7F183F85A285A2841A80A51AC0A4EA07E0EA1FF8487E487EA2B5FCA41A80A249
5EA24918006C5A13E0007ECA5B187F003E60123F6C4D5A6D5F6C6C5D616C6C4B5B6C6C4B
5B6D4B90C7FC6C6C4B5A6CB44B5A6D6C4A5AD93FE049485AD91FFC01075B902707FF803F
13806D90B6C8FC010015FC023F14E0020F91C9FC020013F0426E76E957>I<933807FF80
047F13F80303B512FE030F6E7E92263FFE007FDBFFF0EB1FE04A0180EB07F0020790C7EA
01F8DA0FFC6E7E4A5ADA3FE0814A48140702FF151F49494A7E4990C8FC49485D130F495A
5C133F495A725A495A725A48EF07F04A92C8FC5AA2485BA25AA291CCFC5AA35A16109238
07FFF0031F13FE4848017F6D7E4AB612E0913A03FC007FF0DA07E0EB1FFC4A48EB07FE4A
C76C7E00FF013E6E7F023C6E7F027C824A6F7E4A6F7E13FF4A6F7E855C727EA24A1780A2
1AC091C97E1AE0A54918F0A2127FA7123FA27FA37E1AE0A37E1AC06E5D7E1A807E1A006C
6D5D617E6E4B5A017F5F6D6C4B5A80011F4C5A6D6C4A5B6D6C4A5B6D6C4A90C7FC6D01C0
495A6D01F0EB3FFC913A7FFE03FFF0021FB65A6E158002034AC8FCDA007F13F8030F1380
446E77E957>I<EA07C0120F7F7FEBFFE091B912FEA45A1AFC1AF81AF0A21AE01AC04819
80A201C0CAEA3F0090CB127E61003E170161007E4D5A007C4D5A180F614E5A4EC7FC6048
177E604D5ACAFC4D5A4D5A170F604D5A4DC8FC5F177E5F16015F4C5A16075F160F5F161F
4C5AA2167F94C9FC5EA24B5AA215035E1507A3150F5E151FA3153FA24B5AA315FFA45CA3
5E5CA45CA75CAD6E5BA26E5B6E90CAFCEC007C476F75EA57>I<ED0FFF92B512F0020714
FC021F14FF91263FFC0313C0913AFFE0007FE0490180EB1FF04990C7EA0FFCD90FFC6E7E
011F6F7E49488049486E7F4A8201FF707E485B48717E484982A248717E91C9FC4884A248
170F855B127F1A80A300FF19C0A384A21AE0A81AF0A2007F5FA4123F6D5EA27EA26C5FA2
6C7F607E6C6D92B5FC6C17F76E14016D6CEC03E7013F16C76D6CEC07876D6C020F14E06D
6CEC3F076D6C6C137E01009038E003FC6EB512F8021F14E00207028014C0020049485AED
008093C7FC1A80A44E1300A261A34E5AA201FE5F2603FF80157F486D5E18FF486D5E4D5B
A24D5B96C7FC5F4A4A5A606C494A5A49C8485A01F04B5A00034C5AD801FC02035B6D020F
90C8FC2600FFC0EB3FFC903A7FFC01FFF8011FB612E06D5D01034AC9FC010014F8020F13
80446E77E957>57 D<F001E04E7E4E7EA34E7EA34E7EA24E7EA34E7FA395B57EA34D80A2
4D8018EF18E705078018C718C3050F801881A2051F8018004D80173E85057E81057C7FA2
05FC814D7FA24C4881850403825F850407824D7FA2040F824D7F041F8294C7FC854C8216
3E86047E83047C81A204FC834C810301845E860303845E860307844C81A2030F844C814B
B97EA34B84A2033ECA7E037E85037C83A24B85870201865D870203864B83A20207864B83
020F865D87021F8692CBFC874A86023E85147E8A02FE85496C875B496D86496D60013F01
F095B57E0003B500FC050714FEB700E00307B812C0A5727279F181>65
D<95263FFF8015380507B500F81578057F02FF15F80403B712C0041F04F01301047F9027
FC007FFC13034BB50080EB07FF030701FCC8EB80074B01E092383FC00F033F018092380F
E01F4B48C9EA07F84A4848933801FC3F4A01F0933800FE7F4A49177F4A0180EF3FFF4A90
CB7E4A48844A48844A48844949845B4949844949197F5B4B193F4990CDFC491B1F5C01FF
1B0F485B1D07485BA2481C035C5A1D015C5AA3481C005CA35A1E00A25CA2B5FCB07EA280
A37E1EF8A2807EA37E6E1A011EF07E807E1D036C6D1BE0A26C6D1A07017F1CC06E1A0F7F
6D6D1A806F191F6DF33F006D6D193E6D6D197E6D636D7F6E6C4E5A6E6C4E5A6E6C4E5A6E
01C04D5A6E6D4D5A6E6D4DC7FC6E01FC17FE6E6C6C4C5A6F6C6CED07F8030F01E0ED1FF0
6F01FCED7FC00301D9FF80903803FF806F6C01FCD97FFEC8FC041F90B612F8040316E0DC
007F1580050702FCC9FCDD003F1380657475EF7C>67 D<B912E0A5D8001F02F8CCFC0103
14806D91CDFC6D5BB3B3B3A5F407C0A5F40F80A71C1FA31D0064A364A264A263A263515A
1B0F1B1F1B3F1B7F1BFF1A0349180F496D167F011F6E020FB5FCBD5AA55A6C78EB6C>76
D<F0FFFE051FEBFFF04CB7FC040716C0043FD9C00713F8DCFFFCC7EA7FFE030301E09138
0FFF80030F0180020313E04B48C97FDB7FF8EE3FFC4B48707E020349706C7E4A01800403
7F4A90CA6C7F4A48717F4A48727E4A48727E4A48727E49874949727F4949727F49884B84
4990CC6C7F49884A85017F884948747EA24849747EA2481E804A86481EC0A248497413E0
A3481EF0A24A86481EF8A4481EFC4A86A5B51DFEAF6C6D5013FCA66C1EF86E62A36C1EF0
A26E626C1EE0A26C6D5013C0A26C1E806E626C1E00A26C6D505AA26D6C4F5BA26D6D4E5B
6D6D4E5BA26D6D4E5B6D646D6D4E5B6D6D4E90C7FC6D6D4E5A6E6C4E5A6E6C4D5B6E6D4C
5B6E6D4C5B6E6D4C5B6E6D4C5B020001FCDC7FFEC8FC6F6C4C5A6F6C6C02035B030F01E0
020F13E0030301FC027F138003009028FFC007FFFEC9FC043F90B612F8040F16E0040193
CAFCDC001F14F0050049CBFC6F7475EF86>79 D<DB3FFE15380203B500F01478021F02FE
14F8027F6E7E91B7EAE0010103D9F003EBF00349903980001FFCD91FFCC73807FE07D93F
F0913801FF0F49489138007F8F4948ED1FDF4849ED0FFF4890C97E4982484882000F8349
177F121F49173F003F181FA249170F127F1907A212FF1903A36D1701A47F19007F7F127F
7F6E94C7FC806C7F14F86C13FE6E7E6C14F8EDFF806C15FC6CEDFFC017FC6CEEFFC06C17
F86D16FF6D836D17E06D83010317FC6D836D6C82021F83020783DA007F821507DB007F81
040381EE003F050380DD007F7F181F180706017F8473138085A2857313C0127800F884A2
85A4857EA46C1A80A37E4F13007FA26D606D1707626D170F6D606D4D5A6D173F6D6002C0
4C5AD9DFE04C5AD98FF8030390C7FCD987FE4B5A902601FFC0EC1FFC486C01F8EC7FF891
3B3FFFC003FFE048010F90B65A48010393C8FC020015FC48020F14E048DA007F90C9FC4A
7475EF61>83 D<B800FE031FB7FCA5D8001F02F0CA6C14C0010302800507EBFC006D91CB
000113F06D49725B775A775AA277C7FCB3B3B3AC027F621D3E81A36E62A2826E1AFC656E
190170606E190370606E19076E6D4D5A1C1F6E6D606F6C4DC8FC033F606F6C17FE704C5A
03076DED07F86F01E04B5A6F6D4B5A6F01FCED7FC0DC3FFE4A485A93261FFFC0D90FFEC9
FC040701FCEBFFFC040190B612F0706C15C0050F92CAFC050114F8DD001F1380707078EB
81>85 D<B800E00103B86C023FB612F0A5C66C02E0C800010380C80001ECFE00010F91CA
003F01FCCA003F13F06D4971497113C04B714905075B6D7B90C7FCA15A6D73735A77606F
837F77606F836E565A89826E565A517F826E565A5180826E56C8FC518070059F606E203E
091F8070050F187E6E207C093F8070DC3E0718FC6E68097E8070DC7C0317016E6809FC80
704C6C17036F67080181714B6C17076F67080381714B6D160F6F67080782714B6D161F6F
9CC9FC080F82714B6D5E6F1E3E081F827192C76C167E6F1E7C508271023E6E16FC6F6608
7E8271027C6E15016F6608FC82714A6E150370650701830680496E1507706507038306C0
496F140F70650707188006E0496F141F709ACAFC070F18C006F0496F5C701C3E071F18E0
06F890C96C147E701C7C4F18F0DEFC3E7014FC7064077E18F8DEFE7C7013F9706407FC18
FD72487013FF7163A24F827163A24F837163A24F837198CBFCA24F837162A296CB120F71
62A24E1807050162A24E18030500620678725AA4707BEBAF>87 D<177817FC4C7EA34C7E
A24C7FA34C7FA34C7FA24C7F163EA2047E7FEE7C7FA204FC7FEEF83F030180EEF01FA203
03804C7EA2DB07C08083030F814C7EA2031F814C7E4B81033E7FA2037E81037C147FA203
FC814B143F0201824B141FA20203824B80A20207834B80020F8392B8FCA24A83A3023EC9
7FA2027E83027C167FA202FC834A163F0101844A161FA20103844A82130787010F838713
1F496C84137F48486C4C7F000F01FE043F13FCB600C00207B612FCA556547BD361>97
D<B912E018FEF0FFC019F019FCC6912680000113FF013F90C8001F7F4A030713E0011F04
017F726C7E737EF10FFE737E737F737F8785747E871A3F871A1F87A2747EA31C8086A21C
C0A51CE0AD1CC0A41C80A2621C00A3505AA2505AA263505A1AFF634F5B4F5B614F90C7FC
4F5AF17FFCF1FFF0013F04035B6E031F5B90B56C49B5C8FCBA12FC19F019C04EC9FC18E0
535179D063>100 D<BB12F8A5C60280C7001F7F013F90C9FC6D48163F190F1907190319
01A21900861A7EA31A3EA4EF03E01A3F86A497C7FC1707A3170F171F173FEE01FF91B7FC
A59138FE0001EE003F171F170F1707A31703F201F0A3F203E0A394C8FCA21A07A21BC0A2
1A0FA31A1F1B801A3FA21A7F1AFFA20703130061191F496C167F90B56C020FB5FCBCFCA2
62A34C5179D058>I<932607FF80147093B500F814F0030702FF1301033FEDC00392B712
E002039139003FF807020F01F0903807FC0F4A0180903800FE1FDA7FFEC8EA7F3FDAFFF8
ED1FBF4949ED0FFF4901C0814949814990C97E4948824948177F495A4948173F1A1F485B
48190F5C5A4A17075AA24890CB1203A25A5B1A01127FA397C8FC5B12FFAD007F94B712F8
7FA4003FDD000FEBFC0007035B6D715B6C84A26C7FA27E807E807E6C7F80137F6D7E6D7E
6D6C5E6D7F6D13E06D6D5D6D01FC5D6EB4ED0FDF021F01C0EC3FCF6E01F8903801FF8702
03903AFF800FFE03020091B5EAFC01033FEDF000030703C0137003004AC9FC040713E055
5578D265>103 D<B700C090B712C0A5C602C0C8ECC000013F90C9003F90C7FC6D48705A
B3AB91B9FCA54AC9121FB3AF496C4C7E90B500C092B512C0B700C090B712C0A5525179D0
61>I<B712F0A5C66CEBE000011F1380A26D90C7FCB3B3B3AB497FA2017F13E0B712F0A5
24517AD030>I<B700C0021FB512F8A5C602C0C86C1480013F90C96CEBFC001BE06D4818
8098C7FCF10FFC624F5AF13FC04F5A4FC8FC4E5A4E5A4E5A4E5AF01FC0F07F804EC9FC4D
5A4D5A4D5A4D5A4D5AEF3F804DCAFCEE01FE4C5A16074C7E4C7E5E4C7F93B57E030380ED
07FBDB0FF17FDB1FE17FDB3FC07F92387F807F4B486C7EDAFFFC804B6D7F4B7F4B6D7F4B
814B6D7F92C77E4A6E7F85727E183F85727F84727F86727F84727F86737E193F737E8773
7FA2737F87496C844F13FE90B500C04BEBFF80B700C091B612FEA5575179D065>107
D<B712F8A5C602E0CAFC013F90CBFC7F5CB3B3A5F103E0A519071AC0A5190FA3191FA21A
80193F197FA219FF6060180F60496C92B5FC90B56C130FBB1200A5435179D051>I<B500
FE4EB512FE6E606F5FA3C66E4DEBFE00013F1BF86D6C6C4D6C5AA36E6C173EA26E6C177C
A36E6C17F8A26E6CEE01F0A36E6CEE03E0A26E6DED07C0A36E6DED0F80A26F6CED1F00A3
6F6C153EA26F6C5DA36F6C5DA26F6C4A5AA36F6C4A5AA26F6D495AA36F6D495AA2706C49
C7FCA3706C133EA2706C5BA3706C5BA2706C485AA3706C485AA270EB87C0A370EBCF80A2
71B4C8FCA3496C6E5AA2496C6E5A497E486D4F7E000F01FE6E48020313FEB600E00403B6
12FE715AA3715A675179D076>I<B500FE4BB612C0A2808181C66CDC001FEBFC00011F6D
030313E06F6F5B735B6F70C7FC816E6C163E143F6E7E82806E7F826E7F806E7F82157F6F
7E826F7F816F7F83816F7F836F7F167F707E8382707F84707F82707F8482717E84717E83
71138019C0837113E019F07113F883F07FFC19FE183FF01FFF1ABE7213FE8484A28484A2
197F193F191F497E190F496C1607497E486D1603000F01FE1601B600E01500A21A7E1A3E
A2525179D061>I<B97E18F818FF19C019F0C6912680000313FC013F90C86C7E6D489238
1FFF80060713C07213E0847213F01AF8F17FFCA21AFE193FA21AFFA91AFEA2F17FFCA21A
F819FF1AF04E13E04E13C04E1380061F1300F07FFE943807FFF891B85A19C04EC7FC18F0
4ACBFCB3AC497E90B512C0B712C0A5485179D058>112 D<DA1FFC147049B500C013F001
07ECF801011F14FE49ECFF039026FFF00713C748903980007FEF4890C7EA1FFFD807FC14
074914014848804848157F173F485A171F007F160F5B170712FFA21703A27FA217017FA2
7F6C6C92C7FC7F13FF6C7F14F06CEBFF8015F86CECFF806C15F816FF6C16C06C16F06C82
013F816D8101078101011680D9001F15C0020115E0DA001F14F01501DB001F13F8160382
9338007FFC173F171F18FE170F127800F81607A31703A27EA318FC7E17076C17F8A26DED
0FF07F6DED1FE06D153F01FC16C06DEDFF806D6C491300D97FF0EB07FE3BFE3FFF803FFC
D8FC0F90B55AD8F80315E001005D48011F49C7FC48010013F0375578D248>115
D<003FBCFCA5912680007F903880007F01FCC76C90C7120FD87FF06E480203138001C018
0049197F90C8173FA2007E1A1FA4007C1A0FA500FC1BC0481A07A6C994C7FCB3B3A84C7E
4C7F0303B512F0021FB712FEA552507BCF5D>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fb cmbx9 9 4
/Fb 4 57 df<EE07E0EE1FF0163F16FF1503150F153F4AB5FC141F0107B6FCB8FCA55C14
E0EBF800C8FCB3B3B3B3A6003FBA12C0A8426872E75E>49 D<923807FFF8037FEBFFE002
03B612FE021F6F7E4A16E091B812F8010317FE4949C6804901E0011F804990C76C14E0D9
3FFC140349488349486E8002FC834801FF806F8248808186488084A36F91B6FCA25DA262
7E5D6C4C5C6C5C5D013F90C7485CD91FFC5FEB03E090C9485C624D5C4D91C7FC4D5B4D5B
94B55A04035C047F14C092B7C8FC4A15FC18F06018FEF0FFC06E16F0DB000114FCDC003F
13FF050F807114E071807180718086727FA27214801BC0A21BE0841BF0EB7F803803FFF0
486D18F8487F487F487F4880A3B67EA41BF0A31BE04B5C7E92C815C0A26C494B14804A18
006C5B6C01E092B55A02804A5C6C6D4A5C6C01F04A5C6C01FC4A5C6CD9FF80013F5C6DD9
FC01B65A011F90B748C7FC010717F8010117E06D6C1680021F03FCC8FC020115E0DA000F
01F8C9FC4D6A78E75E>51 D<0170EF01C001FEEF0FE0D9FFC016FF02FE150FDAFFF80103
B5FC92B8FC6262A297C7FC61616161616196C8FC606018F018C095C9FC17FC17F094CAFC
02DF13F002C0CCFCAD923801FFF8033FEBFFC002C1B612F802C715FF02DF16C091B812F0
85DC007F13FE03E0010F7F03806D804AC700018002F8834A6E804A6F7F5C4A6F7F91C980
137E90CA80A21B8084A21BC0A41BE0A248B4FC000713C0487F487F487F5A80B5FCA2801B
C0A35C1B80606C5B1B005C6C495F4A5D91C95CD81FF8606C6C93B5FC6D4B5C6C6C4B5C6C
6D4A5C6C01E04A5C6C01F84A91C7FCD97FFE91B512FC90273FFFE0075C6D90B712E00107
5F6D94C8FC010016F8021F15C002074AC9FCDA003F13804B6A77E75E>53
D<923801FFFE033FEBFFF04AB7FC020716C0021F16F0027F16FC91B9FC01039026FE000F
804901E00100804990C8003F7FD91FFC030F7F4A150349486F7F49486F7FA201FF717E4A
163F5AA248858580A2487FA214FC808003C05D03F05E15FC03FF157F705D04E014FF6C03
F8495B16FE706C485B6CDCE0075B71485B6CDCFC3F5BDDFF7F90C7FC6D4C5A616D17F06D
17C0616D17E06D17F86D83010017FF6E836E838691B97E49840107844984013F01E78249
13C190B5C66C16804849011F16C04849130748496D16E04A13004849143F48040F15F04A
140348824A6E6C14F848171F91C91207180184B5834983858585A37313F0A37F6C1AE0A3
6E4C13C07E6E18806C6D4C1300616C6D5F6C6D4C5A6C01FEEEFFF86E4B5B6C02C002075B
6C6C01F8023F5B6D9026FF8007B55A6D91B7C7FC010717FC010117F06D6C16C0020F4BC8
FC020015F0030749C9FC4D6A78E75E>56 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fc cmti9 9 27
/Fc 27 122 df<EB03F0EB0FFCEB3FFE497E90B5FC15805AA25AA67E7E6D1300EB3F9FEB
001F5C143EA2147E147C14FCA25C1301495AA2495A5C130F495AA249C7FC137E5B120148
5A485A485A485A485A48C8FC12FE5A5A12601931749132>44 D<96260FFF80EC01C04EB5
00F81403061F02FF140795B76C130F050304E0131F051F701480057F49C66C6C133F94B5
00C0D907FE137F040349C7D801FF13FF040F01F86E6C4813004C01C0ED3F83047F90C9EA
1FC74C48EE0FEF030301F804075B4B01E017FF4B49824B49824B48CA5C4B48834B5A0203
5B4C725A4A5B4A5B4A90CC123F4A4862147F4A5A495B4B625B4949191F495B66495B5B92
CDFC49644A1A3F13FF5C489AC7FC5C5A1D3E484997C8FCA2485BA3485BA35A5CA35A91D1
FCA3B5FC5BA55BA41C1F527E9AC8FCA3641C7EA21CFE641B01007F631B03646D1907003F
505A641B1F6C6C4F5A99C9FC6C626E18FE6C4F5A6E4D5A6C626E170F6C6D4D5A6C6D4D5A
505A6D6C4DCAFC6DB4EE03FC6D6D4B5A6D6DED1FF06D01F0ED7FE06D01FC913801FF8001
00D9FF80010F90CBFC6E01F8EBFFFC6E90B612F0020F16C0020393CCFCDA007F14FC030F
14E0030001FCCDFC6A7268EE74>67 D<96260FFF80EC01C04EB500F81403061F02FF1407
95B76C130F050304E0131F051F701480057F49C66C6C133F94B500C0D907FE137F040349
C7D801FF13FF040F01F86E6C4813004C01C0ED3F83047F90C9EA1FC74C48EE0FEF030301
F804075B4B01E017FF4B49824B49824B48CA5C4B48834B5A02035B4C725A4A5B4A5B4A90
CC123F4A4862147F4A5A495B4B625B4949191F495B66495B5B92CDFC49644A1A3F13FF5C
489AC7FC5C5A1D3E484997C8FCA2485BA3485BA35A5CA35A91D1FCA3B5FC5BA549053FB7
12E08AA2616685DF000102E0C7FCE0003F13807590C8FC63A264A21B7F64127FA26D19FF
64123FA26D606C63A26C7F626C6D61A26C6D5FA26C6D4D5B6C6D5F6E5F6D6C5F6D6C94B5
5A6D01C04B5A6D6DED07FC6D01F8ED1FF86D01FE92267FF07FC9FC0100D9FFC0903903FF
C03F6E01FC013F13806E90B648487E020F04F8130E020304E01306DA007F92CCFC030F14
F0030049CDFC6A7268EE7E>71 D<033FB500F8040FB612FEA24B6E5EA2846F7315FCDB00
03DE003FEBFE00706D050713F07813C04C6E705B9DC7FC785A735FDC07F71801A205E76D
5F17E3040F6E160305E16117C185DC1FC01807735FEF807FA2043F6E160F063F60170085
4C6D171F745E047E7FA204FE6F153F7295C8FC4C818403016274157E4C7FA203037015FE
725F4C81197F03071901745D4C143F86030F6F1503664C8285031F1907755C4C8087033F
6F150F6693C880854B71131F735E157E8703FE047F143F9BC9FC4B831A3F0201725B7414
7E5D1C8002037114FE765A4B82A2020719E1745C5D1CF1020F7113F3F4FBF04B82A2021F
19FF755B5D87143F6592CB7EA25C755B147E02FE84497E4998CAFC496D83011F7F90B500
F883007FDAFFE05FB77E1B00A25E1C7C7F6C76EB79>78 D<96380FFF804EB512F8061F14
FF95B712C0050316F0050FD9F00313FC053F90C76C7EDDFFF891380FFF80040301E00203
7F4C01806E7FDC1FFEC97FDC3FF8707EDCFFF0707E4B49707E4B0180160F4B90CA6C7EDB
1FFE19804B48834B4819C04B487113E04A5B4A49834A4919F05C93CC13F84A48197F4A5A
027F1BFC4A5A5D491B3F49491AFEA2495B5B5D5B4990CDFCA2495AA249481A7FA25A5C5A
5CA2481CFFA2485BA21EFC484961A448494F13F8A364481DF091CDFCA25213E0A35213C0
5B00FF511380A21E0064651CFF6563007F646365515BA2515B515B6C7E5190C7FC515A64
6C1AFF6E4D5B505B6C4F5B6E616C4F5B5090C8FC6C6D4D5A6E4D5A6C4F5A6C6D04035B6E
4C13C0017F4D5B6D6C043F90C9FC6D6C4C5A6D01C0913801FFF86D6D02075B6D01F8021F
13C06D01FE91B5CAFC6D9026FFC00F13FC023F90B612F0020F16C0020393CBFC020015F8
031F1480030101F0CCFC677269EE7C>I<033FB912F8F4FF804B19F01DFC1DFF6F1AC0DB
000701FCC880040149030F7F4E03037F4C05007F777E4E707E897713805E4E18C089A24C
1AE060A35E95CAFCA2655E5FA3047F4E13C05FA21F8004FF604D1900A2535A5D4D4D5AA2
525B4B624D4C5B525B525B4B4E90C7FC4D4C5A525A51485A4B4D13E04D031F5B097F90C8
FC97380FFFFE4B90B812F81CE099C9FC4B17F81B804CCEFCA2157FA25EA215FFA25EA25C
A25EA25CA25EA25CA25EA25CA25EA25CA293CFFCA25CA25DA2147FA25DA214FFA25D5B01
0F13FE007FB712C0B87EA35FA26B6C76EB6E>I<DE1FFEEC03804DB500E01307050F02F8
130F053F02FE131F94B7FC04039338803F004CD9F0076D5A041F90C76D5ADC3FFCEC3FF1
DC7FF091380FFBFEDCFFC0EC07FF4B49804B90C87E4B486F5B4B5A4B48167F4B5A4C705A
157F4B5A1B1F4A495FA24A90CAFCA2644A5AA3020F61A464141FA36F95C7FC98C8FC8280
82828216FC6E13FF17F06E14FEEFFFE06E15FEF0FFC06E16F86F15FE6F6F7E6F826F8203
03826F82DB003F81040781EE007F050F801700061F801801727E737F858585A285A385A2
137C13FCA31201635BA200036098C8FCA300074E5AA2626D170F000F61191F4F5A6D6000
1F187F6D4D5A626E4B90C9FC484D5A6E15076EED1FFCD9EFF84B5A007F6DEDFFE0D9C7FF
4A5B018301E0010F5B010101FE017F90CAFC26FE007FB612FC486D5D020F15E048010315
8048D9007F01FCCBFC48020713C0597274EE5B>83 D<010FBD12FC5BA35BA203F8C76C48
C7121F4901804B020113F802FCC800FFED007F02F01A3F49484C151F4A1A0F4A5C4890C8
F007F0495F485A5F5B0007605B4D18E0485A615B001F4C170FA2494D16C0123F90C95AA2
4895C9FC007E1C1F4D188012FE485FA2177FCA95C7FC60A217FFA260A25EA260A25EA260
A25EA260A25EA260A25EA295CCFCA25EA25FA2167FA25FA216FFA25FA25DA25FA25DA25F
A25DA25FA25DA25FA25DA294CDFCA25DA25D92B5FC020F14E00007B912C04884A361A266
6B65EA74>I<EEFF80030713F0031F7F037F9038FC03E04AB56C487E02079039C1FF0FF8
913B0FFE007F9FFC4A48EB1FDFDA3FF06DB45A4A5A4A487F495B4990C76C5B5B495A4948
80013F5F5C495A13FF61485BA248495C615A5C485E96C7FC4890C8FCA25F485F5BA2171F
007F5F5BA2173F60485AA2177F605B1AF805FF14FCF0E0011AF8A24C140306C013F06C48
5C7F4C14074C15E0003F4B1380190F4C15C06C6C5C93B5EB1F80000FEC01FD6DD907F8EC
3F006C6C49486D5A6C6C90263FE07F137E6C9026C1FFC0EBE1FE6C90B5C66CB45A6D496D
5B011F01F86D5B6D01E0010313C0010190C890C7FC46486FC553>97
D<EC01FEEB07FF48B5FC5AA25DA3C7FC6E5A143F147FA25DA214FFA25DA25BA25DA25BA2
5DA25BA292C9FCA25BA25CA2131FA25CA2133FEEFF80DAF80713F0031F7F017F017F13FE
92B6FC02F3018313809126F7FC0013C090B500F0EB7FE04BEB3FF00380131F92C713F848
5B4AEC0FFC5CA2484915FE5C5C17074849EC0FFFA291C8FCA25AA25BA2001F5EA25BA200
3FEE3FFEA25BA2177F127F4916FCA217FF00FF17F85BA24C13F0A218E0495C18C0A24C13
80A24C1300A25F007F4B5A163F5F4C5A6C6C4A5A5F4B5B6C6C4990C7FC4B5A6C6C495A00
07EC3FF801FE495A3A03FF83FFE06C90B512806C6C49C8FC6D13F8010F13E0010390C9FC
38706EED4B>I<EE0FFE93B512C0030714F0031F80037F80913A01FFF807FE4A9038C001
FF020F90C7EA7F80DA1FFCEC3FC04A48141F4A5A4A48EC7FE0494914FF49495B4990C75A
495A49484A13C0133F5C017F1780495A7113004849EC01FC4893C8FC5C5A5C5AA24890CB
FCA35A5BA3127F5BA4485AA55BA4127F1803F00780180FF01FC0003FEF3F806D167FF0FF
00001F4C5A6D4B5A000FEE0FF86D4B5A0007EE7FE06C6C913801FF806C6D010790C7FC6C
01E0EB3FFE903A7FF803FFF86DB612E06D1580010702FCC8FC010114E09026001FFEC9FC
3B486FC54B>I<F27F804EB5FC187F95B6FCA21B00A3F0003F735A190F191FA262A2193F
A262A2197FA262A219FFA262A260A262A260A262A260A297C7FCA260EEFF80030701F05B
031F13F8037FEBFC1F4AB512FE0207D9C1FF5B913A0FFE007F9F4A48EB1FFFDA3FF07F4A
485D4A487F495B4990C77E495F495A494880133F4A5E495A13FFA248495EA248495CA248
605C485EA24890C891C8FCA25F5A495EA2171F127F495EA2173FA248485EA2177FA2495E
1AF805FF80190106E05BA24C1403626C484A13C07F4C14074C5D003F4B1380190F4C5D6C
6C5C93B5495A000FEC01FD6DD907F84AC7FC6C6C49486D5A6C6C90263FE07F137E6C9026
C1FFC0EBE1FE6C90B5C66CB45A6D496D5B011F01F86D5B6D01E0010313C0010190C890C8
FC49706FED53>I<EE3FF80303B5FC031F14C0037F14F04AB67E02079038F01FFC4AEB80
07913A3FFE0001FEDA7FF86D7EECFFE0494980494915804990C8FC4948153F495A494815
7F017F1700495AA248495D485F4A1401484C5A48494A5A170FEF3FF04890C8B45A040F5B
484AB5C7FC91B612FC17F017C04803FCC8FC93C9FC01FCCBFCA3485AA55BA9007F170618
0F60F03F80003FEF7F00606D4B5A001F4C5A4D5A6C6CED1FF04D5A6C6CEDFFC06C6C0203
90C7FC6C6DEB0FFE6C6DEB7FFC903A7FF007FFF06DB612C06D92C8FC010714F8010114C0
9026003FFCC9FC39486EC54B>I<F11FE0F1FFFC4E7F0607EBFF804E14C095381FF07F95
393FE01FE0F07FC09539FF803FF01A7F4DEB00FF4D5BA25F4E4813E0A2050F6D13C01B80
4E6C1300051F147E97C7FCA34D5AA4177F60A417FF60A45EA260A45E92B812C04A83A262
A391C7000790C9FCA35E5FA4161F5FA4163FA25FA4167F5FA416FF5FA45D5FA45D5FA55D
94CAFCA45D5EA4151F5EA44B5AA54B5AA44B5AA35EA25CA25EA25C93CBFCEA07E0EA1FF0
486C485A127F5D12FF4A5AA25DEBF01F01E05B49485A01005B6C137FD9E1FFCCFC6CB45A
6C5B6C13F000035BC613804C9184EF32>I<EF7FC0933803FFF8041F7F047F9038FF01F0
93B6EA83F8030301E0EB87FC4B9039001FCFFEDB0FFCEB0FEF4B48903807FFFCED7FF04B
487F4A497F5E4A90C714F84A814A5A4A5A023F17F04B157F027F16FF5D02FF17E05B4B5C
5B1AC0495B60A249491680A2605B92C81400A2605B4A5EA2181FA24A5E137F183FA2615C
187FA2013F5FA218FF5F615F011F5D5F6D6C4A5BA2177F6D6C91B5FC01034A5C6E13076D
6D5A6D9038E07FE76EB500C790C7FC6E1487020F495A020313F89126007FC05B92C7FC17
1FA260A2173FA260A2177FA260A217FF60D807E05C486C5E486C5C486C4A5B007F94C8FC
4C5A4C5A4848143F4C5A49ECFFE04901035B6C48010F5B01F8017F90C9FC6CB612FC6C15
F0000715C000014ACAFCD8000F13E0476778C54B>I<ED07F8EC1FFF0107B5FC5BA25EA3
EB00036E5B805CA25EA35C5EA35C93CBFCA35C5DA3141F5DA3143F5DA3147F5DA302FFEC
FFE0DBE00713FE043F7F4C14C04901E1B67E4B01C07F923ACFFC003FF8DBDFF0131F49D9
FFC0804C130F93C77F5D495B4B14075D5D5B5D4B140FA24990C8FC5CA24A151F013F5F5C
A2183F017F5F5CA2187F01FF5F5C18FF615A4A5C61A2485E4A5EA25F4895C8FC91C8FC4D
EC07C04EEB0FE0481AC049151F601A1F001F043F1580495E1A3F057F1500003F4D5B4918
7EA24E5B007F180149604F5A053F130700FF4E5A4970485A051FEB7F8071B5C7FC496F5B
715B6C486F13F0003ECAEA3FC04B7074ED53>I<16F8ED03FE15074B7EA25DA35EA26F5A
6F5AED03E092C8FCB3A4EC7F80903801FFF001077F497F497F90383FC1FFD97F017FEBFE
00485A4980485A12075B48485AA2121F495A003F5D13005C4892C7FC127E5C5D12FE007C
131FC75B143F5DA2147F5DA214FF5D5BA25D5B5DA25B92C8FCA25B5C011FEC0F804AEB1F
C01780133F5C163F017F15005C5E01FF147E4A13FE5EA24A485A15035E4B5A017F130F4B
5A6E485A013F01FFC7FC6DB45A6D5B6D5B6D13E09038007F802A6B74E832>I<ED3FC091
B5FC133FA3491480A27FEB001F6E1300805CA25DA2141FA25DA2143FA25DA2147FA25DA2
14FFA25DA25BA25DA25BA25DA25BA292C7FCA25BA25CA2131FA25CA2133FA25CA2137FA2
5CA213FFA25CA25AA25CA25AA25CA25AA291C8FCA25AA25BA2121FA25BA2123FA25B15F8
007F80140101F05BA212FF140301E05BA214075D13C0140F5DA2141F5D007F133F01E090
C7FC003F5BEBF1FE6CB45A6C5B6C5B00015B38007F80227071ED29>108
D<D903FCDB7FF0ED3FF8D90FFF912607FFFE4AB57E013F01C0011F6D6C010F80496D017F
02E04914F090B56C90B66C017F802801FE1FF8039026C07FF89039FFF03FFCD9F80F9027
07FE001F01039038000FFE00039126FC0FF090270FFC07FC1307D9F00749489126FE0FF0
80D807E09026FE3F80010749487F4CC74A4881D80FC002FE03FF5B6F484CC7FC001F4B6E
01FE8001804A5E4A495E123F01004A5E4C4A495CA2484990C85C007E625D00FE4A4B90C8
5A48013F9AC7FC007C4A5EC7FC071F5E027F644B5EA2073F161F02FF644B5E1E3F077F5F
5B4B4C157F6719FF491CFF4B4C5EA24E5E496592C85C53EC01F04E95388003F8491FF04A
4D5C1F004E1907011F5115E04A94C85B200F4E4C4814C0013F1E1F4A4C1980A2061F4DEB
3F00017F664A4C187E68063F040F130101FF535A4A4C70485A0B07EB1FE077B55A4A4C6F
5C4A4C6F91C7FC6DC96C48EE7FFC013E7048EE0FF07D4874C585>I<D903FCEDFFE0D90F
FF020713FE013F01C0013F7F496D4914C090B56C48B67E9027FE1FF80301C07F2601F80F
903A0FFC003FF800039126FC1FF0131FD9F007D93FC080D807E06D4848130F4CC77FD80F
C05C6F5A001F4B140701805C4A5B123F01005C4C140FA2484990C8FC007E5CA24B151F00
FE013F5F007C5CC7FC193F027F5F5DA2197F02FF5F5D19FF625B4B5C62A2495E4B5EA260
4995C8FC92C8FC4EEC07C04FEB0FE0491AC04A151F611B1F011F043F15804A5E1B3F067F
1500013F4D5B4A187EA24F5B017F18014A60505A063F130701FF4E5A4A70485A061FEB7F
8072B5C7FC4A6F5B4A6F5B6DC96C13F0013E9338003FC0534874C55B>I<EE0FFC93B512
C0030714F0031F14FC037F80913A01FFF80FFF4AD9C0037F020F90C77FDA1FFC6E7E4A48
6E7E4A48814A48141F4949814949140F4990C87F495A49481507013F835C137F495AA248
4917805A5C5A4A5D5AA24890C9FCA24E13005A5BA260127F495FA2187F61485AA24E5AA2
61495D615F61007F4C5BA24D90C7FC60171F003F5F6D4B5A4D5A001F4C5A6D4A5B000F4B
5B6D4A90C8FC00074B5A6C6C4A5A6C6DEB7FF86C9039E001FFE090267FF80F5B6DB6C9FC
6D14FC010714F0010114809026001FF8CAFC41486FC553>I<03FFEDFF80020301C00107
13F0020F01F0011F7F4A6D017F13FE4A6D90B6FC91277F87FE0301831380DA7E03902607
FC0013C002FE9026FF0FF0EB7FE04A6C4948EB3FF0D901F8DABF80131F05FFC713F8D903
F05C4DEC0FFC01075D14E04B4915FE010F5D02C05C1A074B49EC0FFF131F028091C8FCA2
013F5B14006D5C90C7FC031F5EA25EA2033FEE3FFEA25EA2037F167FA24C16FCA203FF16
FF1BF85EA24A4C13F0A24C16E0614A18C0A24C4A1380A24A4C1300A2624F5A4A163F6270
4A5A4F5A4A5F70495B4E90C7FC70495A4A4B5A70EB3FF8DBF9FE495A923AF8FF83FFE002
7F6DB512807049C8FC4B6C13F87013E002FF010190C9FC93CBFC5DA25BA25DA25BA25DA2
5BA292CCFCA25BA25CA2131FA2133F497E007FB612C0B7FCA45E50657EC553>I<D903FC
EC07FED90FFF91383FFFC0013F01C090B512F049D9E00314FC90B56C4880903CFE1FF80F
FC07FF2601FC0F90381FE000D803F86D4848EB7F80D9F00790397F0001FFD807E0D9FEFE
5B6F485B000F5D01C04A5B121F01805C4A5B003F190001004A6D5A93C75BF001F0484948
91C8FC127E5DA200FE133F007C5CC7FCA2147F5DA314FF5DA35B5DA35B5DA35B92CBFCA3
5B5CA3131F5CA3133F5CA3137F5CA313FF5CA35C5C6DCCFC133E414874C544>114
D<EEFFE0030F13FC033F13FF92B61280020315E04A9038807FF091390FFC000FDA1FF0EB
07F84A48EB01FC4A5A4A48130018FE4990C712034A14070103150FA20107ED1FFC5CA218
F8010FED0FF06EEC07E094C7FC80818115F8EDFFC06D14FC16FF17C06D15F06D81836D81
6E80141F6E15801401DA001F14C01501ED001F82040313E082A2486C80EA0FE0486C16C0
487E007F167F17FF00FF1780A3494A1300A2494A5A138048C8485A5F007F4B5A161F6C6C
EC7FE001E04A5AD81FF801075B6CB4D93FFEC7FC6C90B55A000115F06C15C0011F49C8FC
010313E0374874C542>I<ED0F804B7E4B7E4B7EA24B5AA35CA25EA25CA25EA25CA293C7
FCA25CA25DA2141FA25DA2143FA25D007FB712F817FCB8FC17F8A3C701F0C7FC5DA25BA2
5DA25BA25DA25BA292C8FCA25BA25CA2131FA25CA2133FA25CA2137FA25CA213FFA25CA2
5AA25CEE03E048ED07F017E05C160F4816C0161F91C71380163F17005E49147E5E15014B
5A5E4B5A0003140F6DEB3FC06C4A5ADA83FFC7FC6CEBFFFC6D5B6D5B010F13C0D903FEC8
FC2E6572E236>I<EC7F80903801FFF001076DED01F8496D4B7E496D150790263FC1FF4B
7ED97F017FD9FE00161F4848604980485A0007183F496048485AA2001F187F49485F003F
5D13004A16FF4892C85B127E5C4B5C00FE61007C131FC75B60023F5F5D147F4B5C97C7FC
14FF5D60495F5DA2181F495F5DA2183F495F92C8FC1B7C067F14FE4F13FC5C130F06FF13
0107E013F8A34D14031BF001074B13C04D14071BE06E5C6D4BEC0FC05F6FD97F7FEB1F80
6D6D01FEEBE03F6D9027E003FC3F140091277FF81FF86DB4FC6EB5486CB45A6EDAC00F5B
6E4A6C5B02039026FE000113E09126003FF09038007F804F4874C557>I<EC7F80903801
FFF001076DED01F8496DED03FC496D150790263FC1FFED0FFED97F017FD9FE00161F4848
18FC4980485A0007183F4918F848485AA2001F187F018018F0003F495B13004A16FF4892
C813E0127E5C4B5C00FE19C0007C131FC75B60023F17805D147F4B5C1A0014FF5D60495F
5DA2181F495F5DA2183F495F92C8FCA2187F615C130F18FF61A35F6101075D5FA26E4A5B
6D5D5F6F5B6D6D90B5C7FC6DEBE00391387FF81F6EB7FC6EECCFFE6E148F0203EBFE0F91
39003FF01F92C75BA34D5AA2177F60137E48B44B5A487F484B5B60485D4C90C8FC5F160F
91C7485A495D494A5A01F04A5A01C04A5A6D495B6C6C4990C9FCED0FFED803FCEB3FFC3A
01FF01FFF06C90B55A6D14806D49CAFC010F13F001031380476774C54F>121
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fd cmss10 10 9
/Fd 9 118 df<EAFFFEAF0F0F6F8E31>46 D<163C167C16FC15031507151F157FEC01FF
1407147F0107B5FCB7FCA814F91481EBF801C7FCB3B3B3B3AE007FB912F0AB3C7771F658
>49 D<923803FFE0033F13FE4AB612C0020715F0021F15FC027F15FF91B87E4983498301
0F17F849839238FE003F4901F001077F4901C001017F90B5C86C7F4A8148496F7F48496F
7F4A8148496F7FA24A8148854A81A34890CA6C7EAA6C6D4C5AA36C616E5D6C616E5D6C6D
4B5BA26C6D4B5B6D6C4B90C7FC6DB4ED7FFE6D6D4A5A6D01E001035B6D01FC011F5B6D90
B75A010017806E93C8FC021F15FC020715F0020015804A81020715F0023F15FE4A8149B8
12C0010702C114F0499026FC001F7F4901E001037F49018001007F4990C86C7E49486F7F
4801F8030F7F488548496F7F4A8148496F7F48854A814885A291CA127F4885A3498300FF
1A80AB6C6C4D1300A46C6D4C5AA26E5D6C616E5D6C616E5D6C6D4B5B6E5D6C6D4B5B6C6D
4B5B03C049B5FC6C02F001075C6D01FF017F91C7FC6D91B65A6D5F6D5F6D5F6D5F010017
806E93C8FC021F15FC020715F0020115C0DA003F49C9FC030313E0497B79F658>56
D<BC12F0AC91CDFCB3B3A791B912F0AB91CDFCB3B3B3A24C7A70F964>70
D<ED03FF033F13F04AB512FE02076E7E021F15E04A8191B712FC4982498249835B49D9FE
0180499026F0003F7F4901C001077F90B5487F4AC76C7F4849EC007F4849824A153F4849
151F727E485B4A6F7E5A91C97EA24848188084A2485AA28490BA12C0A2BBFCA801F8CCFC
A6127FA27FA36C7EA36C7EA2807E806C7F19036C6D5E6E5E6C6D163F6C6D5E6E4B5A6D01
C0020713806D01F0141F6D01FC91B5FC6D9038FF801F6D91B7FC7F6D18006D5F6E16F802
1F5E6E16C002034BC7FCDA007F14F8031F1480030001F8C8FC42537AD04E>101
D<DB0FFEED07FC92B500E0903801FFFE020302F8131F020FDAFE01B5FC023FECFF8791BA
FC5B4919FF5B5B49EBFC07DBE00002FCC7FC490180013F13804990C76C7F4A8049486E7F
4A8048844A8048844A80A348844A157FAA6E15FF6C60A36E5C6C606E5C6C606E5C6D6C4A
5B6E5C6D6D495B6D01E090B5C8FC49EBFC074990B65A6090B85A60604801BF1580028F4A
C9FC020314F848010014E0DB0FFECAFC92CCFCA6807E808014F86C90B712E0F0FF806D17
F819FE6DEFFFC0498490BA12F8488548854885481A8002F8C815C04801E0150748490300
14E04A163F91CA000F13F0484883A2498300FF7213F8A24983A66D5FA26C6C4D13F06D5F
6C6D4C13E06E5E6C01F0047F13C002FC4BB5FC6C01FF030714806C02E0023F14006C02FF
0107B55A6C92B75A6C6C18F06D60010F18806D95C7FC010117FCD9003F16E0020793C8FC
020015F8030349C9FC50757BCF58>103 D<B5FCB0C7FCB3A8EA7FFEB3B3B3B3A6107874
F729>105 D<EE0FE0D8FFF814FF1507151F157F4AB5FC5C5C141F5C5C91B6FC01F9ECFC
0016C001FB49C7FC90B512F85D15C05D92C8FC5C5C5C5CA25C5CA25CA291C9FCA35BA45B
B3B3A72B5072CF3C>114 D<D8FFFCEEFFFCB3B3B3A25FA35FA25F5F6D5D5F5F6C6C92B5
FC6E130302E0130F02FC137F6C90B8FC5F6C5E17F06C5E6C16806CEDFC006C15F0D8003F
91C9FC010713E03E5072CD5B>117 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fe cmss9 9 46
/Fe 46 125 df<D87FFEECFFFCAE000315074848EC0FF8A34848EC1FF0A34915E0001F15
3F4915C0A34848EC7F80A34848ECFF00A290C85AA24814012E227CED51>34
D<923807FF804B13005D4B5A4B5A4B5A4A5B5E4A5B5C4A5B4A90C7FC5D143F4A5A5D14FF
495BA2495BA2495B5B5D5B92C8FC5B5CA2495AA213FF5C5AA25C5AA25C5AA35C5AA35C5A
A44890C9FCA6485AA9485AB3A96C7EA96C7EA66C7FA47E80A37E80A37E80A27E80A27E80
137FA26D7EA2807F817F817F6D7FA26D7FA26D7F147F816E7E141F816E7F6E7F806E7F82
6E7F6F7E6F7E6F7E816F1380299F74F63F>40 D<EAFFF06C7E7F6C7E6C7E6C7F6C7F7E6C
7F806C7F6D7E133F806D7E7F816D7FA26D7FA26D7F817F81147F81143FA26E7EA2828082
A28082A28082A38082A38082A46F7EA66F7EA96F1380B3A94B1300A94B5AA64B5AA45E5C
A35E5CA35E5CA25E5CA25E5C93C7FCA24A5AA2147F5D14FF5D5B5D495BA2495BA2495B92
C8FC5B495A5C137F495A485B5C485B5A485B4890C9FC485A485A5B485A299F77F63F>I<
EAFFFCAE0E0E718D2D>46 D<16F015011503150F153F157FEC03FF140F91B5FC131FB7FC
A714F7140713E0C7FCB3B3B3B3A4007FB9FCAA386A73E951>49 D<EDFFFC020FEBFFC002
7F14F849B612FE496F7E010F16E049824982498290B9FC5A48DA007F804801F8010F8002
E001018048496D804A143F4890C86C7F498148486F7F83484883498112FF496F7FA2846C
5A123F6C48701380120FA212076CCAFC7ECBFCA64E1300A395B5FC61A24D5BA24D5BA24D
5B4D5BA24D5B4D5B4D90C7FC94B5FC4C5B604C5B4C5B4C5B4C5B4C90C8FCEEFFFE4B5B4B
5B4B5B4B5B4B13804B90C9FC4B5A4B5A4A5B4A5B4A5B4A5B4A90CAFC4A5A4A5A4A5A495B
495B495B495B4990CBFC495A495A495A485B485B4813804890CCFC485A48BA12805AAB41
6A79E951>I<ED3FFE0207B512E0021F14FC91B7FC010316C04916F0011F824982498248
B9FC48DAF00F80DB0001804801FC6D6C7F4801F0804801C06E7F48498091C86C7F49816C
5A6C486F7F5B6C5A12035B12016C5A90C9FCA35F61A25F615FA24D5B5F4D5B94B5FC4C5C
4C91C7FC040F5B167F033FB55A020FB65A6018C06095C8FC17FC83717E18E018F88491C7
000F13FF040180706C7F717F717F717F83717F717FA2717FA2721380A47213C0AA600020
198012301238007C94B5FC007E1900007F5E6D5F6D5DD8FFF05D6D4B5B01FE4B5B6D6C5C
6C01E04A5B6C01FC49B55A6C9026FFE00F5C6C91B7FC6C6000014DC7FC6C5F013F5E6D16
E001075E010193C8FCD9003F14FC020714E09126007FFEC9FC426D79E951>I<0003B912
F8AB02E0CBFCB3A7923803FF80033F13F892B512FE02E36E7E02E715E091B77E8418FE84
8585EDFE039226F0007F7F03C06D7F4B7F4AC76C7F4A6E7F4A80854A805C717F5CCB7E1A
80A47213C0AD4E1380A4000494B51200120E120F486C4B5BA2486C5D486C4B5B01F84B5B
486C5D6D4B5B6D6C5C6C01E091B55A6C01FC01075C6C9026FFC03F5C6C91B7C7FC6C5F6C
5F6C5F6C6C16E06D5E010F93C8FC010315FCD9007F14F0021F1480020001F8C9FC426A7A
E651>53 D<93380FFF8093B512FC0307ECFF80031F81157F4AB7FC5C140F5C5C4AEBFC00
91B500E0130749028013004949CAFC495B4913F05D495B495B4990CBFCA2495A5C5A5C5A
5C5A5C5AA25C5AA24AEB1FFC484AB57E030F14E0033F804AB67E48010315FE5C4A81023F
824A8249B87E00FFECFC0390B526E0007F7F4B7F92C76C7F4A02077F5C4A6E7F4A80A24A
6E7FA24A811A804A81A391C9FC7213C0A45B127FA47FA47EA3801A806C5FA2807E4E1300
807E4E5A806C4C5B6E5C6C6D5E5F6C6D4A5B6E4A5B6D01C05B6D6D90B55ADBFC075C6D90
B7C7FC6D5E6D5E6D5E6D5E6D5E023F15806E92C8FC020714FC020014E0031F90C9FC426D
79E951>I<ED1FFE4AB512E0020F14FC023F14FF91B712C0010316F04982498249824982
49D9F0038090B52680007F7F4849C7001F7F4801F802077F4A8048496E7F4A8048844A15
7F488491C9123FA34848707EA96C6C4C5AA36C6D4B5AA26C6D4B5AA26C6D4A5B6C6D4A5B
6C01FC020F5B6D6C4A5B6D6C6C017F90C7FC6D9039F807FFFE6D90B65A010316F06D5E6D
6C1580020F02FCC8FC020314F0021F14FE027F6E7E49B712E0010716F84982013FD9F003
13FF49902680007F7F90B5C76C7F4801FC020F7F48496E7F48496E7F4A8048496E7F4884
4A157F488491C97EA2481980A2498200FF19C0AA007F19806D5EA36C19006E5DA26C6D4B
5AA26C6D4A5B6E5C6C6D4A5B6E5C6C01FF023F5B6C02C090B55A6CDAF8075C6D90B75A6D
94C7FC6D5E6D5E6D5E010116E06D5E023F92C8FC020F14FC020114E09126001FFEC9FC42
6D79E951>56 D<ED1FFE4AB512E0020714F8021F14FE027F6E7E49B77E49824916F84982
5B49D9FC077F49D9E0017F90B52680007F7F4891C77E4A6E7F48496E7F4849804A824849
80A248496E7FA248496E7FA291C9FC48717EA448488384A31A80A484A41AC0A260A46C7E
60A36E92B5FC7E6E5CA26C6D5CA26C6D5C6E5C6C6D5C6E5C6C6D91B6FCEDC0036CDAF00F
13DF92B6009F13806C5F6D15FE6D15FC6D15F86D15F06D03C014006DED007F6D14FC6D6C
13E0DA0FFEC75B91C9FC18FF61A25F615FA24D5BA24D5BA24D5B5F614D90C7FC94B5FC01
204A5B01784A5B017C020F5B01FF5C02C0017F5B48D9F803B55A4890B75A604894C8FC5F
6C16F86C5E6C6C15C06D5D010F4AC9FC010114F0D9001F90CAFC426D79E951>I<94387F
FF80A294B57EA34C80A24C80A34C80A24C487FA34C487F187FA2043F8017F8047F6D7FA3
4C486C7FA34B496C7FA24B8217C0844B8217804B6E7FA24D7E4B82A24C7F033F82A24B48
6E7FA34B486E7FA25E4A707FA24A498285A24A498285A24A496E7FA24A8493C87EA24A48
8385027F855D8602FF854B82A249498492BAFC4986A34986A34986A2498692CA12038649
864A83A2017F874A8401FF875C8748884A8448885C8748885C8748884A84488891CCFC87
48885B87007F1D80498600FF1DC05B88626E7BED6D>65 D<B812FCEFFFF018FF19C019F8
19FE737E861AF08649C8003F80050180DD003F7F0607800601807280193F737F737F8573
7F8585A2871A7FA61AFF63A26163614F5B614F5B4F5B96B55A060391C7FC4E5B063F5B4D
B55A051F14E090BA5A97C8FC19FC19F019804EC9FCF0FFE019FC19FF1AC01AF049C86C14
FC050180DD001F6D7E060780060180726C7F071F7F737F1903737F737F861C80867413C0
A37413E0AA5013C0A2621C806297B51200614F5B61071F5B077F5B96B55A06075C063F5C
0507B65A90BBC7FC621AF8621AC097C8FC19FC19E096C9FC18C0536E71ED6C>I<B912C0
18FEF0FFC019F819FE737E1AE0861AFC8691C8000380DD003F14C0060780060180726C7F
737F070F7F737F19017380747F747F868886747F747FA2747FA2747FA2871D80871DC0A2
871DE0A287A21DF0A387A31DF8B01DF0A363A21DE0A263A21DC063A21D8063A298B51200
A2505BA2505B6264505B62505B505B97B5FC4F5C4F91C7FC070F5B4F5B077F5B4EB55A06
075C063F5C0503B65A91BAC8FC1AFC621AE01A804FC9FC19F819E04ECAFC18C05D6E71ED
76>68 D<943807FFFC94B612F0040715FF043F16E093B812FC030317FF030F18C0033F18
F04B18F84ABAFC5C4AED000F021F02F0D9007F13F04A0280140F4A49C8120391B500F815
00494A163F4902C0160F494AEE07E093CA12034949170049491860494918005D495B90B5
5A5D5A92CDFC485BA2485BA2485BA25C5AA25C5AA25CA25A5CA5B5FC91CEFCAE6E030FB6
12FC7EA5807EA280A26C94C8FC80A27E80A26C7FA26C7FA26C7F817E816D7F6D7F816D7F
6D7F6D7F826D806D14F06D806E13FE6E6D6C14036E02F0143F020702FF010FB5FC6E92B7
FC806E7E6F18F8030F18E0030318800300EFFC00043F16E0040793C7FC040015F0050701
F8C8FC567276EF6C>71 D<B595380FFFF0B3B3AB91BBFCAB91CB120FB3B3B0546E71ED73
>I<D8FFFE4EB5FC505B505B505B505B505B505B97B55A4F91C7FC4F5B4F5B4F5B4F5B4F
5B4F5B96B55A98C8FC4E5B4E5B4E5B4E5B4E5B4E5B4E5B95B5C9FC4D5B4D5B4D5B4D5B4D
5B4D5B4D5B94B5CAFC4C5B4C5B4C5B4C5B4C5B4C5B4C5B93B5CBFC4B5B4B5B4B5B4B7F5D
4B7F4B7F92B6FC4A814A815C4A814A814A13CF4A01877F91B500037F90B500FE804B7E4B
6C7F4B814B7F4B6D7F4B8192C77E4A6E7F4A824A804A6E7F4A824A804A6E7F91C9804982
727F8684727F8684727F8684727F8785737F8785737F8785737F737F8785747F8886747F
8886747F8886747F88867513801DC05A6E71ED71>75 D<94380FFF804CB512FC040FECFF
80047F15F04BB712FC030716FF031F17C04B8392B912F84A844A84020FDAF8006E7E4A02
80010F804A49C70003804A01F802008091B500E0033F7F494A6F7F4991C900077F4B8249
49707F494970804949717F4B834949717F4949717FA290B5CB6C7F4A8448884A8448884A
8448884A85481D804A85A2481DC04A85A2481DE0A24A85A2481DF0A491CD7EA2B51CF8AF
6E61A26C1DF0A46E616C1DE0A36E616C1DC0A26E61A26C6D96B51280A26C1D006E60A26C
6D4E5BA26C6D4E5B6F5F6C646D6D4D5B6F5F6D6D4D5B6F94B5FC6D636D01FE04035C6D6D
4C91C7FC705D6D6E4B5B6D02F0037F5B6D6E92B55A6E01FE02035C6ED9FFC0011F5C6E02
F890B65A6E91B85A6E96C8FC020118FC6E60033F17E06F5F030794C9FC030116FC6F6C15
F0040F1580040102FCCAFCDC000F1380657477F078>79 D<923801FFFE033FEBFFF04AB7
FC020716E0021F16F8027F16FE91B97E010318E049845B5B5B49DA800F5C90B500F8C77E
4802E0140F038014014849C9127F4849163F4AEE0FC0484916074A16011900484994C7FC
5CA34890CDFCA780A280A26C7FA280806C7F14FF6C8015E06C14FCEDFFC06C15FCEEFFC0
6C16FC6DEDFF806D16F06D16FC6D16FF6D17C06D83010017F86E82021F82020782020083
031F821501DB001F81040181EE001F050380050080183F84727F84727F8484A2731380A2
85A385A74F1300A3003060003861003E18FF123F486C4C5B01E05E01F84C5B01FE5E6D6C
4B5B02E0157FB500FC92B55ADAFFC001075C03FE013F5C92B8FC6C96C7FC6C60000F18F8
000360C660013F1780010794C8FC010016FC021F15E0020192C9FCDA000713F0497479F0
5A>83 D<BF12C0ABCA6C0180CAFCB3B3B3B3B3A8626D7AEC6F>I<B595260FFFC0F0FFF8
6C7519F05061A26C6D7319E0A250616E856C23C05061806C75198009BF60F2FF9F6C6D73
1900A24F626E856C6A4F010F183FA26C6D745FA24F486C187F6C6D745FA2070F1AFF6E05
FC806D7361071F61A26D6D4C6C6D5FA2073F616D6D735F507E077F61A26D6D735F50137F
07FF616D6D7394C7FCA24E49013F5E6D6D6689506D163F606D6D745DA24E90C76C167F6D
765D814F6E16FF027F030F636F86A24E486E5D6E6770854F806E033F4F5B7085A26E4C6E
4B5B187F70854F157F6E03FF4F90C8FC8A826E4C033F5D4D1A1F8A6E01F84A6F5D203F5F
1F806E01FC91C96C5D207F5F037F4A7001C05B16FE20FF033F4948705D8B16FF1FE16F4A
705D051F19F1A26FD99FF0705D1FF3A26F4A97C9FC05BFF07FFBA36FD9FFC071B45AA36F
4A715BA36F6495CB7EA37048725BA2956E7EED9A>87 D<D801FEEC03FC4915F8A2000315
07A24848EC0FF0A34848EC1FE0A3001F153F4915C0003F157FA34848ECFF80A348484913
0001FC15F8AE2E2262ED51>92 D<EDFFFC021FEBFFC049B612F0010715FC011F81017F6F
7E48B87E48838484849126FE000F7F02F013036C01806D7F49C8FC01F86F138001E08149
6F13C090C9FCCA7EA219E0A283AA171F0303B6FC92B7FC140F147F0103B8FC131F137F90
B9FC000316C748ED00074814E04849C7FC4813F014C04890C8FC5B485AA25BA25FA26D5D
A26D5D6C6C5D6E49B5FC6E5B02F0131F6C01FE90B6FC91B8FC7EA27E6C16E76C16C76C16
076C15FC6D14E0011F49C9FC010313C03B4B7AC84E>97 D<EAFFFCB3B3A2EE7FF8030FB5
FC037F14C04AB612F0020F814A81027F8101FDB8FC90B97E8585EDE01FDB00038002F813
004A023F7F02C0804A6E7F91C87E496F7F4981717FA284A2721380A284A31AC0A284AC60
1A80A360A21A0060A24E5A5F7F6D4B5B6E5C4D5B6E5C02F0027F5B6E49B55A02FE130791
26FFC03F5C92B75A96C7FC6001FD5ED9FC7F5D6E5D020F5D6E158002014AC8FCC8003F13
F803031380427074ED54>I<923807FFF8037FEBFF800203B612F0020F15FE023FEDFF80
91B812C04917F04917F85B5B5B499026FE001F13F04901F0130190B500C0EB003F4891C8
120F4A1503484915014849ED00604A1600485BA2485BA2485BA291CBFCA25A5BA312FF5B
AC7F127FA37F7E80A27E80806C18186E16386C6D16786C6DED01F86E15076C6D151F6C02
C0EC7FFC03F0EB03FF6D01FE137F6D90B7FC7F7F010317F86D17F06D17C0023F1600020F
15FC020315E0DA007F91C7FC030713E03E4B7BC848>I<95380FFFC0B3B3A2913801FFE0
020F13FE023FEBFFC091B612F8010315FE49EDFF8F4916CF4916EF4993B5FC5B90BAFC48
ED007F03F8130F4802E0130303807F4849C8FC4849153F5C4A81484981A2485B5CA24890
C9FCA35BA212FFA25BAC7FA2127FA27FA36C7FA2806C5F6E5D6E5D6C7F6E92B5FC6C6D5C
6E14076C02C05B6C02F0133FDBFE01B6FC6C91B8FC7F6D16EF6D16CF6D160F6D15FE6D15
F8010015E06E1480021F01FCC9FC020113C042707BED54>I<ED1FFC92B512C0020714F8
021F14FE027F8091B712C0010382498249824982498249EBF80790B5D8C0007F92C7003F
13804849140F4801F86E13C04A8048496E13E048825C4AED7FF05A91C9123F4818F84916
1FA2485AA290B9FC19FCA2BAFCA701F8CBFCA6127F7FA36C7EA36C7EA2806C7FA26C6D16
306E16706C6DED01F06C6D150702FF151F6C6EEC7FF86D01F0EB03FF6D01FE137F6D90B7
FC7F7F6D17F06D17E06D6C16806EEDFE00020F15F8020315C0DA007F49C7FC030713C03E
4B7BC848>I<EE3FFE0303B512E0031F14F85D92B6FC5C14075C5C5CA24AEBF00791B538
8000784BC71218494914005D495B5D5B5DA35BB3A2B812E0AAD8000F01C0C8FCB3B3B3A6
35707DEF32>I<DB3FF84AB4FC0203B56C013F1380020FDAE003B5FC023FECF81F91B600
FEB6FC4992B7FC5B4919C05B5B49D9F01FECE01F49D9C00701FCC8FCED000149486D7F4A
147F48496E7E4A8048844A80A348496E7FAA6C6D4A5BA36E5C6C95C8FC6E5C6C6D4A5A6E
14FF6D6C495BEDC0076DD9F01F5B92B65A495E6090B85A95C9FC485E023F14F8020F14E0
D9FE0314809126003FF8CAFC000391CCFCA37FA26C7FA28014F06C90B7FC18FCF0FF806D
17F06D17FC4917FF90BA7E00038586488548854801F0C7120302C0DA003F7F4890C91207
4904017F484882197F49717E00FF84A24983A56D5FA26C6C4D5A6D177F6D17FF6C01C003
035B6C01F0030F5B02FC153F6CD9FF8049B55A6C02F8011F5C6C91B85A6C616C6C4DC7FC
6D5F010F17F0010317C0010094C8FC021F15F8020315C0DA000F01F0C9FC4A6A7CC751>
I<EAFFFCB3B3A2923801FFE0031F13FE92B67E020315E04A81021F814A814A8191B7FC01
FD8290B91280EDC01FED000302FC010014C04A804A804A804A16E0835CA291C87EA35BA4
5BB3B3A83B6E74ED54>I<B5FCB0C7FCB3A5EA7FFEB3B3B3B0106D75EC27>I<EAFFF8B3B3
A494381FFFE04D13C04D138094B512004C5B4C5B4C5B4C5B4C5B4C5B4C5B93B5C7FC4B5B
4B5B4B5B4B5B4B5B4B5B4B5B94C8FC4B5A4A5B4A5B4A5B4A5B4A5B4A5B5C91B5FC01F980
01FB8090B6FC828282A24A7F4A6C7E4A7E02F0804A6C7F4A7E0280804A6C7F497F496D7F
4981496D7F167F83707F8284707F8284707F82707F84177F717E19807113C08319E07113
F08319F87113FC3E6E73ED4F>107 D<EAFFFCB3B3B3B3B3B3A20E6E74ED27>I<922601FF
E0ED0FFFD8FFF8011F01FE92B512F092B66C010714FC020303E0011F14FF4A6F49158002
1F6F90B712C04A6F4816E04A6F4816F091B75B01F9704816F801FB059F16FC90B5D8C01F
9138BFFE00DB0003DAFFF8131F02FC010003E0010713FE4A6E4A7F4A6E4A7F4A6E91C8FC
4A4C16FF71834A5EA291C86C4981A3495FA4495FB3B3A8684874C781>I<923801FFE0D8
FFF8011F13FE92B67E020315E04A81021F814A814A8191B7FC01F98201FB178090B5EAC0
1FED000302FC010014C04A804A804A804A16E0835CA291C87EA35BA45BB3B3A83B4874C7
54>I<923803FFC0033F13FC4AB67E020715E0021F15F8027F15FE91B8FC4983010717E0
498349834949C66C7F4901F0010F7F03C0130390B5C87F48496F138048496F13C04A8148
496F13E04A8148496F13F0A248496F13F8A24890CA13FCA249177F007F19FEA349173FA2
00FF19FFAB6D5FA2007F19FEA36D17FF6C19FCA26E5D6C19F86E5D6C6D4B13F0A26C6D4B
13E06E5D6C6D4B13C06C6D4B13806E92B5FC6C02C0010314006D01F0010F5B6D01FE017F
5B6D90B75A6D5F6D5F6D5F6D5F6D6C4BC7FC021F15F8020715E002011580DA003F01FCC8
FC030313C0484B7CC851>I<EE7FF8030FB5FCD8FFFC017F14C04AB612F0020F814A8102
7F8101FDB8FC90B97E8585EDE01FDB00038002F813004A6E7F02C0804A020F7F91C87E49
834981717F83A2841A8084A3841AC0A384AA60A21A80A260A2601A0095B5FCA24D5BA26D
5D6D4B5B6E5C4D5B6E5C02F091B55A6E01035C02FE130F9126FFC07F5C92B75A96C7FC60
01FD5ED9FC7F5D6E5D020F5D6E158002014AC8FCDA003F13F80303138092CBFCB3AB4267
74C754>I<EE3F80D8FFF8EB03FF150F153F92B5FC14035C141F5C5C91B6FC13F9EEF000
01FB91C7FC90B512FC15F015C092C8FC5C5C5C5C5CA25C5CA291C9FCA35BA35BB3B3A329
4874C738>114 D<91380FFFF091B67E010715F8011F15FE017FEDFFC090B812E05A5A5A
4817C0A2489038F8003F02C013014849EB003F91C8120F49ED0380007F93C7FC5BA57FA2
7F806C7F14F014FE6CEBFFF0EDFF806C15F816FF6C16C06C16F06C826C826D81011F816D
1680010316C0D9007F15E01407DA003F14F01501DB003F13F8160F827013FC8282A2177F
A41220003816FF007E17F8D87F805C01E05C01F85CD9FF80011F13F002F890B5FCB912E0
A218C018806C1700001F5E00075EC616F0011F15C001034AC7FCD9000F13E0364B7CC83E
>I<903807FFC0B3A2B9FCAAD8000701C0C8FCB3B3A681A46F13036D5D6FEB1F806F137F
9238FE07FF92B612C07FA26D16E0A28018806EECFE006E14F06E91C7FC020313C0335C7D
D93B>I<D8FFFC923807FFE0B3B3AE5FA35F5FA25F6D92B5FC16036D5C6C01C0131FDAF0
01B6FC91B8FC7E17F76C16C717876CEDFE076C15F06C15C0C602FCC9FC011F13803B4874
C554>I<D8FFFC922603FFE0923807FFC0007F1E804D6D5DA26C6C1D00735D5F6C6C64A2
94261FF7FC153F6C6D63A2053F6D157F806C05E35F057F6D15FFA26C6D63745BEFFFC16C
6D63A24C6F5B6C6D03C05F604C6F5B017F646E167F06006D5B5E6D6C98C7FC4D133F040F
6F5B011F63804D6D6C133F6D021F601580190F6D4A486E495AA215C06D4B6D6C495A167F
A203E0497F6D07815B16FFA26D6D496D5D1BC3A2DA7FF1496D5DA203F917E7023F91C800
7F91C8FCA3DA1FFB604C153F1BEF03FF17FF6E496F5BA36E496F5BA36E496F5BA26A467E
C56F>119 D<D87FFFEF7FFE6C6D4C5A6C4D5B6C6D4B5B6C6D4B5B6C7F6C6D4B5B6C6D4B
5B4E90C7FC6D6C4B5A6D6C5E6D6D4A5A6D6D5B6D6D495B6D6D495B6D4B5B6F5D6D6D4990
C8FC6E6C495A6E6C137F6E6D485A6E5D6E01C15B6E01E35B6E01F75B93B55A806F91C9FC
6F5B6F5B6F5B6F5B6F5BA34B7F835D4B7F4B7F4B7FDBFFF77F04E37F4A01E17F4A01C17F
4A13804A496C7E4A486D7E023F6E7E4B804A486D7F4A486D7F496F7F49497F4949814949
6D7F727E4990C86C7E49488249486F7F01FF707F48496F7F4849814A8348496F7F48717F
4849707E4890CA6C7E4848198000FF7213C04A4680C54B>I<D8FFFCEF7FFC6C6CEFFFF8
A2003F4D13F07F7E6E4B13E07E6E4B13C0A26C6D4B1380A27E6E4B13007E6E4B5A7E804E
5A137F6E4B5A133F806D4B5BA26F5D6D5D6F5D6D5DA26D6D5D5F6D6D92C7FCA25F6D6D5C
A26E6C495AA2143F6F495A141F606F13FF6E5DA26E1381608004C15B6E13C3A295C8FC6E
13E3EEE7FE157FA2033F5BA292381FF7F8A2EEFFF081A26F5BA26F5BA2815FA294C9FC5D
A24B5AA24B5AA34B5AA24B5AA25E157FA24B5AA24A5B5C93CAFC000E5B390FE01FFE90B5
FC5D5D5DA26C5C5D5D4ACBFCC613F846677EC54B>I<BDFCAB500B80B051>123
D<C5B512C0ABA20B80B0A3>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Ff cmssbx10 9 17
/Ff 17 118 df<B512F8B3A27E1515739430>46 D<923803FFC0037F13FE0203B612C002
0F15F0023F15FC91B8FC49834983010F17F04983A249834902818090B548C66C7F03F813
1F484A6D14804B7F484A6D14C0A2484A6D14E0A292C8FC4819F0A348496F13F8A34819FC
A54819FE4A81A7B518FFB3B36C19FEA46E5DA46C19FCA56C19F86E92B5FCA26C19F0A26F
5B6C19E06F5B6C19C06F5B6C19806F5B6C6E49140003FE137F6DD9FF81B55A6D91B65AA2
6D5F6D5F6D5F010117806D94C7FC023F15FC020F15F0020315C0DA007F49C8FC030713E0
487679F157>48 D<EE7F80EEFFE05D4B7F5D151F5D92B5FC1407143F010FB6FC001FB7FC
127FA2B8FCA67E14F7381FFC07C7FCB3B3B3B3A70007B912E04818F85A19FC5AA47E19F8
7E6C18E03E7274F157>I<ED3FFF0203B512F8021F14FF027F15C049B712F0010716FC49
82013F707E498390B97E48848548845A48848548ECE01FDB0003158048497F02F86D6C14
C04849804A17E0B548807114F05C6C8291C815F86C826C5A120F6C5A7114FC120312016C
5A1378133890C9FCA61AF85FA34D14F0A34D14E0A24D14C01A805F1A005F94B55A614C5C
5E614C5C4C5C4C5C4C91C7FC4C5B6093B55A4B5C4B5C4B14804B91C8FC4B5B4B5B4B5B5F
92B55A4A5C4A5C4A91C9FC4A13FC4A5B4A5B4A5B91B55A5E4991CAFC495B495B495B495B
495B495B90B55A4891CBFC5C4890B912E04819F85A4819FC5AAA6C19F87E6C19E0467279
F157>I<92381FFFE04AB6FC020F15E0023F15F891B712FE0103707E010F834983017F83
90B97E488448845A488448ECF803DB800015804AC77E6C01F86E14C04A806C13C06C4980
91C815E06C5A12005B1378133090C9FCA61AC0A25FA21A805FA21A005F94B55A615E4C5C
4C5C041F5C0303B6FC0203B75A96C7FC606018F06018F818FF19C019F08519FE91C70003
80DC007F14807114C07114E0837114F07114F8A27114FCA31AFEA283A21AFFAE001819FE
003C5E123EEA3F80487E6D4B14FC7F01FC5D01FF4B14F814C0B500F0023F14F002FE5C91
26FFF003B612E092B8FC1AC0003F19807E6C19006C600001606C60013F17E0010F5F0103
94C7FC010016FC023F15E0020392C8FCDA003F13E0487679F157>I<0403B512E0040F80
854C80A25EA25E93B6FCA25DA25DA25DA25D17DF5D179F5DA24B131FA292B5FC16FE5C4A
13FCA25C16F85C16F05C16E05C16C05C168091B5FC16005B5D5B495BA2495BA2495BA249
5BA2495BA290B55AA24891C7FCA2485BA2485B5A5C5A5C5A5C5A5CB55A91BA12801BE0A2
1BF0AA6C1AE0A2001F1A80CA003F01FCC7FCB3A3715BA2050713E04C6E7BED57>I<013F
B812FE90BA1280A24819C0AA1A80A2F1FE0003F0CAFCB3A4EEFFF803F7EBFFC092B612F8
18FE727E8519F0858585851A80EEC07FDC003F14C003FC7F4B6D14E003E07F4B16F0834B
16F892C7FCA25C6C7014FC5CEB3FF090C9FCA21AFEB2D801C018FC1203486C5DA2487E1A
F8486C5D487E6D18F0486C5D02C05CB56C4A14E002F85C02FE49B612C06C9038FFE00F6C
91B812806C1900A26C606C606C60C6606D5F6D1780010F4CC7FC01035E010016E0023F15
80020702FCC8FCDA007F90C9FC47727AED57>I<933803FFF0047F13FE0307B67E031F15
F092B7FC14035C141F5C91B8FC5B5B5B5BEF801F499138FC00034902E01300494A91C7FC
93CAFC90B55A5D485CA2485C5D5AA2485CA3485CA44891CBFCA393380FFF8048033F13F8
93B512FE03036E7E4B15E04A48814B814B814B81B58392B8128091B9FCDCC07F14C0DC00
1F14E003FC7F4B6D14F04B7F7114F85D4B6D14FCA34B16FEA392C87EA31AFFA35CA87EA5
80A37EA41AFE7E6F91B5FCA27EA26F16FC6C5EA26F16F86C6E5B6F4914F06C6E5B6F4914
E06C6E6CB6FC6D91B712C01A807F6D1800616D5F6D5F6D5F01005F6E5E021F93C7FC0207
15FC020115F0DA003F1480030301F8C8FC487679F157>I<001FBA12F8007F19FEA2BCFC
AA1AFE7E1AFC001F19F8CB003F13F04E13E095B5FC4D14C04D14804D1400A24D5B4D5B5F
4D5B6194B5FC4C5CA24C5C4C5CA24C91C7FC5E605E4C5BA293B55AA24B5CA24B5C5D605D
A2605D95C8FC5DA24B5BA292B55AA34A5CA34A5CA35C5FA25CA25F5CA35F5CA494C9FC5C
A591B55AA85B5EAE6D5CA2023F13E0487079ED57>I<92380FFFF04AB67E020F15F0023F
15FC91B8FC010317C04983498349834983498390BAFC481980A2484AC66C14C003F8131F
03E01307484A6D14E0A2484A6D14F0A392C8FCA24819F8AD6C19F0A36F5B6C19E0A26C19
C06F5B6C6E4914806C6E49140003FC133F6DD9FFC3B55A6D91B65A010F17F06D5F010117
806D6C4BC7FC021F15F8027F15FE0103B812C0010F17F04983498390BAFC484AC66C1480
4802F0010F14C04B7F484A6D14E0484A6D14F0A24891C814F8A24819FCA248496F13FEA5
B518FFAE6C19FEA36E92B5FCA26C19FCA26F5B6C19F86F5B6F5B6C02F8011F14F003FF90
B6FC6C92B712E0A26C19C06C19806C19006D5F6D5F6D5F6D5F6D5F010117806D6C4BC7FC
020F15F002011580DA000F01F0C8FC487679F157>I<92380FFFE04AB512FE020FECFFC0
023F15F091B712FC49820107707E498349834983498390B97E4884A2480300804802FC13
3F03F06D1480484A7F4B6D14C05A4B6D14E05A92C76C14F0A34819F883A25C1AFCB5FCA4
1AFE84A71AFFA895B6FCA37EA36E5CA27E5FA36C6E5B5F6C806F5B6C6E5B6F90B7FC6CEC
FE036C91B9FC846C16FE6D18FE6D15FC6D15F86D15F06D15E001014BB5FC6D6C1400021F
13FC020001F015FC92C8FCA35F1AF8A31AF05FA21AE05FA24D14C05F010C1880011E5D01
3F4B14006E49B6FCD97FE0495CD9FFF8010F5C02FF137F4891B75A61486061486096C7FC
6000015F6C17F06D5E011F168001074BC8FC010115F0D9003F1480020301F0C9FC487679
F157>I<001FBBFC481AC05ABC12E0AB1BC0A292C7160094CAFCB3AC92B87E1AE0A286AA
62A21A8092CCFCB3B3A86C5B7E6C13F84B6E72ED61>70 D<923807FFF892B612C0020715
F8021F15FE027F6F7E49B87E010717F04983498349835B90BAFC48DBC07F14809238FC00
0F484A010314C04802E07F4B6D14E0484A801AF04891C87EA2484917F8845CA25A1AFC84
5CA2B5FCA291B9FCA61AF8A21AE002F8CBFCA67EA280A37E801A706C6DEE01F019036F15
076C180F6F153F6C6E157F6C6E913801FFF803FC14076C02FF143F6CDBE007B5FC93B7FC
7F7F6D18F0010718E06D18800100EFFE00023F16F8020F16E0020393C7FCDA003F14F003
0149C8FC464D7BCA51>101 D<92263FFFF0EC01FE0207B66C133F023FDBF001B5FC91B7
EAFC070103EEFF1F4994B6FC131F5B491A8090BCFCF1FC7F48DAFE019138FE007F489126
F0003F6D13074B6D92C7FC484A6D80A24B7F4885A292C77EA24885AC6C61A26F5BA26C61
6F5BA26C6E4991C8FC6F5B6CDAFE01B55A6C91B75AA26D5F6D5F6119804994C9FC017E16
FC023F15F0D9FE071580DA003F01F0CAFC92CDFCA27FA280808014F86DB712FEF0FFFCF1
FF806D18F01AFC6D18FF017F8548BB7E4886488648865A02F8C8001F80484915004A043F
7F4849160F85A2B548707FA285A66E5EA26C6D4C5B6E5E6E5E6C6D4C5B02FF93B5FC6C02
C002035C6C02FE027F5C92B9FC6C626C626C626C6C4EC7FC6D60010F18F0010118806D6C
4CC8FC020716E0DA001F02F8C9FC516C7DC957>103 D<381FFFF8007F13FCB512FEA214
FFAF14FEA26C13FC6C13F8C8FCB0380FFFF04813FC5A4813FEB3B3B3AC6C13FC7E6C13F0
186F78EE29>105 D<17FE261FFFC013074801F0133F4815FFB56C5A5D150F5D5DA25D92
B5FCA214F914FBA291B6FC170016F016C093C7FC15FC5D5D5D5D5DA292C8FC5CA45CB3B3
A26C5B7E6C13E02F4A77C93B>114 D<261FFFE092381FFFE04801F8037F13F85AB56C92
B512FCB3B3AB5FA35FA35F5F5F7E6E5C94B6FC6C6D5B9238E00FFE92B5FC6C5E6C5E5F6C
5E00014C6C13F86C1600013F02FC011F13E0010702F090C8FCD9007F1380464A77C759>
117 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fg cmr8 8 53
/Fg 53 124 df<EA07E0EA1FF8487E487EA2B5FC1480A414C07EA27E7EEA07E7EA0007A4
130FA21480A3131F14005BA2133E137E5BA2485A12035B485A485A121F485A90C7FC121E
120C122B748F29>44 D<EA07E0EA1FF8EA3FFCEA7FFEA2B5FCA6EA7FFEA2EA3FFCEA1FF8
EA07E01010748F29>46 D<F00780F00FC0181FA2183FA21980187F190060A260170160A2
1703601707A260170F60171FA260173F60A2177F95C7FC5FA25F16015F1603A25F16075F
A2160F5F161FA25F163F5F167FA294C8FC5E5EA215015E1503A25E15075E150FA25E151F
5EA2153F5E157FA293C9FC5D5DA214015D1403A25D14075D140FA25D141F5DA2143F5D14
7FA292CAFC5C5C1301A25C13035CA213075C130FA25C131F5C133FA25C137F91CBFCA25B
5B1201A25B12035B1207A25B120F5BA2121F5B123FA25B127F90CCFC5AA25AA25A127C3A
8C78E84B>I<ED3FF00203B5FC021F14E0027F14F891B67E01039038E01FFF49D900037F
D90FFC01007F49486E7E49486E7E49486E7E49486E7E4A1407488391C812034883498100
071880A2000F18C04981001F18E0A4003F18F0A249167FA2007F18F8A700FF18FCB3A700
7F18F8A76C6CEEFFF0A5001F18E0A36C6C4B13C0A3000718806D5D6C1800A26C6D4A5A6C
6D4A5AA26D6C4A5A6D6C4A5A6D6C4A5AD90FFE49485A6D6C495B6DD9E01F90C7FC6D90B5
5A6D6C14F8021F14E0020391C8FC9138003FF03E617ADD4B>I<153E157E15FE14031407
141F14FF130790B5FCB6FCA2141F13F81300C7FCB3B3B3B24A7E4A7F0103B512F0B912C0
A5325E73DD4B>I<913803FFE0023F13FE91B612C0010315F0010F15FC90261FFC0313FF
90277FC0003F7F49C7000F7FD801FC6E7F484802017F48486E7FD80FC06F7E8448486F7E
90C97E481880003E7013C0EA7FC013F001FC6F13E0487EA26D8119F0A66C5A6C5A6C5A6C
5ACAFC4D13E0A319C05FA24D138019005F60177F604D5A4C5B604C5B4C5B4C90C7FC5F4C
5A4C5A4C5A4C5A4B5B4B5B4B48C8FC5E4B5A4B5A4B5AED7F804BC9FC4A5A4A5A4A48EC01
F04A5A4A5ADA3F80EC03E04AC8FC14FE495A495A49481507495A494816C0495A49C9120F
01FC163F48B9FC5A4818805A5A5A5ABAFCA21900A33C5E79DD4B>I<EDFFF8020FEBFFC0
027F14F049B612FE01079038803FFF90270FF8000713C0D91FE001017FD97F806D7F01FE
C86C7E496F7E48488248486F7E13FE486C6F138080486D16C080A3805CA37E4A16806C5B
C690C85A133890C914005F60A24D5A6017FF4C5B4C5B60040F5B4C48C7FCEE7FFC92381F
FFF8021FB512E0178004FCC8FCEEFF8017F091C7EA3FFEEE07FF7013C0040013F0717E71
7E717E8471138019C08319E07113F0A319F883A219FCA2EA07F0EA1FFC487E487EA2B57E
A319F85FA219F091C8FC6C484B13E05B4917C0D83FE05DD81F804B13806D17006C6C4B5A
D807F84B5A6C6C4B5A6CB46C495B6C01F001075BD93FFF013F13806D90B6C7FC010715FC
010015F0021F1480020101F8C8FC3E617ADD4B>I<EF07C04D7E171FA2173F177FA217FF
5E5EA25E5EA25E5EA2167E5EA24B5A4B5AA24B5A4B5AA24B5A4B5AA2157E5D14015D4A5A
14075D4A5A4A5AA24AC7FC147EA25C495AA2495A495AA2495A495AA249C8FC137EA25B48
5A12035B485A485AA2485A48C9FCA2127E5ABB12C0A5C9000101E0C7FCB04C7FA2041F13
FE037FB71280A5425F7CDE4B>I<01E0161C01F8167C01FFED03FC02E0143F02FFEB07FF
92B65A60606095C7FC5F5F17F017C094C8FC16F8D9F87F13C091CBFCB2ED3FF80203B57E
020F14E0023F14F891B67E01FB9038E01FFF9027FFFE00077F02F801017F02E06D7F4A6E
7E91C86C7E498249151F717E49825B90C96C1380A219C0A37113E0A419F0A4EA0FE0487E
487E487E487EA419E0A25F4917C05B6C5A491780007EC95A003E1800003F5E6C5F6D4B5A
6C6C5E6D157F6C6C4B5A6C6C4A5BD801FE4A5B6C6C6C010F5BD97FE0D93FFEC7FC903A3F
FE01FFFC010FB612F06D15C0010192C8FCD9003F13FC020713803C6179DD4B>I<EE7FF8
0307B5FC031F14C092B612F04A9038E01FF8020790380001FCDA0FFC6D7EDA3FF0143F4A
4880DAFF80ECFF804990C75A49484A13C049485C010F5D495A495AA2495A13FF4A6E1380
4870130048496E5A715A4894C7FC91CBFCA25AA2485AA3123FA2ED0FFE92387FFFE04848
48B512F84A14FE4A8091260FF00F7F91261FC00113E000FF49C76C7E027C6E7E4A6E7ED9
FDF0140F717ED9FFE0814A6E138019C05C7113E091C8FC19F0A2834917F8A419FC5B127F
A7123FA27FA2121F19F8A3120F4D13F06C7E19E0A26C18C06E5C6C18806C6D4A1300A26D
6C4A5A6D6C4A5A6D6C5D6D6C4A5A6D6CECFFE0902703FF80035B6DD9F01F5B6D90B548C7
FC023F5C020F14F0020314809126003FFCC8FC3E617ADD4B>I<EA07C0A2487E7FEBFF80
91B9FCA35AA219FE19FC19F819F0A24818E019C001C0C9EA1F8090CA123F1900003E177E
007E5F1701007C5F4D5A4D5A170F60484C5A4DC7FC5FCA127E5F4C5A16035F4C5A4C5AA2
4C5A4CC8FCA2167E16FE5E15015E1503A24B5A150FA24B5AA3153F5E157FA215FFA34A5B
A35CA35CA34A90C9FCA55CA75CAC6E5AA26E5AEC03F0406378DF4B>I<ED7FF80207B57E
021F14F0027F14FC903A01FFC01FFF902703FE00017FD90FF09038007FE0D91FC06E7E49
48EC0FF849C86C7E017E6F7E49150100018349810003188049167F1207F03FC0A2120FA2
7FA37F6D167F19806D7E6E15FF6C6D160002F85C02FE4A5A6C6D5D03C0495A6C02F0130F
6F495A6C02FEEB7FE06D6D495A6D02C390C7FC6DECF7FE6DECFFFC6D15F06D15C07F6D6C
14F0021F806E14FE023F6E7E91B77E4916F00107011F8090260FFC0F8090261FF0038090
267FE00080D9FF806D14804890C7121F48486E14C04848020314E0491400000F7013F048
48151F49030713F8003F82491500007F177F49EE3FFC181F12FF90CA120F1807A31803A3
19F87F127FA26DEE07F0A26C6CEE0FE0A26C6CEE1FC06C6CEE3F806C6CEE7F006D5E6C6C
4B5A6C01C0EC07FC6C01F0EC1FF0D93FFCECFFE090271FFFC00F5B010790B6C7FC010115
FC6D6C14F0020F1480020001F8C8FC3E617ADD4B>I<ED7FF80207B57E021F14E0027F14
F8903A01FFE01FFC4990380003FFD90FFE6D7FD91FF86D6C7E49486E7E49488149486E7E
48160F484981717E4890C8FC48707E5B001F1880A2003F7013C0A2485A19E0A300FF18F0
A283A219F8A719FCA25F127FA4003F5E7FA2001F5EA26C7E6C5EA26C6D5C6C163E6C7F6E
5C6D6C5C6D6CEB03F0D91FFED90FE013F8903A07FFC03FC06D90B55A6D5D6D6C5B021F13
F80201D9C00113F091C8FCA219E0A319C05FA219805F01FC1700487E486C4B5A487F486D
5D4D5A173F604D5A604A14FF6C90C7485B494A90C7FC494A5AD803F0EC1FFC01FC4A5A6C
B4ECFFE06CD9F0075B6DB6C8FC011F5C6D14F8010114C09026003FFCC9FC3E617ADD4B>
I<EA07E0EA1FF8EA3FFCEA7FFEA2B5FCA6EA7FFEA2EA3FFCEA1FF8EA07E0C7FCB3ABEA07
E0EA1FF8EA3FFCEA7FFEA2B5FCA6EA7FFEA2EA3FFCEA1FF8EA07E0103D74BC29>I<18F8
4D7EA34D7EA24D7EA34D7FA34D7FA24D7FA34D7FA305FB7F17F904018017F0A2040380EF
E07FA2DC07C07F84040F814D7EA2041F814D7EA2043E8184047E81047C7FA204FC814C7F
A24B4881840303824C147FA20307824C80A24B488285031F8393C87EA24B83033E81A24B
838503FC834B8192B9FC4A84A34A8403E0C9127F0207844B82A2020F854B82A24ACA8086
4A85023E83A2027E85027C83A24A8586010186861303880107197F496C85D93FFE95B5FC
496C4D800007B500C0040F14F0B600FC0303B712F8A565647BE370>65
D<BA12F8F1FF801AF81AFE747ED8003F01F8C8003F13E001074903077F4B030113FC6D71
6C7E747E747F747F747F747FA2747FA2747FA3757EA8515AA3505BA2505B505B6264083F
5B5090C7FCF2FFFC07035B070F13E0077F5B95260FFFFEC8FC92B812F81AC01AF81AFF1B
E003E0C8000313F807007FF23FFF080F7F7413E0747F747F747F1B7F88757EA2751380A2
1DC087A21DE0A91DC063A21D8063511300A2515A505B505B505B505B083F5B4995B55A6F
030391C7FC013F6D031F13FCBC5A1BC098C8FC1AF897C9FC5B607ADF6A>I<BA12F0F1FF
801AF01AFCF2FF80D8003F01FCC880010749030F13F04B030113FC6D716C7EF21FFF0807
13C0747F08007F757E757E757E757EA2757F757F8987757FA2767EA2891C3F89A2767EA3
1E80A2881EC0A61EE0AE1EC0A51E8064A21E00A3525AA2651C7F651CFF656365515BA251
5B5190C7FC515A515A515A515A505B08075B505B083F90C8FC49943801FFFC6F030F5B01
3F6D92B512E0BC128050C9FC1AF01A8007F0CAFC63607ADF72>68
D<BD12E0A488D8003F01FCC81203010749ED001F4B16036D18001B7F1B1F1B0F881B071B
03A21B01A31B0088A21C7CA607F880A499C7FCA41801A318031807180F181FEF01FF92B7
FCA59238F00001EF001F180F180718031801A31800A2F403E0A3F407C0A396C8FCA21C0F
1D80A41C1FA21D0064A364A264515AA21B031B071B0F1B1FF37FFC49F001FF6F160F013F
6D4BB5FCBDFCA264A35B607ADF66>I<94260FFFC015E04CB500FE1401040F6E6C130304
7F15F00303B700FC1307030F9126001FFE130F4B01F0903901FF801F037F90C8EA7FC091
2601FFFC92381FE03F4A01F0923807F87F020F01C0ED01FC4A90CAEAFEFF4A48177F4A48
834A48834901E08349498349498349854990CBFC4948845C017F1A7F4948193FA2485B48
1B1F5C481B0FA2485B1C07485BA3481B0391CDFCA35A99C8FCA25BA212FFAE127F6D051F
B712F8A47E96C7ECFC006E061F13F0755B6C86A2807EA26C7FA27E807E6C7FA26D7E6D7E
A26D7E6D7F6D7F6D6D5F6D7F6D7F6E6C5F6E6C5F6E6C7E6E01E0EEFE7F02036DED01FC6E
01FE923807F83F6E6C6C6C91381FF01F031F01F091387FE0076F903BFF800FFFC0030303
91B6EA0001DB007F03FC1300040F03F091C7FC040192CAFCDC000F13F0656678E275>71
D<B800C0017FB712E0A5D8003F91C9001FEC8000010701F8040301FCC7FCA26D49705BB3
B292BAFCA503F0C91201B3B3A3496D4C7FA2013F01FF041FEBFF80B800C0017FB712E0A5
63607ADF70>I<B812F0A5D8001FEC8000010301FCC7FCA26D5BB3B3B3B3A8497FA2011F
EBFF80B812F0A52C607BDF36>I<020FB712FEA591C76CEBFE00040F13F8705B82B3B3B3
A97FEA0FF8487E487E487EA2B57EA34C5BA391C75C6C5D495E495C6C4893C7FC01805C6C
6C4A5A6C6C4A5A01F8495BD807FE01075B2701FFE01F13C06C90B65A013F4AC8FC010F14
F8010314C09026003FFCC9FC3F637ADF4D>I<B812F8A5D8003F91CBFC010713FC6D5B5D
B3B3AF1B1FA51B3EA61B7EA31B7C1BFCA31A01A21A03A21A07F20FF81A1F1A3F1A7F1AFF
1903190F496D157F013F6D0207B5FCBC12F0A550607ADF5D>76 D<B600F04FB612F06F61
6F61A3D8003F6D4FECC000010753C7FCDAEFFFF11F7F010365A202E76D183EA202E36D18
7CA302E16D18F8A202E06DEF01F0A36F6CEF03E0A26F6CEF07C0A36F6CEF0F80A26F6CEF
1F00A36F6D163EA26F6D5EA26F6D5EA36F6D4B5AA2706C4B5AA3706C4B5AA2706C4B5AA3
706C4BC7FCA2706D143EA3706D5CA2706D5CA3706D495AA2716C495AA3716C495AA2716C
495AA2716C49C8FCA371EB803EA2716D5AA3716D5AA271EBF1F0A395387FFBE0A272B45A
A3725B497E7290C9FC497E496C517ED97FFF6F5A0003B500E00707EBFFC0B76C6D48021F
B712F0A3725A725A7C607ADF89>I<B600F0043FB612E081A28181D8000F6D0400ECF800
0103071F13C070040790C7FC70705A755A02EF7F70705A02E77F14E38202E17F14E06F7E
836F7F81836F7F6F7F81836F7F8183707F707F8284707F8284707F707F8284717F838571
7F717F8385717F8385717F727F8486727F84727F86727F8486727F857313801BC07313E0
851BF07313F87313FC851BFE7313FF86A2868686A28686A286861B7F497E1B3F496C181F
497ED97FFF180F0003B500E01707B76C1603A21B011B00A263607ADF70>I<EF1FFF0403
B512F8043FECFF8093B712E0030716FC031FD9F00113FF037F90C7001F13C0DBFFF80203
7F020301E0020013F84A0180ED3FFC4A90C96C7EDA3FFC933807FF804A48707F4A48707F
4949707F4949717E4949717E4990CB6C7E49864A844948727F017F874A844948727F4888
A24849727FA24849737EA248884A193F4888A34890CD6C1380A4481DC04986A400FF1DE0
AE6D626C1DC0A56C1D806E61A26C1D00A26E616C64A26E19FF6C646E606C64A26C6D4E5B
6C6D4E5BA26D6C4E5B013F636E606D6D4D90C7FC6D6D4D5A6D6D4D5A6D626D01F804035B
6D6D4C5B6E6C4C5B6E6C4C5B6E01C0037F90C8FC020701F0913801FFFC6E01FC02075B02
0001FF021F13E06FD9F001B55A031F90B7C9FC030716FC030116F0DB003F1580040302F8
CAFCDC001F90CBFC636678E274>I<BA12E019FF1AE01AF81AFED8003F01FCC700016D7E
010749DA001F13E04B03037F6D050013FC747EF21FFF7413807413C0A27413E01CF0861C
F8A21CFC86A21CFEA91CFCA2621CF8A21CF0621CE05013C0A2501380501300F27FFE505A
070313F0071F5B4EB5128092B848C7FC1AF81AE097C8FC19E003F0CCFCB3B1497FA2013F
13FFB812C0A557607ADF66>I<B912F8F0FFE019FCF1FF801AF0D8003F01FCC7001F13FC
01074902007F4B92381FFF806D05077F7313F007007F747E747E878688747FA28886A288
A864A26264A2505B99C8FC6263505A505A07035B4F13C0071F5BDFFFFEC9FC061F5B92B8
12F01A8007FCCAFC19FF1AC003F0C7003F13F0060713FC06017F726C7E737F737F737F85
737FA2737FA3737FA987A81E1C1E3E87A286A21E7E746D137C497F746D13FC013F01FF70
EC01F8B800C0EEE003749038F007F00801EBFC0F7490B512E0093F14C0CE000F14800903
EBFE009838003FF867637ADF6E>82 D<912601FFF0141C021F01FF143C027F02E0137C49
B612F8010703FE13FC011F9039803FFF0190273FF800011381D97FE09038007FE34948EC
1FF74890C8EA07FF4848814848150049167F000F173F485A181F4848160FA2007F17075B
1803A200FF1701A318007FA36D177CA27FA26C7E6D94C7FC7F6C7F14E014F86C13FF6C14
F015FF6C15F86CEDFF806C16F817FF6C17C0013F16F06D826D16FE0103826D83D9003F82
020F82DA007F811507DB007F80040780EE003F05077F1701717F847213808484841AC000
788312F884A384A27EA46C1980A36C4D1300A27F6D4C5AA26D4C5A6D5F6D160F01FE4C5A
6D4C5A02C04B5AD9BFF04B5AD90FFC020390C7FC486CB46CEB0FFE6D01FCEB7FFC48C690
B65A48013F15E00207158048010002FCC8FC48020713E0426678E253>I<001FBD12FCA5
4801F8C79126C000077F02806E49EB007F01FCC86C90C8121F491A0F01E01A03491A01A2
491A001D7E90C9FCA2007E88A4007C88A748F40F80A5CA95C7FCB3B3B34D7F94B57E0407
14F80203B912F0A5615F7BDE6C>I<B800C0023FB612E0A5D8003F91CAECF800010701F8
051F13C0090790C7FC6D49715A755AA2755AB3B3B3A41B016D6281A36D1903646F170702
7F61A26E6C170F515A141F6E6C4DC8FC70167E6E18FE6E6D5E6E6DED03F86E6D15076F6C
4B5A6F6C4B5A6FB4ED7FC06F6D4948C9FC030301F0EB07FE6F01FEEB7FFC6F6CB612F004
1F15C0040392CAFCDC007F13FC050713C063637ADF70>I<B700FC91B700FC020FB612C0
A5C64AC94AC9ECF800013F01F0043F01F0041F13E06D497049040713806D4970497090C7
FC7B5A6F725F6D846A6F846D7261A26F7216036D68A26F4C6D16076D68A26F4C6D160F02
7F67A26E6C4C6D4CC8FC1B3FA26E6D033F6E153EF23E1FA26E6D4B6C6D5DA36E6D4B6C6D
5DA2701B016E4C486C6D5DA2701B036E4C486C6D5DA27002076F14076E4D6C5FA270020F
6F140F037F4C017F5EA270021F6F141F6F93C76C93C9FCA27149705B6F033E6E153EA271
017E70137E6F037C6E157CA27101FC7013FC6F4B6E5DA2DDF001EFF0016F4B6E5DA2DDF8
03EFF8036F4B6E5DA2DDFC07EFFC076F4B6E5DA2DDFE0FEFFE0F047F4A037F5CA2DDFF1F
EFFF1F7091C96C91CAFCA206BF18BF7001BE7013BEA206FE18FE7049705BA37049705BA3
7049705BA37049705BA37049705BA2057F614E177FA2053F96CBFC95CB7E051E181E9263
7DDF99>87 D<B80407B612E0A5C66C02C0DC007FEBFC00010F91CB6C13C06D497290C7FC
6DF20FFC6D6D616D636E6D60656E6D4D5A6E7F52C8FC6E6D177E6E7F646E6D4C5A826E4E
5A6E6D4C5A836F4D5A6F6D4B5A836F4DC9FC6F6D157E836F5F6F7F714A5A6F4C5A6F7F72
495A704B5A707F72495A704BCAFC707F72137E705D707F72485A704A5A7013FFF187E071
EB8FC07113CFF1FF807191CBFC836183715B6183B3AD5F85051F13FF047FB712E0A56B60
7EDF70>89 D<91383FFF800107B512F8013F14FF4915C048B77E48D9800313F84890C76C
7E6EEB1FFE48ED07FF6E6D7F707F848284177F6C5B6C90C86C7E6C5AEA007890C9FCA617
FF030FB5FC4AB6FC141F91B7FC0103ECE03F010FEBF800013F13C0D9FFFEC7FC4813F848
5B4813C0485B4890C8FC485A5B127F5BF103E012FF5BA3177FA217FF7F007F5D6D5C003F
5D6D913A0FDFFC07C06C6C6C90393F8FFE0F6C01E0903AFF0FFF1F806C9027F807FE0713
FF6C90B500FC1500C6DBF0035B013FDAC00113F8010F91C75B010001F0EC3F8043407ABE
4B>97 D<ED3FFF0203B512F8021F14FF027F158049B712E049D9F00013F0490180EB3FF8
D91FFEC7127F494815FCD97FF014FF495AA2485B485B5A91C8EA7FF848EE3FF04848ED1F
E0EF078094C7FC485AA2127FA35B12FFAC127F7FA3123F7FA2001F171F7F7E6E153F6C17
3E6C6D157E6E157C6C17FC6C6DEC01F8D97FFCEC03F06D6CEC07E06D6C6CEB1FC06D01E0
EB7F8001039039FC03FF006D90B55A6D6C5C021F14F0020314809126003FFCC7FC38407B
BE42>99 D<197C943803FFFC94B5FCA51701EF007F183F181FB3A8ED3FF80203B5128002
1F14F0027F14FC49B612FE499039F803FF9F010F9039C0007FDF4990C7EA1FFFD93FFC14
07494880D9FFE0140048177F485B4A153F4890C9121F5A5B121FA2485AA3127FA25BA212
FFAC127FA27FA2123FA26C7EA2120F6D163F7E6E157F6C17FF6C6D5C6C6D5C6D6C5C6D6C
021F7FD91FFE91383FDFFF6D6C6CD9FF1F13C06D9026F00FFEECFF806D90B512FC010015
F0023F14C002071400020001F002FCC7FC49637BE153>I<ED7FF80207B5FC021F14E002
7F14F849B612FE01079038E03FFF49D900077FD91FFC01017F49486D7F49486E7E494814
3F48496E7E485B717E4890C8FC48707E5B001F8383485AA3007F701380A25BA2BAFCA501
F8CBFCA7127F7FA3123FA26C7EF00F80120F7F6C171F6E16006C6D5D6C177E806C6D5D6D
6C4A5AD93FFE14076D6C4A5A010701C0EB3FE06D9039FC03FF80010090B6C7FC023F14FC
020F14F0020114C09126003FFCC8FC39407CBE42>I<4BB47E030F13E0037F13F84AB57E
4A80020FEB83FF91381FFC074A48481380EC7FF0ECFFE015C05B49138070130049496C5A
705A705A4992C7FC5CB3A2B712FEA526000FFEC9FCB3B3AD497E017F13C0007FB612F0A5
31637CE22E>I<F001FE95380FFF80912601FFC0013F13C0021F01FC90B512E0027FEBFF
0149B600C3EB1FF00107EDF7F8490180EBFFE090271FFC001FEB803F494890390FFE001F
D97FE0D903FF14E001FFEE800F48496D9038C007804A6D91C7FC4883A2488391C8127F48
83AA6C5F6E14FF6C5FA26C5F6E5B6C6D495B017F93C8FCD93FF8EB0FFE6E495A9139FF80
FFF84990B55A01F915C0D9F87F91C9FC0001011F13FCD9F00113C091CCFCA21203A27FA2
7F120113FF14C091B612F06CEEFFC018F86D16FE6D707E19E06D83498390B97E48840007
0180C7121F4848C97FD81FF8161F4848040713804982007F83497013C012FF49177FA56D
17FF007F19806D5E003F19006D5ED81FFCEE0FFE6C6C4C5A6C6C6CED7FF86C01E04A485A
C601FC020F13C090277FFFE001B55A011F90B648C7FC010716F8010016C0021F4AC8FCDA
007F1380445D7CBF4B>I<147C3803FFFCB5FCA51201EA007F133F131FB3A8933807FF80
043F13F893B512FE03036E7E030F8192261FF80F7F92263FC0017F4BC7127F03FC81DAFD
F8143FDAFFF06E7E5D5D4B81180F92C8FCA25CA35CB3B1496C4B7E90B56C027F13C0B7D8
807FB612C0A54A627BE153>I<133FEBFFC0487F487FA2487FA66C5BA26C5B6C5B013FC7
FC90C8FCB114F8EA07FFB5FCA51201EA007FA2133FB3B3A9497E48487EB612FCA51E5F7A
DE2A>I<14F8EA07FFB5FCA51203EA007FA2133FB3B3B3B3A9497E48B5FCB612FEA51F62
7AE12A>108 D<02F8902607FF80913803FFC0D803FF023F01F8021F13FCB591B500FE02
7F13FF03036E6C48B612C0030FDBC0078192261FF80F9027E00FFC077F92263FC0019027
F01FE0007F00014AC7007FD93F80133FD8007F01FCDBF87EC77F90263FF9F8023F49141F
90261FFBF091261FFDF86E7E4B5EDAFFC0EDFFE04B4C81728292C85CA24A94C8FCA34A5E
B3B1496C4B6C4B7F90B56C027F01C0023F13E0B7D8807FB6D8C03FB612E0A5733E7BBD7C
>I<02F8903807FF80D803FF023F13F8B591B512FE03036E7E030F8192261FF80F7F9226
3FC0017F00014AC7127FD8007F01FC8190263FF9F8143F90261FFBF06E7E5DECFFC04B81
180F92C8FCA25CA35CB3B1496C4B7E90B56C027F13C0B7D8807FB612C0A54A3E7BBD53>
I<ED1FFE4AB512E0020F14FC023F14FF91B712C049D9F0037F0107903980007FF84948C7
EA1FFCD91FF8EC07FE49486E7E49486E7F49486E7F48496F7E4890C96C7EA24848707E00
0F84A24848707EA2003F84A24982007F1980A400FF19C0AB007F1980A36D5E003F1900A3
001F606D161F000F606D163F6C606C6D4B5A6C606E15FF6C6D4A5B6D6C4A5B6D6C4A90C7
FCD91FFEEC1FFE902607FF80EB7FF86D9039F003FFF0010090B612C0023F92C8FC020F14
FC020114E09126001FFEC9FC42407CBE4B>I<027C903807FF802603FFFC017F13F8B501
03B512FE030F6E7E033F15E092267FF80F7F9226FF80017F0001D9FFFEC76C7E6C6C01F8
6E7E6D01E0EC0FFF6D496E7F4B8292C86C7F4A6F7F4A8186197F86193F86A2737EA41B80
85AB4F1300A44F5AA34F5AA24F5A804E5B6E5F606F4A5B6F4A5B6F4A90C7FC03F84A5ADA
FDFCECFFFCDAFCFF01035B92267FE01F13E06FB65A030F92C8FC030314FC030014E0DC0F
FEC9FC93CBFCB3497E90B57EB77EA549597CBD53>I<02F8EB3FC0D803FF903801FFF0B5
010713FC4B7F4B7FED3FE7DB7F0F1380000114FC39007FF9F8013F13F090381FFBE0A291
26FFC0071300705A4B6C5AEE007092C9FCA35CA45CB3AE497E90B57EB712E0A5313E7CBD
3A>114 D<DA7FFC1370010FB5EA80F0013F14E190B612F74815FF0007EBC00F390FFC00
01D81FF0EB007F49141F4848140F5B007F150790C8FC481503A316017FA27F13F06D91C7
FC6CB4FC14F06CEBFF8015FE6CECFFC06C15F06C15FC6C15FF6C16806C6C15C0011F15E0
010715F0010015F81407DA003F13FC030113FEED007F161F0078ED0FFF00F881826C81A2
827EA36C16FE7F16016D15FC6D14036D15F86D14076DEC1FF001FFEC7FE0903A7FF007FF
C0486CB61280486CECFE00D8F8075CD8F00114E027E0003FFEC7FC30407BBE3B>I<143E
A6147EA414FEA31301A21303A21307130FA2131F133F13FF5A120FB812E0A526000FFEC8
FCB3AD177CAC17FC6D6C14F8A216016D018013F016036D01C013E0EDE00F6D9038F83FC0
6EB512806E1400020F5B020313F89138007FE02E577DD53A>I<027C163E2603FFFC9138
01FFFEB5157FA500011600D8007F163F013F161F011F160FB3B0181FA3183FA2187F130F
18FF6E5C0107ED03EF05077F6D6CDA1FCF7F03C0D93F8F13E06D9027F801FF0FEBFFC06D
90B512FE023F14F86E14F0020314809127007FFC0049C7FC4A3F7BBD53>I<B600FC91B6
FCA500010280021F13F06C6C48C8000713806D481700011F705A6E5E61010F5F806D5F6F
14076D5FA26F140F6D5F6F141F6D94C7FC6F5C027F153EA26F147E023F157C6F14FC021F
5D6F1301020F5DA26F13036E5DEE80076E5DA2EEC00F6E5DEEE01F6E92C8FC705A037F13
3EA2EEF87E033F137CEEFCFC031F5B16FF6F5BA36F5BA26F5BA26F5BA36F90C9FCA2167E
163C483E7DBC4F>I<B600FC91B6FCA500010280021F13F06C6C48C800071380013F1800
6D486F5A6E5E010F5F61806D5F6F14076D5F6F140F6D5FA26F141F6D94C7FC6F5C027F15
3E6F147E023F157CA26F14FC021F5D6F1301020F5D6F13036E5DA2EE80076E5DEEC00F6E
5DEEE01F6E92C8FCA2705A037F133EEEF87E033F137CEEFCFC031F5BA216FF6F5BA26F5B
A26F5BA36F5BA26F90C9FCA2167EA3167C16FC5E15015E15035EA21507D80F805CD83FE0
130F486C5C151F486C91CAFC5D157E157C15FC9038F003F8007F495A49485A393FC07FC0
6CB55A6C91CBFC6C13FC000113F038007FC048597DBC4F>121 D<BC12C0A54A0580A74B>
123 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fh cmr9 9 63
/Fh 63 124 df<EF1FFF0407B512E0043F14F84BB67E030715FF031FD9F0077F037F90C7
7FDBFFF8EC1FE04A01E0140F0207494A7E4A90C8127F4A484B7E4A485C4A5AA24A5A4949
4A7F725B5B5D725B49715A4B6F5A070FC8FC96C9FCB2F13FFC0503B5FCBBFCA6D8000701
80C71201F0007FA2193FB3B3AF496D4B7E013F01F04AB57E007FB6D8F803B712C0A65270
7DEF5A>12 D<D803F0EC07E0D80FFCEC1FF8486C4A7E486C4A7E486D90B5FC6E1580B55B
A202E015C0A302F015E06C80A26C816C81D80FFDEC1FFBD803F1EC07E3D80001EC0003A5
010315074A15C0A30107150FA24A1580A2010F151F4A1500011F5D91C8123E49157E013E
157C017E15FC494A5AA248484A5A48484A5A0007150F48484A5A48484A5A48484AC7FC90
C8127E001E153C000C151833317BED51>34 D<EA03F0EA0FFC487E487E48138014C0B5FC
A214E0A314F07EA27E7EEA0FFDEA03F1EA0001A5130314E0A4130714C0A2130F1480131F
14005B133E137E5BA2485A485A1207485A485A485A90C7FC121E120C143173ED2D>39
D<167C16FC1501ED03F0ED07E0150FED1FC0ED3F80ED7F0015FE4A5A4A5A14074A5A5D14
1F4A5A4A5AA24AC7FC5B5C13035C13075C130F495AA2495AA25C137FA2495AA25A91C8FC
A25A5BA21207A25B120FA35B121FA45B123FA5485AA812FFA45BB17FA4127FA86C7EA512
1F7FA4120F7FA312077FA21203A27F7EA2807EA26D7EA2133F80A26D7EA26D7E13078013
03801301807F6E7EA26E7E6E7E140F816E7E14036E7E6E7E157FED3F80ED1FC0ED0FE015
07ED03F0ED01FC1500167C269F71F63F>I<127812FC127E7E6C7E7F6C7E6C7E6C7E6C7E
6C7E137F806D7E131F806D7E6D7EA26D7E801301807F81147F816E7EA26E7EA2140F81A2
6E7EA2811403A28180A21680A28016C0A3157F16E0A4153F16F0A5ED1FF8A816FCA4150F
B1151FA416F8A8ED3FF0A516E0157FA416C015FFA316805CA21600A25C5DA214075DA24A
5AA25D141FA24A5AA24A5A5D14FF92C7FC5B5C13035C495AA2495A495A5C133F495A91C8
FC13FE485A485A485A485A485A5B48C9FC127E5A1278269F77F63F>I<EA03F0EA0FFC48
7E487E48138014C0B5FCA214E0A314F07EA27E7EEA0FFDEA03F1EA0001A5130314E0A413
0714C0A2130F1480131F14005B133E137E5BA2485A485A1207485A485A485A90C7FC121E
120C143173912D>44 D<EA03F0EA0FFC487E487E481380A2B512C0A66C1380A26C13006C
5A6C5AEA03F0121273912D>46 D<ED0FFF92B512F0020314FC020F14FF023F15C09126FF
FC0313F0499039E0007FF8490180EB1FFC4948C7EA07FE49486E7E49486E7F49486E7F49
486F7EA249486F7EA248496F7E4884A291C9120F4884A248844982A2001F1980A3003F19
C0A34982A2007F19E0A800FF19F0B3A9007F19E0A76C6C4C13C0A5001F1980A46C6C4C13
00A26C60A26E151F6C60A26C6D4B5AA26C6D4B5A017F5F6E15FF6D6C4A5B6D6C4A5B6D6C
4A90C7FC6D6C4A5A6D6D495A6D01E0EB7FF86D9039FC03FFF0023FB612C0020F92C8FC02
0314FC020014F0030F90C9FC446C7AE851>48 D<ED07C0150F151F153F15FF1403140F14
3F49B5FC133FB7FCA214F714C7EBFE0713C0C7FCB3B3B3B3A84A7F4A7F91B512FE007FB8
12FCA6366972E851>I<EDFFF8020FEBFF80027F14F049B612FE496F7E010F8290261FFE
0114F090273FF0001F7FD97F8001077F49C700017FD801FC6E7F48486F138048486F13C0
48486F13E08348486F13F04917F8003F8290C914FC488213F001FC17FE6D81B5FCA26E16
FFA284A56C90C9FCA26C5A6C4893B5FCEA07F0CB13FEA35F19FCA24D13F8A24D13F0A219
E04D13C05F19804D130060177F4D5A604C5B4C5B4C5B604C90C7FC4C5AEE3FF84C5A4C5A
5F4B5B4B90C8FC4B5AED0FF84B5A4B5A4B5A4B5A4A90C9FC4A5A5D4A48151F4A5A4A5A4A
48153E4AC9FC14FE495A495A495A4948167E4948167C5C49CA12FC137E49160348B9FC5A
4818F85A5A5A5ABAFCA219F0A4406978E851>I<ED7FFE0207B512E0023F14FC91B77E01
038249D9E00F13F090270FFC00017FD93FF06D13FED97FC0EC3FFF49C86C7F01FC6F7F48
488348488101FE83486C6C806E8280486D82A283A2805CA36C5E6C5B6C495E6C5B013CC8
FC90C9FC4D5BA2615F614D5BA24D90C7FC604D5A4D5A4C5B4C5B040F5B043F90C8FC9238
0FFFFE020FB512F817E094C9FC17E017FC91C7381FFF80040313E004007FEF7FFCEF1FFE
84717F717F85717F85717FA2717F85A31A8084A21AC0A2EA01E0EA0FFC487E487E487FA2
B57EA31A8095B5FCA21A005C7E91C8485B5BD83FF85F01804B5B6C7E6D4B5B6C6C4B5B6C
6C5FD803FE4B5B6D6C027F90C7FCC601E04A5AD97FFC01035B90273FFFC01F5B6D90B612
E001075E010193C8FC6D6C14FC020F14E09126007FFCC9FC426C79E851>I<183E187F60
A25F5FA25F5FA25F5FA25F94B5FCA25E5E5E17EFEE0FCFEE1F8FA2EE3F0F167EA216FCED
01F8A2ED03F0ED07E0A2ED0FC0ED1F80A2ED3F00157EA25D4A5AA24A5A4A5AA24A5A4A5A
A24AC7FC147EA25C495AA2495A495A130F5C495A49C8FCA2137E5BA2485A485AA2485A48
5AA2485A48C9FCA2127E5ABCFCA6CA001F90C7FCB24D7FA24CB512F0031FB8FCA6486B7C
EA51>I<01E0EE01C001F8160F01FF167F02F0EC07FFDAFFC090B5FC92B7128019006060
18F0606095C7FC5F17F817E094C8FC01FD14F8D9FC0790C9FC91CBFCB3A2ED1FFE92B512
E0020714F8021F14FE027F6E7E9126FFF0077F01FDD980017FD9FFFCC76C7E02F0EC3FFC
4A6E7E4A140F4A6E7E91C81480496F13C05B496F13E019F090C9FC7113F8A219FCA3F07F
FEA519FFA4487EEA0FF0487E487E487EB5FCA319FEA318FF5B4917FC6C5A4917F801805D
007EC914F07E4D13E06C7E4D13C06C6C17806D5D6C6C4B13006C6C4B5A01FE4B5A6C6C4B
5A6C01C001035BD97FF0010F5B6DB4017F1380010F90B6C7FC6D15FC010115F06D6C14C0
021F49C8FC020113E0406C78E851>I<EE0FFF93B512E0030714F8031F14FE037F809127
01FFFC037F4A9039C0003FC04A90C7EA0FE0DA1FFC6E7E4A4814034A4881DAFFC0141F49
49147F494C7E4990C8FC49485C5C131F495AA2495A01FF6F5B5C48715A4AED1FC04894C8
FCA2485BA25AA291CCFC5AA35AA2923803FF80031F13F84848017F13FE92B67E4A15E091
2607FC037F913A0FE0007FF84A48EB1FFC00FF91C76C7E023E6E7E4A6E7F02786E7F02F8
826D486E7F187F4A82854A153F855C85A28491C91480A54918C0A2127FA7123FA27FA37E
1A80A27EA21A006C6D5DA2617E6E5E6C177F616C6D4B5AA26D6C4A5B6D6C5E011F4B5B6E
4A90C7FC6DB44A5A6D6D495A6D01E0EB7FF86D9039FC07FFF06D6CB65A6E1580020F92C8
FC020314FC020014E0030F90C9FC426C79E851>I<EA07C0120F7F7FEBFFC091B912F8A4
5AA21AF01AE01AC0A21A804819006101C0C9120190CA5B4E5A003E4D5AA2007E4D5A007C
4D5A183F614EC7FC18FE1701485F4D5A4D5ACA120F604D5A4D5AA24DC8FC17FE16015F4C
5A16075F4C5AA24C5A163F5F167F94C9FC5EA24B5AA215035E1507A24B5AA2151FA34B5A
A2157FA315FF5EA25CA35CA44A5BA55CA75CAD6E5BA26E90CAFC6E5AEC00F8456E77EA51
>I<ED1FFE4AB512F0020F14FC023FECFF804A81902701FFF00313F04990C76C7ED907FC
EC1FFCD90FF0EC07FED91FC0EC01FF49486E7F49C96C7E01FE707E49161F000184484816
0F854916071207851803120FA37FA27F18076D5F7F806E150F6C01F05E6E151F02FE4B5A
6C6D5E03C0147F6C02F04A5A6F4990C7FC6C02FE495A6F495A6D9138C00FF86D9138E03F
F06D9138F87FC06D91B55A6D93C8FC6D15FC6D15F06D6C806E80020F14FF6E814A15E04A
15F8027F81902601FFCF8049010780902607FE018190261FF800814948013F804948010F
8049486D80484913014890C88049033F7F484881484803077F001F16014981003F053F13
8049828448487013C084A200FF835B84A3197FA31A80A27F127FF1FF007F123F6D4C5A12
1F6D4C5A6C6C4C5A6D160F6C6C4C5A6C6D4B5A6C6D4B5A6C01F04A485AD97FFC020790C7
FC6DB4EC3FFE010F9039F003FFFC6D90B612F0010116C06D6C5D021F02FCC8FC020314F0
9126003FFEC9FC426C79E851>I<ED1FFE4AB512E0020714F8021F14FE027F6E7E902701
FFF8077F49D9C0007F4990C7EA3FF049486E7E49486E7E49486E7E49486E7E4948824882
4849828348498248177F91C97F5A8548173F855B127F85A300FF84A384A21A80A81AC0A2
007F5FA5003F5F7F7EA295B5FC7E6C6D5CA26C5E6C7F6EEC07DF6C179F6D6C140F6D6CEC
1F1F6D6C143E6D6C02FC1480903907FF80016D9038F00FF86D90B512E06D6C14C0021F14
800207D9FE0014009126007FF05B92C8FCA261A44E5AA261A218FF6113FE2603FF804A5B
487F61486D4A5BA24D90C7FCA24D5A4D5A4A5D4D5A6C49147F49C8485A01F04A5B6C6C02
075BD801FE021F90C8FC6D6CEB7FFC6C9039F803FFF86DB65A6D15C0010F92C9FC010314
FC010014F0020F90CAFC426C79E851>I<007FBF12C0C012E0A5003F1E80D3FCB3A9003F
BF1280C012E0A56C1EC06B2977BB7E>61 D<943803FFF8057FEBFFC00403B612F8041F15
FF047F16C0922803FFFE000F13F84B01C09038007FFCDB1FFEC8EA0FFFDB7FF0030113C0
DBFFC06F6C7E4A90CAEA1FF0DA07FCEF07FCDA0FF0EF01FE4A48717E4A48727E4ACCEA1F
C002FE737E4948737E4948737E4948737E4948737E4A1A7E4948DBFFE08149C8000F01FC
6F7E057F13FF017E4AB600C06E7E49020703F06E7E4C9038C07FF8484891281FFE0007FC
6E7E49DA7FF8D901FE140100034B48D9007F814949496E6C130000074A496E6C80494949
DA07E0147C000F93C86D147E4949480303153E001F021F932601FFFC133F4B488190C749
8548027F057F15805E003E02FF053F140FA2007E49491AC0007C1D07A24A5BA300FC1EE0
48491B035EAC826C7F127CA36E7F1FC0127E003E6D6D1907A2003F027F177F826C023F17
FF6D6E1A806F6C4B150F000F020F5E6D6D6C5D00077019006D6D6D021F5D00036E6D9126
3F9FFE131E6D6D6DDA7F1F143E00016F6CD901FE5D6DDA1FFE902707FC0FFF13FC6C6C91
290FFFC07FF807EB83F87090B5486CEBFFF0017E0201DBC0015C6D6E6C91C76C5B050F01
FC6E5B6D6C020001E0DA07FCC7FC6D6C92CDFC806D7E6D7E6D7E6D7E147FEC3FC06E6CF2
7FE06E6CF103FFDA07FC191FDA01FF96B512806E01C00507EBFC00DB7FF0057F13F0DB1F
FE0407B51280922607FFC092B500FCC7FC6F01FE91B612E0DB007FB9C8FC041F17F00403
4CC9FCDC007F15C005030280CAFC6B7277EF7E>64 D<F007C04E7E4E7EA34E7EA34E7EA3
4E7EA34D7FA24D80A34D80A34D8018CFA2051F801887A2053F801803A2057F80EF7E0105
FE8017FC840401814D7FA20403824D7FA20407824D7FA2040F824D7FA2041F824D7F043F
8294C77EA24C82047E80A204FE824C80A20301834C81A20303844C811507884C81030F84
4C81A2031F844C8193B9FC4B84A34B84A2037EC9120103FE844B820201855D870203864B
83A20207864B83A2020F864B83A2021F864B83A2023F8692CB7E4A86A24A8489497F5B01
0F01E085013F6D4D800003B500FE051F14F0B700E0031FB712FEA66F717BF07A>I<BB12
C01AFEF2FFC01BF81BFE757ED8000F91C8000180010149DB003F13F04B040F7F6D06037F
747F747F757F757F757F757FA2757FA2757FA38789A8515BA365636563515B6563515B98
B5C7FC505B5013F8080F5B083F5B97B51280070749C8FC92B912F81BC050C9FCF2FFF01B
FE03FCC800016D7EDF000F13E0080313F808007F75B4FC757F757F757F757F757F89757F
8789881E80A27613C0A31EE0AA1EC064A21E8099B5FC1E00636563515B515B63515B515B
50B55A49060791C7FC6F041F5B010F6D93B55ABD12F01CC099C8FC1BFC1BE008FCC9FC63
6C7AEB73>I<DEFFFEED01C0051FD9FFE014034CB600FC1407040703FF140F043F16C093
B800F0131F0303DAF8006D133F030F91C7D80FFE137F4B01F8EC03FF037F01C00200EB80
FF92B5C9EA3FC1020301FCEE1FE14A49EE07F34A01E070B5FC4A49824A90CBFC4A48844A
4884494984495B4986494984495B4B845B4990CC7EA24948855A4A1A7F5A5C481C3F5C5A
1D1FA2485BA3481C0F5CA35A9AC7FCA25CA2B5FCB07EA280A37EF507C0A2807EA36C7F1D
0F1E807E807E6E1A1F6C1D00806C646D6C1A3E1D7E6D6D197C6D1BFC6F616D6D18016D6D
4E5A7F6D6D4E5A6D6D4E5A6E6C181F6E6C4E5A6E01C04DC7FC6E6D17FE6E01F84C5A6E6D
EE07F8020001FFEE1FF06F01C04B5A031F01F8913801FF806F01FF020790C8FC030302F8
EBFFFE030091B612F8043F16E00407168004014BC9FCDC001F14F0050049CAFC627277EE
75>I<BE12F0A589D8000F0280C81207010191CA123F4B17076D1901F3007F1C3F1C1F1C
0F767E1C03A21C01A21C00A31D7C1D7EA31D3EA5F101F01D3F89A49AC7FCA21903A41907
190FA2193F197FF007FF92B8FCA64BC71207F0007F193F190FA219071903A419011EF8A3
F501F0A496C9FC1D031EE0A41D07A21EC01D0FA31D1FA21E801D3FA21D7F1DFFA2521300
6464641C3F99B5FC4907035B6F171F010F6E0307B5FCBEFCA365A3656C7BEB6F>69
D<B800FE91B812FEA6D8000F02E0C9000FECE000010191CA000191C7FCA26D49715BB3B3
A492BBFCA64BCBFCB3B3A8496D4D7FA2010F02E0040F14E0B800FE91B812FEA66F6C7BEB
7A>72 D<B91280A6D8000702F0C7FC01001480A26E90C8FCB3B3B3B3B291B57EA2010714
F0B91280A6316C7BEB3B>I<020FB812F0A691C7000FECE000040114807091C7FC83B3B3
B3B2EA03F0EA0FFCEA3FFFA2487FA2B57EA34D5AA34A5D5E6C90C7FC60D83FFC4A5B01F0
5CD81FC05E6D4A5B6C6C4A5B6C6C4A90C8FCD803FE4A5A6C6C6C48485A6CD9F8075B013F
B612E06D158001074AC9FC010014F0020F90CAFC446F79EB54>I<B912E0A6D8000F02F0
CCFC0101148093CDFC6D5BB3B3B3A3F40F80A5F41F00A764A41C7EA31CFEA31B01A21B03
1B07515AA21B1F1B3F1BFF621A0749181F6F93B5FC010F6E141FBDFC64A5596C7BEB66>
76 D<B600FE98B7FC6F62A27061A27061D8000FF7F00001011F8002FB6DF10FBF01009C
C7FC02F96DF11F3FA302F86D193EA26F6C197CA36F6C19F8A26F6CF001F0A36F6DEF03E0
A26F6DEF07C0A36F6DEF0F80A26F6DEF1F00A36F6D173EA3706C5FA2706C5FA3706C4C5A
A2706D4B5AA3706D4B5AA2706D4B5AA3706D4BC7FCA2706D153EA3716C5DA2716C5DA371
6C4A5AA3716D495AA2716D495AA3716D495AA2716D49C8FCA3716D133EA2726C5BA3726C
5BA2726C485AA372EB83E0A272EBC7C0A372EBEF80A27201FFC9FCA3725BA2497E496C70
5AA290260FFF806F484C7F013F13E048B500FC0803B512F0B700F86E48023FB8FCA2735A
A3735A886C7AEB95>I<B600FE053FB612FE8182A28282D80003DF007F140001006E050F
13F870050313E07005001380A202FB6D72C7FC02F96D183E14F8836F7F6F7FA26F7F6F7F
81836F7F6F7FA26F80707F8284707F707FA2707F707F82847080717FA2717F717F838571
7F717FA2717F71808486727F8486727F727FA2727F727F8487737F737FA2737F737F8587
737F737FA27314807413C0861CE07413F07413F8A27413FC7413FE861CFF7414BE7513FE
A2878787A28787A287871C7FA21C3F496C191F497E1C0F90260FFF801807013F01E01803
48B512FCB700F817011C00A21D7E1D3EA26F6C7BEB7A>I<BB7E1AFCF2FF801BF01BFC1B
FFD8000F0280C7000714C0010191C96C7F4B040F7F6D060313FC747F746C7E7513807513
C0871DE07513F0A27513F81DFCA37513FEA31DFFAA1DFEA35113FCA21DF8A25113F0A251
13E01DC051138063511300973801FFFC505B080F5B087F13C00707B55A92B948C7FC1BF8
1BE098C8FC1AF04BCDFCB3B3A4497FA2010F14E0B812FEA6606C7BEB6F>80
D<BA12E0F1FF801AF81AFF1BC01BF0D8000F0280C76C13FC010191C8000313FF4BDB007F
13C06D061F7F08077F747F080013FE757EA2757F757F89A2757FA28987A289A965A26365
A2515B65A2515B5190C9FC515A505B505B505B081F13C0087F5B962603FFFECAFC077F13
F892B912E098CBFC1AF8A21AFE4BC700016D7EDE001F13E0070713F807017F737F747E74
7F747F868886888688A28688A588A788A777EB07C0A386A28975150F2080496D717F1F1F
010F02E070ED3F00B800FE6F7F756D137E756D13FE759038FF03FC75ECFFF80A3F5CCF00
0F5C0A0114809926000FFEC7FC726F7BEB78>82 D<DB7FFC15E00207B500C01301021F02
F8130391B713074916800107EEE00F49D9E007EBF01F4990C7EA7FFCD93FF891380FFE3F
4948913803FF7FD9FFC0020013FF4849814890C9121F48488284484882484882A2484882
197FA24848173FA2191FA212FF190FA36D1707A46D1703A27F6C7EA26D94C7FC806C7F14
F014FC6C13FF15E06C14FE6CECFFE016FF6C16F06C16FF6C17E06D16F86D16FE6D826D17
C06D830101836D83023F82020782DA007F8103071680ED007F040715C0DC007F14E01707
050014F0183F7213F81807847213FCA284197F1AFE0078183F12F8191FA4190F7EA56C19
FCA27E191F6D18F8A26DEF3FF0A27F6DEF7FE06D18C06D17FF6D4C13806D4C130002C05D
02F04B5AD9DFFC4B5AD98FFFED7FF8010301F049485A6D9026FF800F13C0486C6C90B65A
48011F93C7FC020715FC48010115F048D9001F148048020001FCC8FC477277EE5A>I<00
1FBE12F8A64801FCC7001F01FCC7003F13FC02C06E49140391C86C49140001FC1B3F01F0
1B0F491B07491B03A2491B01A290C91800A3007E1D7EA5007C1D3EA7481D1FA6CA1900B3
B3B3A74D7F4D7F4CB612C00203BA12E0A6686B7AEA75>I<B800FE037FB612FEA6D8000F
02E0CA1500010191CB001F13F80A0713E06D4906011380A27690C7FC1D7EB3B3B3AC027F
1AFE6581A21C016E62A26E6D170365A26E6D1707525A806E6D4D5A826E4F5A6E6D4DC8FC
705F6F6C4C5A033F4D5A6F6C6C4B5A6F6DED1FF06F6D4B5A6F01F8EDFFC003006D02035B
70B46C011F90C9FC041F9039F801FFFC7090B65A040316E004001680051F4ACAFC050314
F0DD001F90CBFC6F6F7BEB7A>I<B800C00107B700FE0203B7FCA6C66C02C0C800034AC9
001F14E0010F49CA6C01F00403EBFE006D49714904005B4B4FEF7FF06D73735A6F795A6D
877562816D7595C7FC876F676E74173EA2826E4E6D5FA2826E4E6D5FA36E6D4C6D4C5AF3
3E7FA26E6D047E6E4B5AF37C3FA26E6D04FC6E4B5A517EA27003016F150F6E4E6C60A270
03036F151F6E4E6C95C8FCA270735D6F4C486C173EA2711C7E6F4C486C6D157CA2711CFC
6F4CC76D5DA2711B016F043E6E6C5DA2711B036F047E705C087C80711B076F04FC705C50
80711B0F6F0301715C5080711B1F6F03037191C9FC5080716370020771133E508006801A
7E70020F71137C508006C01AFC70021F715B97C9FC06E01901704A05FF5B073E8206F019
0370027EF083E0077C8206F819877002FCF0C7C04F8206FC19CF7001FDF1EF804F8206FF
19FF7099CAFC4F82A271624F82A271624F82A2716296CBFCA271624E187FA20507624E18
3FA20503624E181FA20501624E180FA06F7DEBA7>87 D<B6FCA748C7FCB3B3B3B3B3B3B3
B3B6FCA7189F6FF62D>91 D<01031506496C140F496CEC1F80011F153F4948EC7F0049C8
12FE01FE4A5A495D48484A5A48484A5AA248484A5A495D000F151F4992C7FC001F5D90C8
123E48157E003E157CA2007E15FCA2007C5DA300FC1401485DA501FCECF1F8D8FBFFECF7
FEB5008090B5FC02C0158002E015C0A202F015E06C80A36C81A24A15C06C816C496D1380
6C496D13006C90C76C5AD800FCEC01F8333168ED51>I<B6FCA7C7127FB3B3B3B3B3B3B3
B3B6FCA7189F7DF62D>I<913807FFF091B6FC010715E0011F15F84915FE903A7FF8007F
FFD9FF80010F7F48030313E0486D6D7F6E6D6C7E487F717E717E717EA285836C5B6C4982
6C4980013EC8FC90C9FCA84CB5FC4BB6FC153F0203B7FC141F027FEBF8030103B5128001
0FEBF8004913E0017F90C7FC495A4813F8485B4813C05A485B91C8FC485AA24848F00F80
A3485AA35FA35F7F007F5E5F7F6C6C037C9038E01F006C5E6ED903F0EBF03E6C01E0903A
07E07FFCFE6C01F8D91FC0EBFFFC00019028FF01FF803F5B6C91B5486C5B013F02FC6D5B
010F4A6D1380010302C0D901FCC7FC9026001FFECBFC49497AC651>97
D<143F0003B5FCB6FCA6C6FC133F7FA27FB3AAEF7FF80407B57E043F14E093B612F80303
15FE030F9039007FFF80DB1FF8010F7FDB3FC001037F4BC87F03FE6F7E03F86F7E4B6F7E
4B6F7E4B6F13807313C05D92C96C13E0A27313F0A21BF8A2F27FFCA31BFEA21A3FA21BFF
AD1BFEA31A7FA21BFCA3F2FFF8A21BF0611BE06F4B13C0A26F4B13806F4B1300626F151F
DAFDF84B5ADAF8FEEDFFF8037F4A13E09126F03FC001075B9126E01FF0011F5B92260FFE
01B5C7FCDAC003B612FC6F15F04A6C6C14C090C8000F49C8FC040113E050707CED5A>I<
923807FFF0037FEBFF800203B612F0020F15FC023F81913A7FFE000FFF902601FFF00100
13804901C015C049494913E04948C75A49484A13F0495A495A13FF485B5A5C487013E04A
6E13C04870138091C9EA3E004894C7FCA2485AA3127FA35B12FFAD127F7FA4123F7FA26C
187C807E19FC6C6D16F86C6D150119F06C6D15036C6D16E0017F16076EED0FC06D6CED1F
806D6C6CEC3F006D6D5C010301F0EB01FE6D01FCEB07FC6D9039FF803FF0023F90B55A02
0F158002034AC7FCDA007F13F8030713803E497BC648>I<F103F0F03FFF050FB5FCA6EF
000F180384A284B3AA923807FF80037F13F80203B512FE020F6E7E023F15E091B538807F
F0499039F80007F84901E0EB01FE010F0180EB007F4990C87ED93FFC814948814A8101FF
82484981485B84485B5A91CAFC5AA2485AA3127FA25BA312FFAD127FA27FA2123FA36C7E
A27EA26C6D5DA26C6D5D7E6E5D6C6D5D6D6C4B7F6D6C5D6D6C037E7F6D6C4A4813FF6D01
C0D907F814FF6D01F0EB1FF001009039FE01FFE06EB61280021F5D020714FC020102E015
C09126001FFEC700FCC7FC50707BED5A>I<ED0FFF92B512F0020714FE021F6E7E027F81
9126FFFC0713F00103D9E0007F490180EB3FFC4990C7EA0FFE49486E7E49486E13804948
6E13C0495A48496E13E05C48EF7FF0485BF03FF85A91C9FC48EF1FFCA25B123FA2007F18
FE180F5BA3BAFCA501FCCBFCA8127FA27FA2123FA36C7E193E7E806C187E6E167C6C18FC
6E16F86C17016C6DED03F06D7E6D6CED07E06D6CED0FC06D6C153F6D01C0EC7F806D6D90
3801FF006D01FCEB07FE903B007FFF803FF8021F90B55A020715C0020192C7FCDA003F13
F8030313C03F497CC648>I<EE1FF8923801FFFE030FEBFF80033F14C04B14E0913A01FF
F01FF04A9038C03FF84AEB007F4A48EBFFFC4A5A143F5D4A5A14FF4BEB7FF85BEF3FF049
49EB1FE094C7FCA2495BB3A6B812E0A6D800070180C8FCB3B3B1815B013F13F8007FB7FC
A636707CEF32>I<F107F8DB3FF8EC7FFE0203B56C48B5FC021FDAF0071480027FECFC1F
91B626FE3FF813C00103D9F01FB512C049D9800349C6FC49496C13F8D91FFC6D6C5A4948
6E6CEB7F80017F70EB3F004A021F91C7FC01FF8248496E7EA348496E7FA34884A96C60A3
6C6D4A90C8FCA36C6D4A5A017F5E6E143F013F5E6D6C4A5A6DB449485A6F485B49D9F01F
5B013E90B548C9FC6E5CD97C1F14F0020314809126003FF8CAFC01FC90CCFC5BA27FA47F
7FA214C0EB7FF091B7FC18F86DEEFF806D17E019F86D17FE6D834984013F8490BA7E4801
E0C7000380480180DA000F7F4848C912014848706C7E4848173F4848EF0FFE5B007F1807
49717EA2485A85A66D5F007F616D1707003F616D170F6C6C4D5A6C6C4D5A6CB4EFFFE06C
01C003035B6C6D4B5B6C01FC033F90C7FC90263FFF80903801FFFC010F01FC013F13F001
0390B712C0010094C8FC021F15F8020315C0DA001F01F8C9FC4A697CC651>I<143F0003
B5FCB6FCA6C6FC133F7FA27FB3AAEF7FF80403B57E041F14F04C8093B67E4B01807F923A
03F8001FFFDB07E001077F4B486D7F4BC780033E805D4B6E7FA25D4B6F7EA25DA35DA392
C9FCB3B3A3496D4B7E017F01E0020313FFB7D8F007B71280A6516E7BED5A>I<EB07E0EB
1FF8497E497E90B5FCA24880A66C91C7FCA26D5A6D5A6D5AEB07E090C9FCB3143F48B5FC
127FA6C6FC133F7FA27FB3B3AE497F017F13E0B712E0A6236B7BEA2D>I<143F0003B5FC
B6FCA6C6FC133F7FA27FB3AC0507B612C0A60501ECF8007114C04FC7FC19F819E0614D90
C8FC4D5A4D5AEF0FF04D5A4D5A4D5A4DC9FCEE03FC4C5A4C5A4C5A4C5A167F4B487E4B7F
5D4B7F4B7F157F4B6C7E4B6C7E4B6C7F4B7E03F080DBC0077F4B6C7F15004A6D7F707F17
7F84717E717F8385717F717FA2717F717F187F85727E86727F8686496C83017F01C0027F
13FFB7D8E003B612FCA64E6E7CED56>107 D<143F0003B5FCB6FCA6C6FC133F7FA27FB3
B3B3B3B2497F017F13E0B712F0A6246E7BED2D>I<027EDA7FF8923803FFC02603FFFE01
03B56C021F13FCB5021F02F091B67E4C6E498193B66C0107814B01806D90260FFC077F92
2803F8001FFF90261FC0007FDB07E001076D48C7EA3FFCC64A486DD9C07E6E7E013F49C7
DAE0F881011F013E6ED9E1F0804BEEE3E0010F496ED9F7C06E7FA26E48EEFF804B6F90C8
6C7FA24B5EA34B5EA392C95BB3B3A3496D4B6C4B7F017F01E0020301FF031F13F8B7D8F0
07B7D8803FB612FCA67E467BC587>I<027EEC7FF82603FFFE0103B57EB5021F14F04C80
93B67E4B01807F923A03F8001FFFDB07E001077FC64A486D7F013F49C780011F013E805D
010F496E7FA26E5A4B6F7EA25DA35DA392C9FCB3B3A3496D4B7E017F01E0020313FFB7D8
F007B71280A651467BC55A>I<923803FFC0033F13FC4AB67E020715E0021F15F8913A7F
FE007FFEDAFFF0EB0FFF010301C0010313C04990C87F49486F7ED91FF8ED1FF849486F7E
017F8349486F7E4A8148198048496F13C0A24890CA13E04819F049177F001F19F8A3003F
19FC49173FA2007F19FEA400FF19FFAC007F19FEA46D177F003F19FCA2001F19F8A26D17
FF6C19F0A26C6D4B13E06C19C06E5D6C19806C6D4B13006D6C4B5A6E151F6D6C4B5A6D6C
4B5AD907FFEDFFE06D01C001035B6D01F0010F5B9026007FFED97FFEC7FC6EB65A020F15
F002011580DA003F01FCC8FC030313C048497CC651>I<023FEC7FF80003B50107B57EB6
013F14E093B612F8030315FE030F01006D7EDB1FF8011F7FDB3FC001077FC64AC700017F
013F01FE6E7F6D01F86F7E4B6F7E6D496F7E4B17807313C04B8192C914E0851BF0851BF8
A27313FCA3F27FFEA41BFF86ACF27FFEA5F2FFFCA34F13F8A24F13F0A24F13E06F17C061
6F17806F4B13004F5A6F157F6F4B5A03FE4A5B037F4A13E0DB3FC0010F5BDB1FF0013F5B
92260FFE01B5C7FC0303B612FC6F15F06F6C14C0040F49C8FC040113E093CBFCB3A3497F
017F13E0B712F0A650657CC55A>I<027EEB07FC2603FFFE90383FFF80B54A13E04BB512
F04B14F8923907FC3FFC92380FF07F92391FC0FFFEC64AC6FC013F133E011F137E157C01
0F5BA26E48EB7FFCEF3FF84BEB1FF0EF07C04B90C7FCA35DA692C9FCB3B0815B017F13F0
B712FEA637467CC540>114 D<DA1FFFEB03800103B5EAF00F010FECFC1F013FECFF3F90
B8FC48EBF0014890C7123FD807FC140F4848140348488048488049157F127F49153FA200
FF161FA3170F7FA27F7F7FD87FFE92C7FC6D7E14F06C13FF15FC6CECFFC06C15FC6C15FF
6C16C06C826C16F86D81011F8101078101001680140FDA007F14C0030314E0ED003F040F
13F0160300788100F89238007FF8A26C163F171FA36C160FA27EA218F07F171F6D16E07F
6D153FEF7FC001FC16806DEC01FF6D4A1300D9BFE0EB0FFED91FFCEBFFFC486CB612F048
6C5DD8F8011580486C6C01FCC7FC48010713C035497BC640>I<EC0F80A7141FA5143FA3
147FA314FFA25B5BA25B5B5B5B5B48B5FC000F91B512FEB8FCA5D800070180C8FCB3AFEF
07C0AF170F6D6D1480A36D6DEB1F00A26D5D6F133E6E6C5B6E6C13FC91391FFF03F86EEB
FFF06E5C6E5CDA007F90C7FCED0FFC32637DE03F>I<023FEE01F80003B5ED1FFFB60207
B5FCA6C6EE0007013F16016D82A26D177FB3B319FFA460A3607F606F5C6D84F01F7F6D6D
023E7F06FC6D7E6D6DD901F8ECFF80DA7FF8EB07F06EB4EB3FE06E90B512C06E15800203
ECFE00020002F8EDE000030701C0017EC8FC51487BC55A>I<B76C0107B512FEA6C602F0
C814C0013F01C092387FFE006D496F5A6DEF1FF06D60190F6F5E6D606F151F6D95C7FCA2
6F5D6D173E6F157E027F167CA26F15FC023F5E6F1401021F5E8118036E5E7013076E5E70
130F6E5EA270131F6E93C8FC705B6E153EA270137E037F147C7013FC033F5CA2EEFE0103
1F5CEEFF036F5CA217876F5C17CF6F5C17EF17FF6F91C9FCA26F5BA2705AA3705AA2705A
A3705AA2705A4F467DC356>I<B70081B600FC011FB512FCA6C69126E000010280010114
C0013F01809026007FFCC8387FFE0092C8003F705A6D4DED1FF0727E6D755A666F6E7E6D
641D1F6D6D6F93C7FC606F616D72143E606F197E6D72147C606F027C16FC027F715C18FC
6F4A6C6C1301023F02015FDEF03F14036E6C705C17036FDAE01F14076E715C17070480D9
C00F140F6E715C170F04C0D98007141F6E7191C8FC171F04E0496C6D5A6E4A163E053E6D
147E6E01F0EEC07C177EDCF87C6D14FC037F715A17FC7048EC7FE1033FEFF1F016FDDCFF
F0EC3FF36FEFFBE0A24DEC1FFF6F604D806F60A24D806F95C9FCA294C87E6F5FA24C1501
03005F4C1500047C5E6E467DC375>I<007FB600C0017FB512FCA6D8003F49C7001F91C7
FC0107496E13F86D496E13C06D95C8FC6D5F6E6C15F86E6C5D021F4B5A6F5D6E6D495A6E
6D133F6E4BC9FC70137E6E6D5B6E6D485A92387FFC03033F495A70485ADB1FFF5B6FEB9F
806F01BFCAFC17FF6F5B6F5B6F5B167F83707E707E845E4C7F93B57EDB01FD7F16F84B48
7F4B486C7E030F6D7E4B486C7E4C7EDB3F0080037E6D7F03FE6D7F4A487F4B814A486D7F
4A486E7E020F6F7E4A48141F023F824A486E7F02FF6F7F010384010F6D82013F4C7F0003
B56C4A13FFB600F891B71280A651447EC356>I<B700C00107B512FEA6C602F0C7000114
C0011F01C09139007FFE006D496F5AF11FF06D606F5E6D170F4F5A816D95C7FC6F5D6D17
3E81197E027F167C6F15FC023F5E6F1401021F5EA26F14036E5E7013076E5E70130F6E5E
A270131F6E93C8FC705B6E153EA270137E037F147C7013FC033F5CEEFE01031F5CA2EEFF
036F5C17876F5C17C717CF6F5C17FF6F91C9FCA26F5BA3705AA2705AA3705AA2705AA270
5AA2160F5F161F94CAFC5E163EA2167E167C16FC5EEA0780D81FE01301486C5C486C1303
5E486C13075E150F4B5A93CBFC495B007F147E495B393FE003F8EB8007391FF03FF06CB5
12C06C5C6C91CCFCC613FCEB1FE04F657DC356>I<0007B912E019F0A402FCC7000713E0
02C04A13C04848C8481380495D494B1300495E494B5A5E494A5B604C5B495C4C5B604C90
C7FC001F5D90C8485A5F4B5B4B5B5D4B5BC85C4B5B5D4B90C8FC5E4B5A5C4A5B5E4A5B4A
ED01F04A5B5E4A90C7FC5C4A48EC03E05D495B495B5B495B4B1407495B5B4990C8FC4AED
0FC0495A48171F485B4A153F4849157F4817FF48495C4A5C4890C8121F48484AB5FCBA12
80A47E3C447CC348>I<BDFCA5500580AC51>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fi cmsy10 10 1
/Fi 1 1 df<003FBFFCC012C0A6003F1E006A0871AF89>0 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fj cmmi10 10 6
/Fj 6 117 df<1E0FF63FC01EFF1D031D0F1D3F9AB5FC0A0314000A0F13FC0A3F13F099
B512C0090391C7FC091F13FC097F13F050B512C0080791C8FC081F13FC087F13F04FB512
C0070749C9FC071F13F8077F13E04EB51280060749CAFC061F13F8067F13E04DB5128005
0749CBFC051F13F8057F13E04CB51280040749CCFC041F13F8047F13E04BB51280030749
CDFC033F13F892B512E002031480020F49CEFC023F13F891B512E001031480010F01FCCF
FC013F13F090B512C0000391D0FC000F13FC003F13F0B512C091D1FC13FCA213FF14C000
3F13F0000F13FC000313FFC614C0013F13F0010F13FC0103EBFF80010014E0023F13F802
0F13FE02036D7E020014E0033F13F8030713FE03016D7E6F6C13E0041F13F8040713FE04
016D7E706C13E0051F13F8050713FE05016D7E716C13E0061F13F8060713FE06016D7E72
6C13E0071F13F8070713FE0701EBFFC0736C13F0081F13FC080713FF080114C0746C13F0
091F13FC090313FF090014C00A3F13F00A0F13FC0A0313FF0A0014C01D3F1D0F1D031D00
1E3FF60F006A6871DF89>60 D<123CB4FC13C013F013FC13FF14C0003F13F0000F13FC00
0313FFC614C0013F13F0010F13FE01036D7E010014E0023F13F8020F13FE02036D7E0200
14E0031F13F8030713FE03016D7E6F6C13E0041F13F8040713FE04016D7E706C13E0051F
13F8050713FE05016D7E716C13E0061F13F8060713FE06016D7E726C13E0071F13F80707
13FF070114C0736C13F0081F13FC080713FF080114C0746C13F0090F13FC090313FF0900
14C00A3F13F00A0F13FC0A0313FF0A0014C01D3F1D0FA21D3F9AB5FC0A0314000A0F13FC
0A3F13F099B512C0090391C7FC090F13FC097F13F050B512C0080791C8FC081F13FC087F
13F04FB512C0070791C9FC071F13F8077F13E04EB51280060749CAFC061F13F8067F13E0
4DB51280050749CBFC051F13F8057F13E04CB51280040749CCFC041F13F8047F13E04BB5
1280030749CDFC031F13F892B512E002031480020F49CEFC023F13F891B512E001031480
010F49CFFC013F13F090B512C0000391D0FC000F13FC003F13F0B512C091D1FC13FC13F0
13C090D2FC123C6A6871DF89>62 D<EE07FE93383FFFC04BB512F0030780031F9138FC01
F8923B7FFE03FE03FC923BFFF000FF07FE4A49EB3F8F02070180EB1F9F4A90C7EA0FDFDA
1FFC15FF4A4880027F6F5B4A5A494980495B496049498092C9FC5B49485F137F5C01FF5E
4A5F5A5A4A5D4861A25C485F62485BA2604896C7FC5CA260486091C9FCA2183FB55F5BA2
187F615BA206FF140F4F131FA3495D4F133F1B3EA2007F4C157E1B7C4D5B5F6C6C4B15FC
4D15F8A2001F4C14016D92B514F0000FDB03F914030007DB07F115E06DDA0FE114076C6D
D93FC015C06C6D4948EBE00F6C9028E001FF007FEB1F8090277FF80FFC90393FF87F006D
B5486DB5FC6D4A6D5B010702C06D5B010149C7000113F09026003FF09138003FC0505079
CD5D>97 D<ED3FC00103B5FC90B6FC5AA25EA3C77E021F90CAFCA45DA2143FA25DA2147F
A25DA214FFA25DA25BA25DA25BA25DA25BA25DA25BA292CBFCA25BEE07FE4A90383FFFC0
4BB512F0013F010714FC4B80913AFC1FF80FFF92267FC0037F017F49C66C7FDAFDFE6D7F
DAFBF86E7EDAFFF0143F90B5488103808192C8121F4A825A5C4A6F7E5C485BA24A1780A2
5AA24A5DA25AA291C9FCA2485FA25BA2003F5F1A005BA295B5FC127F495FA25F00FF605B
A24D5BA261495DA2615F61615F96C7FC5F60007F4C5A6017FF4C5B003F5F6D4A5B001F4B
5B4C90C8FC6C6C5D4C5A6C6CEC7FF86D4A5A6C6C010313C06C6D485B6CD9F03F90C9FC6D
B512FC011F14F06D14C0010349CAFC9038007FF0417C78F94B>I<EF7FF80407B57E043F
14E093B612F8030381030F9038E00FFE033F90380001FFDBFFF89038007F804A49EC1FC0
4A01C0140F020F49EC07E04A48C8127F4A48EC01FF4A485C4A485C49495C495E495B495B
A24990C814C0495A017F18804A170001FF705A48496F5AF001F04894C8FC5C5A5C5AA248
5BA35A5CA35A91CCFCA4485AA55BA6127F1AC0F101E0F103F0003FF007E0190F1AC06C6C
EF3F80F17F00000F18FE6D4C5A6CEF07F86E4B5A6CEF3FE06C6DEDFF806C6D020390C7FC
6D6CEC1FFCD93FFCECFFF890271FFF801F13E0010790B612806D4BC8FC010015F0023F91
C9FC020313E0445079CD4C>I<16FC4B7E4B7E5D5DA45D5EA3153F5EA3157F5EA315FF5E
A35C5EA35C5EA35C5E007FB812F818FCB9FC18F8A3C7001F90C8FC5DA3143F5DA3147F5D
A314FF5DA35B5DA35B5DA35B5DA35B92C9FCA35B5CA3133F5CA3137F5CA2EF03C001FF15
075C170F18805A4A141F18005F48167E5C5F5F16014C5A5F16076C4B5A4C5A4CC7FC6C15
FE6E485A017FEB07F890393FF83FF06DB55A6D5C6D91C8FC010113FC9038003FE036707C
ED3F>116 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fk cmr7 7 7
/Fk 7 57 df<15F014011407140F143FEB01FF130F48B5FCB6FCA2EBFE7F13F0EAFE00C7
FCB3B3B3A74A7E010313FEB812F8A52D5173D046>49 D<EC1FFE49B512F0010714FC011F
14FF4915C09026FFE01F13F048D900037FD803F801007F48486E7E4848EC1FFFD81F806E
1380A248C86C13C0003E6F13E0127E007F6F13F013C0487E6D806D16F8A66C5A6C5A6C5A
CAFC4C13F0A318E05E18C05E18804C1300A24C5A4C5A5F4C5A4C5A4B5B5F4B90C7FC4B5A
ED0FF84B5A4B5A4B5A4BC8FC4A5A4A5A4A5A4A5AEC1FC04A4814F84AC8FC14FE4948EC01
F0495A495A495AD91F80140349C8FC017E16E04915074848150F48B8FC5A4817C05A5A5A
B9FCA21880A3355178D046>I<91380FFF8091B512FC010714FF011F15C090263FFC0313
F0903AFFC0007FFC4848C7EA1FFED803F86E7E496E1380484816C0486C8001FC16E0486C
8018F07FA56C5AA26C4816E0D801F05CC9FC18C05E1880A24C13004C5A5F4C5A4C5A4B48
5A0307138092B5C7FC91B512FC16E016F816FFDA000313C0030013F0EE3FF8EE0FFE707E
18807013C07013E018F0A27013F8A218FC177FA218FEA2EA0780EA1FE0487E487E487EA3
18FC17FFA24916F8A26C484A13F013C06CC84813E06D4A13C06C6C1680D80FF04A1300D8
07FCEC3FFE6CB46C495A6C9039F803FFF86C6CB612E06D5D01074AC7FC010114F8D9000F
1380375379D046>I<17FC1601A216031607A2160F161F163FA2167F16FFA25DED03EF15
0716CFED0F8F151FED3F0F153E157C15FC15F8EC01F01403EC07E015C0EC0F80141FEC3F
00143E5C14FC5C495A1303495A5C495A131F91C7FC133E5B13FC5B485A1203485A5B485A
121F90C8FC123E127E5ABA12E0A5C9D81FFCC7FCAE4C7E4C7E0203B712E0A53B527BD146
>I<486C1507D803F0153F01FF4AB4FC02F8133F91B65A5F5F5F17C05F94C7FC16FC16F0
16C001E701FCC8FC01E0CAFCAF913803FF80023F13F091B512FE01E3809026E7FE0113C0
903AEFE0007FE0D9FF80EB1FF049C76C7E496E7E496E7E4981496E13806C5AC914C08218
E0A218F0177FA318F8A4EA1F80EA3FE0487E12FF7FA318F04915FFA24916E06C5A90C848
13C0127E003E4B1380123F6C6C4A13006D5D6C6C4A5A6C6CEC3FF8D803FC4A5A6CB44948
5A6CD9F00F5B6DB6C7FC011F14FC010714F0010114C09026003FFCC8FC355378D046>I<
923807FF80037F13F04AB512FC02078091391FFE01FF913A7FF0003F80DAFFC0EB0FC049
90C7EA07E04948141F4948143F4948EC7FF0494814FF495A137F495A5C5A4890C8EA7FE0
EF3FC048EE1F804992C7FC120FA2485AA3123FA34848130C913801FFF8020713FF021F80
4A14E000FF90397F003FF002FCEB0FF8D9F9F06D7ED9FBE06D7E4A6D7ED9FF8015807013
C091C813E0EF7FF05B18F8A249ED3FFCA418FE5B127FA6123FA27FA2001F17FCA3120FEF
7FF86C7E18F012036DEDFFE06C17C06C6D4913806E4913006D6C495A6D6C495AD91FFC49
5A6DB4EBFFF06D90B55A010115806D6C91C7FC021F13F8020313C0375379D046>I<9138
03FFC0023F13FC49B67E4915E090260FFE007FD91FE0EB1FF8D97F80EB07FE01FEC7EA01
FFD801F86E138049153F000317C04848ED1FE0170F485A18F01707121FA27FA27F170F6D
16E07F01FF151F6C01C015C06E143F02F8EC7F806C01FEECFF006C6D495A9238C003FC6C
9138F007F86C9138F81FF06D9038FE7FC06D90B55A6D4AC7FC010714F86D80010014FF02
3F8091B612E0010315F8D907FD80D91FF08090263FE03F7F9026FF800F148048496C14C0
4848010114E048486D6C13F04848141F496E13F848481403003F030013FC49157F007F16
1F49ED0FFEA200FF160790C91203A31701A46D16FC127F17036D16F8003F16076D16F06C
6CED0FE06C6C151F6DED3FC06C6CEDFF806C6C6C4913006C01F0EB0FFE26007FFEEBFFF8
6DB65A010F15C0010392C7FCD9007F13FC020713C0375379D046>56
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fl cmbx10 10.95 32
/Fl 32 124 df[<F201FE973807FF80507FA2507FA2507FA3507FA297B57EA34F80A24F
80A34F81A24F81A34F81A24F81A34F81A296B77EA34E82A24E01DF80A21A9F4E018F81A2
4E010781A219FE061F6D81A24E486C81A2DE7FF88286A24E486D80A24D498287A24D496D
80A24D496D81A34D90C76C81A24D486E81A260053F6F81A24D486E81A26005FF7080A24C
496F80A2604C7180A24C496F81A295C9FC4C7181A24C487081A25F043F7181A24C487081
94BCFCA293BD7EA24B88A34B88A24B890580CA120F4B90CB8289A24B487281A24B488889
A24B487281A24B487380A34A497380A24A497380A25E4A7581A24A90CD6C81A25D021F75
8149B512E0B90407BA12FCA9DA00079838FE0001>150 135 120
262 167 65 D[<C112FEA48CA6C700070380C81203F4000F0B0181F5003F1E0F8A1E018A
8B8B797FA28B8BA28BA2797FA38BA3207FA28D51B47E203FA67A7EA263A29DC8FCA263A2
63A2636398B5FC1A031A3F95B8FCAA953880003F1A031A001B3F8787A287A275EF7FE0A3
F9FFC087A5561380A498CA5AA22200A268A36869A2201FA2203FA2565AA220FF67A26755
5B6767679CB5FC660C075C1E1F9BB6FC1D0F0A03B7FCC2FC69A669A3>131
131 121 258 145 69 D[<97261FFFFC177C071FB600E016FE0603B700FE1501063FDCFF
C014034DB900F81407050F06FE140F057F726C133F4CBB00E0137F040708F813FF041F74
5A047F9326C0007FEBFF034BB700F0C7000314874B93C96C13CF030F03F8041F90B5FC4B
03C01607037F92CA120192B600F8834A4B183F020703C0844A4B844A4ACC7E4A4A19014A
4A8591B65A494B864D86494B864992CE7E495C8C494A87495C8C495C90B6885E48207FA2
485D213F5E5A211F5A93D0FCA25A210FA2485CA27B5A9EC9FC5AA35DA3B6FCB27EA36F95
B600FC91B512FC9CB8FCA27EA46C80A36C98C8001F4AC7FCA2827EA26C81A36C81A27E82
7F6D80827F6D80827F6D816D81836D816E806E806E02FF616E816E6F60020103F095B6FC
6E15FC6F02FF1703031F03C05E6F03F8161F030303FF167F6F04F80203B512BF6F6CDBFF
E0013F141F041F93B7EAFE070407507E0401F2F000706C4F133F050F0780130F05014EC7
1203DD003F05F0EC007E06030580151CDE001F03FCCCFCDF001F49CDFC>150
136 116 261 174 71 D[<030FB600C0010FB5128096B8FCA992C8000103C0C7FCB3B3B3
B3ADEB1FE0EBFFFC000313FF4880488048804880A24880A3B67EA36460A399C8FC4B5C6C
62604B5F6C4D5C5D6C4A4A5C6C4A4A5C92C8B65A6C01FC02035D6CD9FF80010F92C9FC6C
02FC017F14FC6C6C90B85A6D18E0010F188001034DCAFC010017F0021F1680020103F8CB
FCDA000F49CCFC>97 134 125 259 114 74 D[<0707B5FC0603B612FE067FEDFFF00503
B812FE051FEFFFC094BA12F8040319FE041FF1FFC0047F1AF093B7D8000781030303E0D9
003F14FE030F92C800076E7E4B02FC030181037F02F06F6C14F092B600C0041F804A4B70
804A4ACA0003804A4A7180021F4A7115C04A4A72804D844A4A728091B64872804992CC6C
80494A7380498B4C85494A7381498C4C86498C494A7480A290B68A4C86488D4C86488DA2
488D93CE7EA2482280A3484A7515C0A44822E0A34B874822F0A7B620F8B26C22F0A26F63
A46C22E0A46F636C22C0A36C22807062A26C2200A26C6F505CA36C6F505CA26C6970626D
686D6E97B65AA26D6E4F5DA26D6E4F5D6D6E4F92C7FC6D6771606D6F4E5C6D6F4E5C6E6E
4E5C6E666E02FC4DB65A6E6E4D5D6E6E4D92C8FC6E6F4C5C020003E0043F14F86F02F893
B65A6F02FE03035D030F6E6C020F15806F03F0027F92C9FC030103FF0107B612FC6F6C92
B812F0041F1AC0040797CAFC040019F8053F18E0050795CBFCDD007F16F006034BCCFCDE
000791CDFC>141 136 116 261 166 79 D[<BE7E1DFF1EF01EFEF6FFC01FF01FFE8B20
C020F0C7000792C96C810A0381E2007F800B1F6E7E0B07811D01778178808D8A78808DA2
7880A22280A28A22C0A422E0AC22C0A42280662200A3545C69A2545C545CA29BB65A0B03
5D535D0B1F92C7FC0B7F5C0A03B612F80A7F5D95BB12C06855C8FC1FF81FC09CC9FC1EF0
9BCAFC1D800680CFFCB3B3ABBB12FCA99238C0000F>131 132 121
259 151 I[<BD12E0F4FFE01DFF1EF01EFEF6FFC01FF01FFE8B20C0C7000792C8000116
F0E10007810A0015FE0B3F800B0F810B03817781778178808A8D7880A27880A28EA27881
A48EAA6AA3545DA39FC9FCA2545C69545CA2545C9BB65A535D535D0B0F92CAFC0B3F14FC
9AB65A0A0F15E051B7128095BA48CBFC1FF81FE09CCCFC1EF88A1EFF1FC095C8000F15F0
090181756C14FE0A1F800A07817681768176817780A27780898C898CA3898DA78DA88DA6
A1EA03C0A1EA0FF07BEC1FF8A289A28DA277183F7B15F077187F8D786EECFFE0BB00F881
786F4813C078EDE00778DBF81F13807892B61200785F786C5E0D1F5E0D035E9226C0001F
DF007F15C0D3000792C7FCE6000F13F8>157 134 121 259 166
82 D[<93261FFFF0ED03E00307B66C4A7E033F03F8140F4AB8141F020705C0133F021F05
F0137F027F05FC13FF91BA5A01031983499126F8003F14E7490280010191B5FC4949C812
1F4901F815074901E0150090B54882484A161F92CA7E4849170348854A8348864A845A87
4A845A87875A87A3B58580A21C7F80A280801C3F818115F06F725A6C02FE95C8FC6F7E16
F016FF6C16F8EFFF8018FC6CEFFFE019FE6CF0FFE01AFC6CF1FF801BE06C1AF8876C1AFF
6C876D1AE06D866D866D866D866D866D877F023F86020F866E861401DA003F85150F0300
85160FDC007F831707DD003F821801F0001F07011680F1003F861A07867415C08687D87F
8085486C85A287A287A37F87A21E80A27FA27F1E007F636D63A26D636E60806E4E5B6E62
02FC606E4E5B6E6C94B5FC03E04C5C03F84C5C03FF4C91C7FC04E0031F5B04FE92B55ADC
FFFC010F5C496C91B85AD9FC1F61496C1980D9F00396C8FC49C66C17FC49011F17F04901
0317C090C86C4BC9FC48030315F0007CDB000749CAFC>98 136 116
261 123 I[<000FC212F8A6488DA4932680000103E0C7FC03F0C7190703C01B004AC81A
3F4A8902F01D074A894A894849777F91C91B7FA2491F3FA2491F1FA2491F0FA44848797E
A5498BA74848791380A6CB98C8FCB3B3B3B3033FBDFCA907C0C7FC>137
130 120 257 154 I<4BB512F8037FECFFC00207B712FC023FEEFF8091B912E0010318F8
4918FE49727E49DA0001814901F0D9001F14F0496D0207806F6E8090B56C020080854872
7F6F8485887380A285886C5CA273806D5B6D5B6D5B6D5B6D5BD900FEC9FC91CAFCA6067F
B6FC94B8FC163F0303B9FC153F4ABAFC140F023FEDF80349B6EAFE004915E0010F92C7FC
013F14F84914E090B61280484AC8FC485C485C485C485C5D5A5D5A92C9FCA2B6FC5CA461
A36E5E6C6081616C6E5D6F4B6C7F6C6E4A816C6EDA07FEECFFE06C6EDA1FFCEDFFF06C02
FF91267FF83F15F86C9239F007FFF06C92B612E06DEF801F011F4D7E010704FC7F010104
F01301D9003F03C0EB003F02034AC8000714F0DA001F01E092C9FC65597AD76C>97
D<4CB512C0043F14FF0303B712F0031F16FE037F707E4AB912E0020784021F844A8491B6
26E0003F7F4992C7000F7F4902F85C494A4A14804914C0494A17C04991C85A495B90B5FC
5D485C5A5D48721480A2485C73140048725B4B6F5B735B48725B9638003F8097C8FC5A5D
A4B6FCAF7EA281A37EA3817EA26C80F31FE06CF23FF0816C1A7F6F18E06C6E17FF816C4F
13C06D6E4B13806D806D02F04B13006D6E151F6D02FE4B5A6D6E6CECFFFC6D03F001035B
6D03FF013F5B6E92B65A021F60020795C7FC020117FC6E6C5E031F16E0030393C8FCDB00
3F14F8040191C9FC545979D762>99 D[<52B4FC0803B6FC0707B7FCAAF10003F2007FA2
87B3AE933801FFFE047FEBFFE00303B612FE031FEDFF80037F16E00203B812F84A17FE02
1FEFFFBF027FDAF80191B6FC91B63880001F4902FCC71203494A14004902E0153F494A81
494A15074991C97E49498290B54882484A83A2485CA2485CA25AA2485CA25AA35D5AA5B6
FCAF7EA56C80A37EA36C80A27EA26C6E94B6FC626C806C616F5E6D6D5E6D6D163F6D6E4B
816D6E92B7FC6D6E020316F06D02F8020FEEFFF86D02FE147F6D6C9026FFE007B57E6E91
B612FC020F17F86E17E002011780DA003FEDFE00030F15F003001580040701F0C702E0C7
FC>109 135 121 261 123 I<933801FFFE047FEBFFF80303B7FC031F16E092B812F802
0317FE020F834A18C0027FDAE00F8091B526FE0001804902F86D6C7F01074A021F7F4902
C06E7F494A6E7F93C86C148049498149496F14C090B519E0484A821CF0484A82A2484A70
13F8A25A4B7013FC5AA21CFE4885A25D5AA21CFFA3B6FCA292BBFCA61CFE0380CCFCA57E
A4817EA37EA2817EF301FE6FEF03FF7E816C626C80F30FFE6C6E171F6D6DEF3FFC6D8070
EEFFF86D6E4B13F06D02F85D6D6E030F13E06D02FF033F13C0010003E049B512806E02FF
011F14006E92B612FC020F60020360020018C0033F94C7FC030716FC030016E0041F4AC8
FCDC007F13C058597AD765>I[<F0FFFE053FEBFFC00403B612F0041F15FC93B77E0303EE
FF80030F17C04B17E0037FECC07F92B548C6B512F04AECF8014ADAE00314F84A14C04A4A
4814FC4A14004A5B5E5C5E91B5FC5E497014F8A3494A6D14F07214E07313C07313809638
0FFE00F103F896C8FCB3BA12C0AAD8000302F0CAFCB3B3B3AC007FB812F8A9ECE000>78
135 121 262 68 I<F41FF893263FFFE0913801FFFE030FB66C010F7F037F03F0013F14
C00203B700FE90B6FC020FDCFF8115E0023F05E715F091BDFC4908EF13F849DAFC01EDFE
0F010F9126C0001F14F04991C70007ECC01F4B6E8149496E14E049496E14F090B5486F01
F814F088484A6F01FC14E07613C04874C613001D18484A6F6D90C7FCA34887AB6C98C8FC
A36C6E4B5BA26C62A26C6E4B5BA26D6D92B55A6D6D4A5C6D6D4A5C6F5C6D02C0011F5C01
03DAFC01B548C9FC4991B75A49601AE0D91FEF1780D93FC34CCAFCDAC07F15F0017F010F
1580DB003F01E0CBFC4A90CEFC13FF80A25AA280A280808080ECFFC092B87E6C19FF1BF0
1BFE757E6D1AE01CF86D1AFE886D87896D876D876D876D871307011F87137F48BEFC5A48
02C0C812014849CA000715804849EF007F4849181F4A180748497214C0A2B5488487A66E
606C1D80A26E606C6D4E14006E606C646C01FF063F5B6C6E4D5B03E04CB5FC6C02F80407
5CC602FE041F14C06DD9FFE04AB65A6D02FF023F92C7FC010F92B812FC01031AF001001A
C0023F96C8FC020718F8DA007F1780030704F8C9FCDB000702F8CAFC657F7AD76F>I[<ED
3FE0017FB5FCB7FCAAC67E130FA27FB3AE96380FFFF096B6FC060715E0061F15F8067F15
FE4DB8FC4D17C0050F834DD9E01F8094393FFE0007DD7FF06D80DDFFC06D8004E1497FDC
E3FEC880EEE7FC4D81DCEFF083EEFFE05F4D818A94C9FCA25EA25EA25EA45EB3B3AAB9D8
8007B812FCA9DAC0019438FE000F>110 134 120 261 123 I[<EC3F80903801FFF00107
13FC497F497F4980498090B67EA24881A34881A76C5DA36C5DA26D5C6D5C6D91C7FC6D5B
6D5B010113F09038003F8091C9FCB1ED3FE0017FB5FC007FB6FCAAEA003F130FA27FB3B3
B3A8B812FEA9ECC003>47 135 120 262 61 I[<ED3FE0017FB5FCB7FCAAC67E130FA27F
B3AF0703B5EB3FF099B5FCA9DF001F91C8FC7413F0505B505B505B4F4848C9FC4F5B4F5B
4F5B073F5B4F138096B5CAFC4E5B4E5B060F13F04E5B4E5B4E5B4DB5CBFC4D13FC4D5B4D
5B4D5B057F7F94B57E04E18016E304EF8093B7FC86A28686868617EF0587800507804C6C
804C7E4C6C8104E0824C6D80728084728087728084728088728173808573808873808573
8088738173818674808989B800FE010FB81280A9DA80039438FE003F>105
134 121 261 117 107 D[<ED3FE0017FB5FCB7FCAAC67E130FA27FB3B3B3B3B3B3B9FC
A9ECC003>48 134 120 261 61 I<DB7FC091260FFFF094387FFF8090B692B60407B512
F8B7020703E0033F14FF061F03F892B712C0067F03FE020316F04DB8020F824D05C04916
FE050F71017F824DD9E01F6E90B5C68194273FFE00074B01F0133FDD7FF06D6E4801806D
80DDFFC06D6E4848C76C80C66C02C1496D4B4880010FDAC3FEC89126FE1FF083DCC7FC4E
5A6D4B6F4B80DCCFF071484883DCDFE04EC8FC4D60DCFF806F4A81A17F94C95DA24C61A2
4C61A24C61A44C61B3B3AAB9D88007B800FC013FB812E0A9DAC0019426FE000F9438F000
7FAB5778D6B8>I<DB7FC091380FFFF090B692B6FCB7020715E0061F15F8067F15FE4DB8
FC4D17C0050F834DD9E01F8094393FFE0007DD7FF06D80DDFFC06D80C66C02C1497F010F
DAC3FEC880EEC7FC6D4B81DCCFF083EEDFE05FDCFF80818A94C9FCA25EA25EA25EA45EB3
B3AAB9D88007B812FCA9DAC0019438FE000F6E5778D67B>I<94387FFF80041FB512FE4B
B712E0030F16FC033F16FF92B912C0020318F0020F18FC023FDAE00114FF4A49C7001F80
91B500F8020780010302E0020114F0494A6E804991C9003F7F4949707F4949707FA24949
708090B548708048884B824888A248884B824888A24888A24B834888A3481D80A5B61BC0
AF6C1D80A56C6E94B61200A36C64A26C646F5EA26C646C6E4C5CA26C646F5E6C6E4C5C6D
636D6D4C91C7FC6D6D4C5B6D02C092B55A6D6E4A5C6D02F802075C6D02FE021F5C6D9126
FFE001B65A023F91B8C8FC6E60020718F8020118E06E6C1780030F04FCC9FC030116E0DB
003F92CAFC040014C062597AD76F>I<DB3FE091383FFF80017FB5020FB512FCB7027FEC
FFC00503B712F0051F16FC057F16FF04E1B912C004E318F004EF8493B548C66C8006E001
0F8095C700036E7EC66C03FC020081010F03F08105C06F806D4B6F8094C96C804C708004
F8828A4C827580A21F80881FC088A21FE0A2881FF0A57614F8AF1FF064A41FE0A264A21F
C0641F80A299B61200A2515CA2704C5C82515C704C5C704C5C714B5C05E04B5C7192B6C7
FC05FC4A5C7102075CDDFFC0011F5CDEFC01B65A04F790B812C004F195C8FCDCF07F16FC
051F16F0050716C005014BC9FCDD003F14E0060101FCCAFC95CDFCB3A8B97EA9ECC0016D
7C7AD67B>I<DB7F80EB0FFE90B691387FFFC0B749B512F0050714FC051F14FF4D15804D
15C094B712E0048101F814F0048313C0060114F8EE87FEC66C91268FF80314FC010F15F0
169F6D15E0EEBFC0178016FF17007214F85E7214F05E7313E07313C04C020F1300F103FC
96C8FCA25EA65EB3B3A5B912E0A9ECC0014E577AD65B>114 D<92263FFFF0EB0F80020F
B6EB3FC0027FEDE0FF49B712FB010793B5FC131F137F90B538F0007F4849C712074801F8
14004801E0814849151F4A814890C97E845A4982127FA28412FF7FA280806EEE7F806E93
C7FC14FCECFF8015F8EDFFC06C15FF17F8EFFF806C17F018FC6C17FF6C18C019F06C846C
846C846C846D1880011F18C06D18E0010318F01300023F17F81407DA007F16FC1503DB00
0F15FEEE007F1707050014FF183FD87F80160F486C8284847F84A26D83A26D18FEA27FA2
6D18FC6D17FFA26E4B13F8806E4B13F002F85D6E4B13E002FF033F13C003C091B5128003
FC011F140092B75A6101F917F0D9F07F5ED9C01F93C7FCD9800715FC48C715E0007C0207
01F8C8FC485979D757>I<ED0FFCA7151FA6153FA3157FA315FFA25CA25CA25C5CA25C5C
5C91B5FC5B5B130F5B90BA12801207BBFCA8D8000102FCC9FCB3B3A6F11FF8B0F13FF06D
80A2197F6E17E07014FF6E6E4813C0A26EDAE0071380DDF81F13006E91B6FC6E5E6E5E02
005E6F15E0031F5D030792C7FC030014FC040713E0457B7CF956>I<DB1FF0F0FF80017F
B50403B6FCB70307B7FCAAC66CEF0003010FF0007FA26D85B3B3AA63A498B6FCA362627F
62626D6E5D50816DF07FDFE0FF9F14F86E01FE0203011FECFFFC70EC0FFE6E02F0EBFFFC
6E91B612F86E17F0020317E06E17806E6CEDFE00030F15F8030115E0DB000F49C702F8C7
FC6E5878D67B>I<B590260FFFFE923AFFFC01FFC091B694B6FCA9D8000702F8C9000149
C7FC9838003FF86D6E4D5AA26D6E4D5AA2826D4F5BA26E6E4B5BA26E6E4B90C8FCA26E6E
4B5AA26E6E4B5AA2836E4E5AA26E6E4B5AA26E6E4B5AA26E6E4A5BA26F6E495BA2846F4C
90C9FCA26F6E495AA26F6E495AA26F6E495AA26F6E495AA2846F4C5AA26F6E485BA27002
835BA27002C790CAFCA270ECEFFEA219FF705DA2705DA2705DA2705DA2705DA3715CA271
91CBFCA2715BA2715BA2715BA3715BA2715B9438007F806A577BD575>I<D8FFFE902A1F
FFF803FFF001B5913A1FFFC01FF890B792B793B5FCA9D8000F02E0C8003F01FCC9001FEB
F000707104031380866D9EC7FC706F6D5E6D687072150F866D687072151F626D6E724B5A
626E677171157F626E6E714B5A626E6771715C97B6FC6E744A5B714913DF6E9CC8FC7103
8F6D5C616E75495A714913076E66714A6C6E131F190F6E535A714A6C806F031F61068049
6C6E137F193F6F525A06C0496D7F6F037F6106E0715A4F487F6F515B72496D13FE6F02F1
97C9FC06F9715A06FB497F6F515A95B5C76C148F6F641FDF4F806FF3FFF84F807063A24F
8070634F817063A24F8170634F817098CAFCA24F81706296C97EA270624E8270624E82A2
057F617148705BDD1FE0EF3FC095577BD5A0>I<297FFF800FFFFE913A3FFF801FFF91B6
94B6FCA9C792C8000102C0C7FC6E6E9126007FFCC8FC714B5A6E4D5B6E6E5C6E6E4A5B6E
6E5E6E6E4A5B714A90C9FC6E4D5A6E6E4A5A6F6E495A6F6E5A06E05C6F6E485B6F4B5B6F
6E485B6F6E4890CAFC6F6E485AF0FF7F6F4B5A705D705D705D705D627092CBFC82705C70
8086837180718071804D804D80A24D8094B7FC4C824C824C824C13DF068F804C0107804C
486C80DC7FFC814C487E4B496C804B6F804B496D804D6D804B49824B90C77E4B486E804B
486E804B486E804A854A49804C6F804A496F804A496F804A90C96C804A48850103B500C0
81B700FE4AB812F0A9D9F801F1800F6C567CD575>I<277FFF8007B5DB7FFEEBFFE091B7
93B6FCA9D8000302FCCA91C7FCF41FFC6D6E4D5AA26D6E4D5AA26E6E4C5AA26E6E4B5BA2
836E4E5BA26E6E4B90C8FCA26E6E4B5AA26E6E4B5AA26E6E4B5AA2836E4E5A846F4D5AA2
6F6E495BA26F6E495BA26F6E4990C9FCA26F6E495AA2846F4C5AA26F6E495AA26F6E495A
A2706E485AA27002C15BA219E17002E35B19F37002F790CAFCA270ECFFFEA2705DA2705D
A2705DA3715CA2715CA2715CA27191CBFCA2715BA2715BA3715BA2715BA261A24D5BA24D
5BA34D90CCFC13382603FF804A5A487F001F01F04A5A487F4D5A487F4D5AB57E4D5AA24C
5B5E4C5B95CDFC4C5A6C49133F4C5A4A495A6CD9F0035B9026FEE00F5B271FFF807F5B6C
90B65A6C4BCEFC6C5D6C15F06C5D013F91CFFC010F13FC010013C06B7C7CD575>I<C012
FCA86E0880B86F>123 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fm cmr10 10 77
/Fm 77 128 df<942603FFF0913803FF8094B500FE023F13E004076E6C48B512F8043FDB
E0078093B76C488003039028FE007FFC3FEB03FF030F01E0902707FE7FF81480033F0180
010149484813C04B48C70007B5EAC00FDBFFF84A028014E04A494A4A5A4A13C04A494A5B
4A90C85C5C4A485F4A487313C0A24A486F496D138077130049496FED00FC7393C7FC735B
495BB3A7BE12FEA6D8000301E0C8000301E0C9FCB3B3B3A7496D4B7F87013F01FE033F13
FFB86CB812F0A66B7C7CFB67>11 D<943803FFE0057F13FE0407B67E043F8193B712F003
0349C66C7E030F01E0EB0FFC4B0180EB03FEDB7FFEC8FCDBFFF8157F4A49913803FF804A
01C05C4A494A7F4A90C85A4A5E4A5A4A5AA24A484B7F735B495BA2735B495B7390C8FCF1
03FCF100F097C9FCB3963803FFE095B6FCBCFCA6D8000301E0C8121F8585A285B3B3B3A3
496D4B7FA2013F01FE033F13FEB86CB81280A6597C7CFB62>I<943803FFF094B6FC0407
EDE0E0043F15FF93B8FC03039038FE001F030F01E01307033F01805B4B48C75AEDFFF84A
495C4A13C04A5B4A90C8FC5C4A5A4A4881A24A488185494981A3495BB3A7BCFCA6D80003
01E0C81203B3B3B3A7496D4B7FA2013F01FE033F13FEB86CB81280A6597C7CFB62>I<94
2603FFE0923803FFE094B500FC037F13FE040702FF0207B67E043F03C0013F8193B76C90
B712F0030349C6D9F00349C66C7E030F01E090260FF80F01E0EB0FFC033F0180902603FC
1F0180EB03FE4B48C826FE7FFEC8FCDBFFF892267FFFF8157F4A490207B548913803FF80
4A01C04A02C05C4A494A4A4A7F4A90C84891C85A4A644A484B5B4A485FA24A484D4B7F79
5B49495F85795B49496F5B737190C8FC73EF03FC73EF00F09DC9FCB39C3803FFE09BB6FC
C2FCA6D8000301E0C8000301E0C8121F8B8BA28BB3B3B3A3496D4B6D4B7FA2013F01FE03
3F01FE033F13FEB86CB86CB81280A6897C7CFB92>I<EA03F8EA0FFE487E4813804813C0
A2B512E0AA6C13C0AB6C1380AC6C1300AC6C5AAB6C5AAC6C5AAB6C5AA7C8FCAFEA03F8EA
0FFE487E4813804813C0A2B512E0A76C13C0A26C13806C13006C5AEA03F8137E71FD31>
33 D<D803F815FED80FFE913803FF80486C4A13C0486D4913E0486D4913F0A2B56C4913
F8A26E15FCA46E15FE6C81A26C816C81D80FFE6E13BED803F8913800FE3EC71500A60101
167E4A157CA3010316FCA24A15F8A2010715014A15F0010F1503A24948EC07E0A249C8EA
0FC0A2017EED1F8001FE153F4916004848157E000316FE48484A5A495D48484A5A48484A
5A48C8485A001E6F5A000C6FC7FC37357AF958>I<EA03F8EA0FFE487E4813804813C0A2
B512E0A214F0A414F87EA27E7EEA0FFEEA03F8C7FCA6130114F0A31303A214E0A2130714
C0130FA2EB1F80A2EB3F00A2137EA25B485A1203485A5B485A485A48C7FC121E120C1535
71F931>39 D[<EE0F80161F163FEE7E0016FE4B5A4B5A4B5A4B5A4B5A4B5A157F4BC7FC
4A5A5D14034A5A4A5AA24A5A143F5D4A5A14FF92C8FC5B5C1303495AA2130F5C131F5CA2
495AA2137F5C13FFA25C5AA34890C9FCA3485AA4120F5BA3121FA25BA2123FA45BA2127F
A85B12FFB3A8127F7FA8123FA27FA4121FA27FA2120FA37F1207A46C7EA36C7FA37E80A2
137F80133FA26D7EA280130F801307A26D7E1301807F81147F6E7E81141F6E7EA26E7E6E
7E1401816E7E6F7E153F6F7E6F7E6F7E6F7E6F7E6F7E167EEE3F80161F160F>41
176 112 259 68 I[<127812FC127E7E7F6C7E6C7E6C7E6C7E6C7E6C7E7F6D7E6D7E131F
806D7E6D7EA26D7E8013016D7E81147F81143F816E7EA281140F811407A26E7EA2818082
A28082A36F7EA36F7EA482151FA382A2150FA282A41507A282A8811780B3A817005DA85E
A2150FA45EA2151FA25EA3153F5EA44B5AA34B5AA35E5CA293C7FC5C5DA24A5AA2140F5D
141F5DA24A5A5D147F5D14FF92C8FC495A13035C495AA2495A495A5C133F495A49C9FC5B
485A485A485A485A485A485A90CAFC127E5A1278>41 176 118 259
68 I<EA03F8EA0FFE487E4813804813C0A2B512E0A214F0A414F87EA27E7EEA0FFEEA03
F8C7FCA6130114F0A31303A214E0A2130714C0130FA2EB1F80A2EB3F00A2137EA25B485A
1203485A5B485A485A48C7FC121E120C1535719231>44 D<B812FCAB2E0B7EAB3B>I<EA
03F8EA0FFE487E4813804813C0A2B512E0A76C13C0A26C13806C13006C5AEA03F8131371
9231>I<923801FFC0031F13FC92B67E020315E0020F15F84A9038007FFCDA7FF8EB0FFF
DAFFE001037F49496D7F49496D7F4948C8EA3FF0010F8349486F7E49486F7E4A1507017F
834A8101FF8448496F7FA348496F7FA24885A34890CA6C7EA34885A44885A249173FA300
7F85A800FF1A80B3AC007F1A00A76D5F6C61A56C61A46C6D4C5AA36C61A26C616E5DA26C
616E5D6C616E5D017F95C7FC6D6C4B5AA26D6C4B5A6D6C4B5A6D6C4B5A6D6D4A5A6D6D49
5B6D01F001075BDA7FFC011F90C8FC6EB4EB7FFE020F90B512F8020315E002001580031F
01FCC9FC030113C0497979F458>48 D<16F8150115031507151F153F15FF1403141F91B5
FC131FB7FCA214FD14E1140113E0C7FCB3B3B3B3B24A7FA24A7F027FEBFFE0007FB912E0
A63B7571F458>I<ED3FFE0203B512F0021F14FE027F6E7E91B712E0010316F849D9803F
13FE90270FFC00077FD93FE001008049486E7F49C8001F7F496F7F48486F7F48486F7F48
48834981000F707F4848188049821AC0003F8390CA14E05A01FC826D18F07FB56C81801A
F880A76C5BA26C5B6C90C9FCEA07FCD801F018F0CBFC60A21AE060A21AC0601A80A295B5
1200615F614D5B615F4D5B614D5B4D90C7FC604D5A4D5A4C5B604C5B4C5B4C90C8FC4C5A
5F4C5A4C5AEEFFC04B5B4B90C9FC4B5A5E4B5A4B5A4B5A4B5A4B5A4A90CAFC4A4816F85D
4A5A4A48ED01F04A5A4A5A4A5A4AC9FC4948160302F817E0495A495A49481607495A49CA
FC017EEF0FC049173F48BAFCA25A5A5A4819805A5ABBFCA31A00A3457577F458>I<9238
07FFE0037F13FE0203B612C0021F15F84A15FE9126FFFC017F499026C0003F13C0D907FE
C7000F7FD90FF86E7FD91FE002017F49488249C97F017E707E4984484882D9FF80834813
E06E836E816E83487FA4805CA37E5C6C495F6C495D6D5AEB1F8090CA5CA24E5BA297C7FC
95B5FC614D5BA24D5B614D5B4D5B4D5B4D90C8FCEF7FFC4C485A04075B0307B512C00203
B6C9FC17FC17E017FEEFFFC091C7000113F89338003FFE94380FFF80717F7113F0717F71
7F727E727E86727F86727FA286727FA286A28684A31B80A2EA01F8EA07FE381FFF80487F
A2487FB57EA31B00A360625C7E4A5F4A5D91C95CEA3FFC01804C5B6C7E6D4C5B6C6C606C
6C4C5B6C6C93B5C7FC6CB44B5B6C6D4A5BD97FE04A5BD93FFC4A5B6DB46C013F5B6DD9F8
01B51280010390B7C8FC010016FC023F15F0020F15C002004AC9FC030F13C0497979F458
>I<F003E04E7E180FA2181F183FA2187F18FFA25FA25F5FA25F5FA25F5FA217FDEE01F9
A2EE03F1EE07E1A2EE0FC1EE1F81A2EE3F01163E167E16FCA2ED01F8ED03F0A2ED07E0ED
0FC0A2ED1F80ED3F00A2157E5DA24A5A4A5AA24A5A5D140F4A5AA24AC7FC147EA25C495A
A2495A495AA2495A495AA249C8FC137EA25B485AA2485A5B1207485AA2485A48C9FCA212
7E5ABC12F8A6CA000301F0C7FCB3A34D7F4D7F057FEBFF800307B812F8A64D777BF658>
I<0160170E01FC173E01FFEE01FE02E0150F02FE15FFDAFFF8011F5B92B75A6161616196
C7FC6018F86018C095C8FC17FC17F001FD1580D9FC1F01F8C9FC91CCFCB3A4923803FFC0
033F13F84AB6FC020715C04A15F091263FFE017F913A7FE0003FFCDAFF80EB0FFFD9FDFE
C76C7FD9FFF86E7F4A6E7F4A804A824A6F7E91C97F49163F8549707E137890CA1480841A
C0A31AE0A2841AF0A51AF8A413C0EA07F8EA1FFE487E487FA2B57EA31AF0A44A5D1AE091
C9FC6C5A01F818C0D87EC05E90CA1480123E003F1900606C6C5F6D167F000F606D4C5A6C
6C4B5B6C7E6C6C4B5B6D4B5B6C6C4B5BD97FC0023F90C7FCD93FF0ECFFFED91FFC010313
F890270FFFC01F5B010390B612C06D5E6D6C4AC8FC021F14F0020714C09126007FF8C9FC
457977F458>I<EFFFF0040F13FF047F14C04BB612F0030781031F9038C01FFC923A7FFC
0003FEDBFFF0EB00FF4A01C0EC3F80020749141F4A48C86C7E4A4815174A484AB47E4A48
5C4A485C49494A7F495B604990C8FC495A131F5C133F49486F5BA249486F5B725B487190
C7FC4A92C9FC5AA25A5CA25AA25C5AA35AEE3FF80303B57E030F14F048494814FC037F80
9239FFC03FFF912701FE000713C0DA03F801017FDA07E06D7F4A48EC3FF8B5496E7E4AC8
7F023E6F7E844A8302786F7F02F8834A81864A8384865CA286A24A167F86A591CA14807E
A87EA280A37EA21B00A27EA36C6D4C5AA36C61A26C6D5F606C616E5F017F5E6E5F013F4C
5B80011F4C90C7FC6D6C4B5A6D6C4B5A6D6D4A5A6D6D4A5A6D01F0495BDA7FFC01075B91
273FFF807F5B6E90B548C8FC02075D6E15F0020015C0031F91C9FC030113E0497979F458
>I<EA03E0A27F487E13FEEBFFF891BA12E0A35AA31BC01B801B005A626262A201F0CAEA
07F001804D5A48CB121F624F5A003E4EC7FCA219FE007E4D5A007C1703614E5A4E5AA248
4D5A4E5A187FCB90C8FC18FE4D5AA24D5A4D5A170F604D5A4D5AA24DC9FC5F5F4C5AA24C
5A1607A24C5AA24C5AA2163F5F167FA24C5AA25DA24B90CAFCA25DA34B5AA2151FA3153F
5EA2157FA315FFA35CA35EA25CA55CA75CAE6E5BA26E5B6E5B6E6CCBFC4B7B76F658>I<
923803FFE0033F13FE92B612C0020715F04A15FC023F9038007FFFDA7FF001077FDAFF80
010113E0D903FEC86C7E49486F7ED90FF0ED0FFC4A6F7E49481503494882017F707F91CA
FC498449177F000185193F485A86191FA21207A37FA27FA26E163F62806E167F6C6D5F6E
16FF02FE5F6E5D6C02C093C7FC6F4A5A6C02F814076F5D6D01FF4A5A04C0495A6D6EEB7F
E06D02F8495A6D6E485B9326FF03FEC8FC6DED8FFC6DEDFFF86D16E06D6C15806E92C9FC
6E81020715E00201816E15FC8402036F7E020F824A16F0DA7FF0819126FFC07F800103D9
001F8049486D804948010381D91FF06D8149486D6C804948141F49486E804890C8000380
488248486F6C7F49824848040F7F8448481601727F48488385007F844971138085A200FF
845B85A385A31B00A27F127F4F5A7FA2003F616D17036C6C6019076C6C4D5A6C6C606D17
1F6C6D4C5A6C6DEEFF806C6D4B90C7FCD97FF8ED07FE6D6C4B5A6DB46CEC7FF86D01E090
3803FFF0010301FE013F13C06D90B75A6D6C4BC8FC021F15F8020315E0DA007F91C9FC03
0713E0497979F458>I<923803FFE0033F13FE4AB67E020715E04A15F8023F9038807FFC
913A7FF8000FFF902601FFE001037F49496D7F4990C87F49486F7E49486F7E013F161F49
48824A6F7E01FF707E485B48854A81488548834A835A865A84864890CAFCA286A3B5FC86
A2197FA386A81B80A26C95B5FCA57E6E5DA27EA26C5FA26C7F607E6E5D6C846C6D151F01
7F163E806D6C157C011F16F86D6C020115006D6C6CEB03F06D6DEB0FE06D01F0EB3FC090
3B007FFE01FF806EB61200020F14FC6E4A5C020002E013FFDB0FFEC7FC92C9FC62A44E5B
A362A24E5BA262D97FC05D497E486D5F486D4B90C7FCA2486D4B5AA24E5A61187F614A4B
5A4D5B6C495C4A5E4A4A90C8FCD801FCC8EA1FFE4D5A6C6C4B5AD97F8049485A02E00107
13C06DB4017F5B6D90B548C9FC01075D6D15F0010015C0021F49CAFC020113E0497979F4
58>I<EA03F8EA0FFE487E4813804813C0A2B512E0A76C13C0A26C13806C13006C5AEA03
F8C8FCB3B3A2EA03F8EA0FFE487E4813804813C0A2B512E0A76C13C0A26C13806C13006C
5AEA03F8134C71CB31>I<EA03F8EA0FFE487E4813804813C0A2B512E0A76C13C0A26C13
806C13006C5AEA03F8C8FCB3B3A2EA03F8EA0FFC487E487E481380A2B512C0A414E0A37E
A27E7E7EEA03FBEA0003A6130714C0A4130F1480A3131F14005BA2133E137E137C13FC48
5AA2485AA2485A485A121F5B48C7FC121E120C136E71CB31>I<003FC012C0C112F0A600
3F1FC0D4FCB3AA003FC012C0C112F0A6003F1FC0742C76C189>61
D<197C19FE4E7EA34E7FA34E7FA34E7FA34E7FA34E7FA34E7FA395B57E18FDA205018018
F8A20503814E7EA20507814E7EA2050F814E7EA2051F814E7EA2053F814E7E4D81177E85
05FE815F850401824D7FA20403834D80A20407834D80A2040F834D80A2041F834D80A204
3F8394C87EA24C83047E81A204FE834C81A20301844C81A20303854C82A20307854C8293
BAFC4B85A34B85A2DB3F80C9000F7F93CAFC874B85157E8703FE854B83A20201864B83A2
0203874B84A20207874B84A2020F874B84A2021F874B84A2023F87027F85A24A6C86497F
4988010F01F84E7F013F01FE4E800003B600C04CB612F0B700FC4BB812FEA6777E7AFD84
>65 D<BB12FEF2FFF01BFEF3FFC01CF01CFCD8000702F0C8000F13FF010002C00301806E
496F6C13E06E727F090F7F757F757F757F8A87767F8A888AA2888AA3767FAA525BA3525B
A266646699B55A639BC7FC515B515B515B515B097F13C098B55A080349C8FC080F5B087F
13F093B9128009FCC9FCA2F3FFC01CF80480C8000313FE9739007FFF80091F13E0090713
F8757F090013FF767F8A767F767F767FA2767F8A888A881F80A27614C0A41FE0AA1FC0A2
64A21F80641F0064666466525B64525B99B55A515C515C090F91C7FC4A063F5B91B56C93
B512F8010702F003075CBE12C09AC8FC1CFC1CF099C9FC1BF06B787AF77C>I<952607FF
F0ED01C095B61503050F03E01407057F03F8140F0403B712FE040F706C131F043FDA8007
01E0133F93B500F8C76C6C137F4B02C0EC1FF8030749C8D807FE13FF031F01F8923801FF
014B01E09238007F834B0180EE3FC392B5CAEA0FE7020301FC71B5FC4A49834A49834A49
834A5B4A498491B5CC7E4949855D4949855B4949854B855B494985A2495B90B58692CEFC
481D7FA2485B1E3F5A5CA2481D1F5C5AA31E0F485BA4489AC7FCA35CA2B5FCB27EA280A3
7EA2F607C0A26C7FA47E806C1D0F1F80807EA26C6D1B1F1F007E6F626D1C3E6D6D1A7EA2
6D6D1A7C6D1CFC6F626D6D19016D515A6D7F6F4F5A6D6D4F5A6E7F6E6D4E5A6E6D4EC7FC
6E6D187E6E6D606E6D1701020001FFEF07F86F6D4C5A6F01E0EE3FE06F01F8EE7F800307
01FE4B48C8FC0301D9FFC0EC07FE6F02F8EC3FFC043F903AFFC007FFF0040F91B612C004
0394C9FCDC007F15FC050F15F005001580060701F0CAFC6A8076FB7F>I<BCFC1BF81BFF
1CE01CF81CFED8000702F8C8003F6D7E010002E00301806E49DB003F13F06E060F7F0903
13FE09007F767F0A1F7F767F767F767F767F767F777E777FA2777F777FA2777F8B898B89
8B898BA2781380A220C0A28A20E0A320F0A28AA320F8A620FCB020F8A620F0A36620E0A3
20C066A22080A29BB51200A267656765676567535BA2535B535B5390C7FCA2535A525B52
5B0A0F5B525B525B99B5C8FC09035B090F5B4A063F13F091B56C4BB55A010702F8033F14
80BD48C9FC1CF81CE099CAFC1BF898CBFC76787BF786>I<BF12E0A48AA2D8000702F8C9
123F010002E016006E49171F6E19071C0188F53FF81D1FA21D0F1D07A21D03A2777EA21D
00A31E7CA31E7EA21E3EA4F207C0A28AA49BC7FCA31A0FA41A1FA21A3FA21A7FF101FF19
07197F93B8FCA604C0C77E19071901F1007F1A3FA21A1FA21A0FA41A071FF8A3F601F0A5
97C9FC1E031FE0A41E07A21FC0A21E0FA31E1FA21F801E3FA21E7FA21EFF651F0065651D
1F659AB5FC525B4A190F91B56C177F010702F8041FB5FCBFFCA366A36D787BF778>I<BF
1280A41EC0A2D8000702F8C9FC010002E016036E49EE007F6E191F1C071C017613E01D7F
1D3FA21D1F1D0FA3F507F0A21D03A31D01A31EF8A21D00A6E00F80147CA41E00A61A1FA3
1A3FA21A7FA21AFF1903190F197F93B8FCA604C0C77E190F190319001A7FA21A3FA21A1F
A31A0FAA97CAFCB3A8825C91B57E010714FFBA7EA666787BF773>I<952607FFF016E095
B66C1401050F03F01403057F03FC14074CB8FC040F05C0130F043FDAC0076D131F4C01F8
C7D87FF8133F4BB500C0EC0FFC030749C8D803FE137F4B01F8923900FF80FF033F01E0EE
3FC14B49EE1FE192B5CAEA0FF34A4971B5FC020701F817014A49834A5B4A49844A498491
B5CC7E5D4949854987495B494985A2494985495B89495B90B51B7F92CEFC481D3FA2485B
1E1F5A5CA2481D0F5C5AA31E07485BA4489AC8FCA35CA2B5FCB27EA26E0507B812FEA37E
A397C70007ECFC006C6DDF007F13F08967896C7FA27EA2807EA26C7FA26C80A26D7F7F81
7F6D7FA26D7F6D7F6D7F6D63816E7F6E6D606E7F6E6D95B5FC6E13FC02016D5F6E6D6CEE
03F96F6DEE07F86F01F093380FF07F030F01FC93383FE03F6F01FF9338FFC01F030102E0
0203EB800F6F6C01FC91391FFE0007709028FFE001FFFC1303040F91B600F0130104014D
1300706C93CAFC050F15FC050015C0060701F8CBFC778076FB8A>I<B900F00107B91280
A6D800074ACA003F02F0C7FC010002F0050714806E497191C8FC6E49715BB3B3AA93BBFC
A604C0CA1201B3B3AE4A6D4D7F91B56C4D80010702FE053F14F0B900F00107B91280A679
787BF784>I<B912FCA6D8000392C7FCD9007F13F86E5B6E5BB3B3B3B3B3AC4A7F4A7F01
03B6FCB912FCA636787CF73F>I<0203B912C0A691C70003ED8000DC003F01FCC7FC170F
6183B3B3B3B3A8EA01F8EA0FFF487F487F487FA2B57EA44D5BA44A5E6C5E4A5E4A5C6C90
C85C01F85DD81FC094C8FC6D4B5A6C6C4A5B6C7E6D4A5B6C6C4A13E06C6C6C011F5B2600
7FF0495B90283FFE01FFFEC9FC6DB65A010715F0010115C0D9003F49CAFC020313C04A7C
79F75A>I<BAFCA6D8000792CDFC010014F06E5B805EB3B3B3AAF50F80A5F51F00A765A2
1D3EA21D7EA41DFEA21C0165A21C031C07A21C0F1C1FA21C3FF4FFF863631B0F1B3F4A95
B5FC91B56C1507010702F892B6FCBEFC65A561787BF76E>76 D<B700C0097FB612F07098
B7FCA27062A27062D8000756C7FC010020F0027E6DE007DF5B023E676F6CF20F9FA36F6C
F21F1FA36F6D193EA26F6D197CA36F6D19F8A26F6DF001F0A36F6DF003E0A36F6DF007C0
A2706CF00F80A3706CF01F00A3706D173EA2706D5FA3706D5FA2706D4C5AA3706D4C5AA3
706D4C5AA2716C4C5AA3716C4CC7FCA2716D153EA3716D5DA3716D5DA2716D4A5AA3716D
4A5AA2716D4A5AA3726C4A5AA3726C4AC8FCA2726D133EA3726D5BA2726D5BA3726D485A
A3726D485AA2726D485AA3736C485AA3736C48C9FCA27313BEA37313FCA2735BA2147F73
5B4A7EA2496D6F5B010701F0527F011F01FC6F494C7F48B600C00803B512FEB86C067FB8
12F0745AA274C8FCA21A1E94787AF7A1>I<B700C094B812808282A28282D800010801ED
C000D9003F6DDD001F01FCC7FC70060713F071050113C0775B023E806F6D72C8FCA26F6D
183E6F7FA26F7F6F7F81836F808184707F707FA2707F707FA2707F707FA2708070808385
717F717FA2717F717FA2717F7180A27180727F8486727F8486727F727FA272807280A273
7F737FA2737F737F8587737F7380A27380747FA2747F747FA2747F747F8688741480861D
C07513E07513F0A27513F87513FCA27513FE7513FFA27514BE7514FE88A28888A28888A2
8888A2881D7F027F1A3FA24A6C191F1D0F497F010701F01907011F01FC190348B612C0B8
6C17011D00A21E7E1E3EA279787BF784>I<95381FFF800503B512FC053FECFFC04CB712
F8040716FE041FD9F8016D7E047F902680001F13E0922601FFFCC7000313F8030701F002
0013FE4B01C0ED3FFF033F90C9000F13C04B48707F4B48707F4A01F004007F020749EF7F
FE4A49717E4A49717F4A90CB6C7F4A48727F02FF874B844949727F49884949727F494973
7EA24949737F49894B85498992CD7E90B588A24849747FA2488A4A86488AA24A86488AA2
481F80A24A86A2481FC0A4481FE04A87A5B51EF0B16C6D98B512E0A66C1FC0A26E62A26C
1F80A36C6D501400A36C666E62A26C666E626C666F616C66A26D6D4F5B6D656F616D656D
6D96B5C7FC6F606D646D6D4E5B6F606D646D6D4E5B6E6D4D5B6E6D4D5B6E6D4D5B6E6D94
B5C8FC6E6D4C5B6E6D4C5B6E6D4C5B6E6C6C6C031F13E06F6D4B5B030F01F092B5C9FC6F
01FC02035B0301D9FF80011F13F86FDAF801B55A043F90B712C004074CCAFC040116F8DC
003F15C0050302FCCBFCDD001F1380748076FB89>I<BB12FCF2FFE01BFE757E1CF01CFC
D8000702F8C86C7F010002E003036D7E6E490300806E061F13F0757F09037F757F757F76
13801EC0887613E01EF0A27613F8A21EFCA27613FEA41EFFAA1EFEA45213FCA21EF8A252
13F0A21EE05213C0521380A299B51200515B515B090F5B093F13E098B55A080391C7FC08
7F5B93B912F81CE099C8FC1BF81B8004C0CDFCB3B3AA4A7F91B57E010714FEB912F0A668
787BF778>I<BBFC1AF8F2FF801BF01BFE757ED8000702F8C7000714E0010002E0DA003F
13F86E4903077F6E050113FF746C7F7513E0757F09077F89757F878975808A888AA3767F
A38AA966A3525BA266A299B55AA25191C9FC65515B515B515B515B515B5190CAFC50485A
080F13F8087F13E00707B5128093B848CBFC1BF81BC0631BE004C0C7001F13F8070113FE
736C7E081F13C0747F747F747F747F747F1B7F88757FA2757FA289A28789A589A589A589
A677EC01C0F803E0A2878AA37516077814C0874A6D1B0F91B56C706E1480010702FE7115
1FB900F08376ED3F00766D5B0A076D13FE769038FF03FC0A00ECFFF8D0003F5C0B0F5C0B
0114809A26001FFEC7FC7B7C7BF781>82 D<92260FFF80140792B500F85C020702FF5C02
1F03C05B027F15F049B700FC5B49D9F8006D5B4901C090380FFF804990C7000113C1D93F
FC9138007FE34948ED1FF302E06FB5FC4948150348498148834890CA7E4983000F845B00
1F844983123F85A2484883A285A212FF86A46D84A37FA2867F127F7F806E94C7FC806C7F
806C7F14FF15E06C14FC6CECFFC016FC6CEDFFE06C16FEEFFFE06C17FC6D16FF6D17C06D
17F06D17FC6D830101836D84023F83020F83020383DA003F82030382ED003F040381DC00
3F801703DD003F1480180F060314C084726C13E085851BF08585A28500781AF800F884A2
85A41A7F7EA56C1AF0A37E1AFF6D19E0A26D19C0617F6D1980616D19006D5F6D4D5A6D60
02C04C5A6E163FD9EFF84C5AD9C7FE4C5A9026C3FF8002035B018101F04A5B010001FE02
1F90C7FC913B3FFFF001FFFC486D90B65A4801075E020016C048023F92C8FC48020314F8
48DA001F13804D8076FB62>I<001FBF12FEA692C7000302F0C7123F4801F0020002C002
037F02806F49EC007F49C9181F498801F01C034988A249884989A390CA85A2481F80007E
1E1FA5007C1E0FA700FC1FC0481E07A6CB96C7FCB3B3B3AF95B57EA2050314F0053F14FF
92BB12C0A672777AF67F>I<B900F04AB81280A6D800074ACA0003EDC000010002F0DD00
3F01FCC7FC6E49060F13F06E49060313C0775BA27790C8FCA21E7EB3B3B3B21EFE6E63A2
82A26E1A0166A36E6D1803666E1A0770616E1A0F666E6D181F666F6C183F033F4FC9FC70
606F6D5F6F6D4C5A6F1803714C5A6F6D4C5A6F6DEE3FE06F01FE4C5ADC3FFF4B485A7001
C04A90CAFC7001F0EC1FFE040301FCEC7FF870903AFFC00FFFF0706C90B612C0051F5E05
074BCBFC050015F0061F14C0060001F8CCFC797C7BF784>I<B800FE027FB892B712FCA6
D8003F02FCC9001F4AC900031500010702E0040302E0DC007F13F86D0280704A051F13E0
6D5271138093CB080390C7FC6D6B76190170686E756088826E756088701F036E75608870
1F076E7560A2701F0F6E6A527F701F1F6E9FC8FC527F70676E213E527F70177C6E690AFC
80714C7E6F68090181527E711D016F05036F5E527E711D036F05076F5E527E711D076F05
0F6F5E527E711D0F6F051F6F5E527E711D1F6F7593C9FC093E7F71656F1F3E516D7F711D
7E6F1F7C09FC82724A6E16FC7066080183724A8070535A080383724A8070535A08078351
80721B0770030F715C5180721B0F70031F715C98C87E721B1F704B7191CAFC083E817263
70037E71133E087C81721B7E70F4807C508207801AFC7164DF81F07013C007C119C17164
07C319E1DFE3E07013E3716407E719F3DFF7C08271F3F7C007FF19FF50827164A297CA7E
A27199CBFC4F83A271634F83A271634F187FA2067F624F183FA2063F624F181FA2061F62
4F180FA2060F627248725AAE7C7DF7B5>87 D<000FBC12F81CFCA50480C8001F13F803F0
C914F092CA5A02FC4D13E04801F019C04A94B5FC0280198091CA5A494D14004961495F4F
5B496161496161494D5B634994B5FC4E5CA24E91C7FC90CA5C60484D5B626062003E5F4E
5B6295B5FC4D5C97C8FCCA5A615F4D5B615F615F4D5B6194B5FC4C5C96C9FC5E605E4C5B
605E4C5BA24C5B6093B5FC4B5C95CAFC5D5F5D4B5B5F5D4B5B4D163E5D5F92B5FC4A5C94
CAFC5C4C177E4A197C4A5B5E5C4A5B5E5C4C17FC91B5FC495C93CBFC5B49491701A2495B
4BEF03F85B495B4B17075B4B170F90B5181F485C92CB123F481A7F484918FF4A5F481907
4A5F48193F48494CB5FC4A040F14F0480503B6FC91BBFCBDFCA47E577876F76B>90
D[<B612C0A890C8FCB3B3B3B3B3B3B3B3B090B512C0A8>26 176
109 259 49 I<496C1560496C15F0496CEC01F84948EC03F04948EC07E049C8EA0FC049
151F01FEED3F804916004848157E000316FE495D48484A5AA248484A5AA248484A5AA290
C85B48150F003E5EA2007E151FA2007C93C7FCA300FC5D48153EA601FEED3F8026FBFF80
ECFFE0B56C013F13F06E15F86E15FCA26E15FE6C81A46C81A26C496D13FCA26C496D13F8
6C496D13F06C496D13E0C648C8EA3F80373566F958>I[<B612C0A8C7123FB3B3B3B3B3B3
B3B3B0B6FCA8>26 176 125 259 49 I<EDFFFC021FEBFFC091B612F8010715FE496F7E
013FD9001F13E0D97FF001037FD9FF8001007F486D6E7E6EEC1FFE486D6E7E6E8248707F
6E6E7FA2717FA2717FA26C5B856C49157F6C5B6D5A010EC9FC90CAFCA894B5FC93B6FC15
0F92B7FC0207ECFE7F023FEBFE0091B512E0010391C7FC4913F8011F13E04913804948C8
FC495A485B485B485B485B485BA24890C9FCA24848193EA312FF5BA218FFA35FA26D5D12
7F5F6D71137E6C6DDA0F9F147C6CEE1F1F6E023E6D13F86C6DDAFC0F13816C01F8D901F8
ECFFF06C01FE902607F00714E0C69028FFC07FE00314C06D90B5486C1480011F92C71400
01074AEC3FFC010002F0EC0FE0020F018091C8FC4F5179CE58>97
D<EC0FE048B5FCB6FCA6C67E130F7FA27FB3AE943807FF80057F13F80403B6FC040F15C0
043F15F093267FF8077F923BE1FF80007FFEDBE3FEC7EA1FFFDBE7F86E7FDBEFE002037F
DBFFC06E7F93C97F4B707E4B707E874B707E4B821C804B821CC01CE0861CF0A2861CF8A3
1CFCA286A31CFEAE1CFCA262A21CF8A45013F0A21CE0621CC0A25013806F18006F5E636F
4C5A6F4C5A03BE16FF033F4B5B6F6C4A5B9126FE0FE04A5B6F6C021F90C7FC9126FC03FC
4A5A6FB449B45A4A6CD9E00F13F04A013FB65A7015804A010702FCC8FC90C914F0DD1FFE
C9FC577C7CF962>I<923801FFF8031FEBFFC092B612F8020315FF020F824AD9C00713E0
DA7FFEC76C7EDAFFF8EC0FF84901E04A7E4949143F010F90C8487E494815FF8549485C49
5A13FF485B5C5A48705B5C48715A4A6F5A48715AF0038095C8FC4890CCFCA35AA35BA212
FFAE127F7FA47E80A27EF107C06C7FA26C6D160F1A806C6D161F1A006C7F6C606D6C167E
6E167C6D6C16FC6D4C5A6D01C04A5A6D6D4A5A6D6D4A5A010001FCEC3F806EB402FFC7FC
6E9038F00FFE020F90B55A020315F0020015C0031F49C8FC030113F042517ACE4E>I<F2
3F800607B5FC0503B6FCA6EF0001F0003F85A285B3AE923801FFF0031F13FE92B612C002
0315F0020F15FC4A9038E00FFE027F90380001FFDAFFF89038003FCF4949EC1FEF010701
C00207B5FC4949804990C87E4948814A824948824948825A484982A2485BA25A5C5AA248
90CAFCA45AA25BA212FFAE127FA37FA27EA37E807EA2807E6C60806C606E5E6C7F017F94
B5FC6D6C5D6D6C4B806D6CED07EF6D6DDA1FCF7F6D01E0DA3F8F13FC6D6DDAFF0FEBFFFE
6D01FCEB03FE913A3FFFC03FFC6E90B512F0020715C002011500DA003F01FC1600030301
C002E0C7FC577C7AF962>I<923803FFC0033F13FC4AB67E020715E0021F15F84A01007F
DAFFF8EB3FFF4901E0010F7F494901037F49496D7F4990C87F4948157F49488249486F7E
4948151F854849150F48845C48831A80485BA2487113C091C9FC5AA31AE048835BA312FF
90BAFCA549CCFCA8127FA37FA27EA36C7FA2F103E07E806C18076E17C07E6C6D160FF11F
806C7F6D6CEE3F00013F177E6E16FE6D6C4B5A6D6D4A5A6D01E04A5A01016D140F6D01FC
EC3FC06EB4ECFF80021FD9E00F90C7FC020790B512FC02015D6E6C14C0030F91C8FC0300
13F043517BCE4E>I<EE07FF043F13C04BB512F0030780031F8092393FFE03FE9239FFF8
07FF4AD9E00F13804A495A4A018014C04A495AA24A5A4A5A147F5D02FF6E1380A24B6D13
00496F5AEF01F894C8FC495BB3A8B812FCA6D8000301E0C9FCB3B3B3A7497F81013F13FF
007FB712F0A63A7C7BFB36>I<F23FC0963803FFF0DB0FFE020F13F892B500E0013F13FC
020702FC90B512FE021FDAFF0113E3027F9239C3FE03FF9126FFFC079038E7F80749D9E0
00EBFFE0490180013F13804990C76C130049486E5A49486E6CEB03FE013F94388001FC49
486E9038C0007001FF7113004A804884A248844A80A34884AA6C60A36E5C6C60A26C606E
5C017F5F6D6C4A5B011F94C8FC6D6C4A5A6D6C4A5A6F495A4901E0EBFFF049D9FC075B6E
B65AD93E1F92C9FC020714FC49C614E0DB0FFECAFC92CCFC13FCA67FA27FA28014E0EB7F
F891B712C06D16FF19F06D17FE737E6D846D18F06D844984011F84017F84D9FFF8C86C14
804801C015034890CA003F13C04848050F13E048481703484883003F7213F049187F485A
F23FF8A2485A1A1FA66D183F007F1AF0A26D187F6C6CF0FFE0001F1AC06D5F6C6C4D1380
6C6C6C040F13006C6D4C5A6C01F0EE7FFC26007FFC923801FFF06DB403075B6D01E0023F
5B010701FF0107B5C7FC010191B612FCD9003F16E0020F1680020003F8C8FC030349C9FC
50757BCF58>I<EC0FE048B5FCB6FCA6C67E130F7FA27FB3AE943803FFC0053F13FC94B6
FC040315C0040F8193261FF80713F893263FC0017F4CC7127F04FC6E7EDBE1F86E7EEDE3
E0DBE7C06E7FA2DBEF806E7F03FFC8FC5DA24B6F7FA25DA35DA45DB3B3A7496D4B7FA201
3F01FE033F13FEB86CB81280A6597A7BF962>I<EB07F0EB1FFC497E497E90B57EA24880
A76C5CA26D90C7FC6D5A6D5AEB07F090C9FCB3A3EC0FC048B5FCB6FCA6C6FC131F7FA27F
B3B3B3A3497FA2017F13F8B712FCA626767BF530>I<16FE923803FF804B13C04B13E04B
13F0A24B13F8A76F13F0A26F13E06F13C06F1380923800FE0093C7FCB3A3EE03F892B5FC
147FA6EC003F15071501A281B3B3B3B3A7EA07F0EA1FFC486C15F0486C5BA2B5128017E0
A24B13C0A217805D6C010014004B5A6C48495A01F8495A6C48495A3A0FFE01FFE06CB65A
6C92C7FCC614FC011F13F0010313802D9A88F536>I<EC0FE048B5FCB6FCA6C67E130F7F
A27FB3B0067FB61280A6061FECF0007291C7FC7213FC1AF01AC097C8FC6161F00FF04E5A
4E5A4E5A4EC9FC4D5AEF03F8EF0FF04D5A4D5A4D5A4DCAFC4C5A4C5A1607EE1FFE4C7E5E
93B57E03E18015E303E780DBEFE77FEDFFC304837F04017F4B7E4B804B6D7E4B6D7F15C0
717F717FA2717F717F8385717F187F85727F8486727F727FA2727F727FA286727F87496D
834E14F0013F01FC020714FEB8013FECFFF8A6557A7CF95D>I<EC1FC00003B5FCB6FCA6
C6FC131F7FA27FB3B3B3B3B3AB497FA2017F13FCB712FEA6277A7BF930>I<DA0FC09026
03FFC0923803FFC048B5023F01FC033F13FCB691B692B6FC040303C0010315C0040F6F01
0F8193261FF80701F890261FF80713F893263FC0016D90263FC0017F4CC7007F4AC7127F
C66C02FC6E6C01FC6E7E010FD9C1F86E6C48486E7E6DD9C3E0EE03E0DBC7C06ED987C06E
7F7FDBCF806ED9CF806E7F03DFC802DFC8FC03DE17DE03FE17FE4B6F496F7FA24B5FA34B
5FA44B5FB3B3A7496D4B6D4B7FA2013F01FE033F01FE033F13FEB86CB86CB81280A6894E
7BCD92>I<DA0FC0903803FFC048B5023F13FCB691B6FC040315C0040F8193261FF80713
F893263FC0017F4CC7127FC66C02FC6E7E010FD9C1F86E7E6DEBC3E0DBC7C06E7F7FDBCF
806E7F03DFC8FC15DE15FE4B6F7FA25DA35DA45DB3B3A7496D4B7FA2013F01FE033F13FE
B86CB81280A6594E7BCD62>I<EE7FF0030FB57E037F14F04AB612FC020715FF021FD9C0
1F13C091273FFC00017FDAFFF09038007FF84901C0EC1FFC49496E7E4990C86C7E49486F
7F49486F7F49486F7F4948707E01FF844A163F4849707E4885A24849707EA2481A8091CA
7E481AC0A3481AE04983A2007F1AF0A500FF1AF8AD007F1AF0A46C6C4D13E0A46C1AC06E
5E6C1A80A26C1A006E5E6C616C6D4C5AA26C6D4C5A017F606D6C4C5A6E5D6D6C4B5B6D6C
4B5B6D6D4A90C7FC010101E0EC3FFC6D6D4A5ADA7FFE903803FFF091271FFFC01F13C002
0790B6C8FC020115FC6E6C14F0030F1480030001F8C9FC4D517BCE58>I<DA0FE0903807
FF8048B5027F13F8B60103B6FC040F15C0043F15F093267FF8077F9227E1FF800013FEDB
E3FEC7EA3FFFC66CD9E7F86E7F010FD9EFE06E7F6DD9FFC002037F93C86C7F6D49834B6F
7F747E4B834B827413805D7413C01CE0861CF0A2861CF8A37413FCA57413FEAE5013FCA4
1CF862A35013F0A21CE0621CC0621C806F4C130081505A6F4C5A6F4B5BA26F4B5B704A5B
DBEFE0021F5BDBE7F04A90C7FCDBE3FCECFFFEDBE1FF01035B03E0D9E01F13F0043FB65A
701580040702FCC8FC040014F0DD1FFEC9FC94CBFCB3A5497FA2013F13FEB87EA657707C
CD62>I<DCFFE0EC0F80030F01FE141F037F6D7E0203B612E0020F6F133F4A9038F00FFC
027F90268001FE137F4A48C7127F4901F891383F80FF4949EC0FC0010F01C06E7E4949EC
03E192C813F149EE01FB49481500494893B5FC48498285485B5A4A825A4A825AA2485BA3
91CAFC5AA4485AAE6C7EA56C7FA37E807EA26E5E7E6C6D5EA26C6D5E6C7F96B5FC6D6C5D
6D6C5D6DEE07EF6D6DEC0FCF6D01E0EC1F8F6D6DEC7F0F6D6D14FE6D01FEEB07FC913A3F
FFC03FF86E90B512F0020715C002011500DA003F13FC030313C092C9FCB3A54F7FA296B5
12F80503B712FEA657707ACD5D>I<DA0FC0EB7FC048B5903803FFF8B6010F13FE4C7F4C
1480DC7FC313C0DCFE0313E09238C1F807C66C9026C3F00F13F0010FEBC7E06D14C0EDCF
807FEDDF00A203FE6D13E07113C04B6D138071130095C7FC5DA45DA55DB3B3A4497F8101
3F13FFB812F0A63C4E7CCD45>I<91260FFFC0137091B538FC01F00107ECFF03011F15C7
017F15EF903AFFFC007FFF4801C0130F4890C71203D807FC14004848157F4848153F171F
4848150FA248481507A2170312FFA317017FA27F7F7F6D92C7FC6C6C7E14E014F86CEBFF
C015FE6CECFFF06C15FE6C6F7E17E06C16F8C6826D816D81010F1680010316C0010016E0
021F15F0020015F81507DB003F13FC160F040313FE16000078167F00F8EE3FFF836C82A2
83A27E83A27EA218FE7FA26D15076D16FCA26DED0FF87F6DED1FF06DED3FE06DED7FC002
C0EB01FFD99FF001071380D90FFE90387FFE00486CB65AD8FC0115F0486C15C048011F91
C7FC48010313E038517ACE45>I<EC03E0A71407A6140FA3141FA3143FA2147FA214FF5B
A25B5B5B5B137F48B5FC000F91B612F0B9FCA5D8000301E0C8FCB3B3A2187CB018FC6D6D
14F8A317016D6D14F0A26E6CEB03E0A26E6CEB07C06E6C130F6E9038801F806E9038E07F
006EEBFFFE6E5C6E6C5B031F13E003011380366E7DEB44>I<DA0FE0EE0FE048B54BB5FC
B692B6FCA6C66CEE007F010F170F6D83A26D83B3B3A761A461A3617F61A26F5D6D17FB87
6E6CEC01F3DE03E37F6E6CDA0FC313FF6E6CDA1F83ECFF806E6C6CEB7F036E9038F003FE
6E90B512FC6E15F86E6C14E0030F0280EDC0000300D9FC0001F8C8FC59507BCD62>I<B7
00F8027FB512FCA6C66C49C8000F1480011F01F80303EBFC006D496F13F06D715B6D4970
5A6F5F6D96C7FC1A7E816D187C6F16FCA2027F5F6F1501023F5F8119036E5F7014076E5F
A270140F6E5F70141F6E94C8FCA2705C6E163E70147E6E167CA27014FC037F5D70130103
3F5DA27013036F5D17806F4A5AA2EFC00F6F5D17E0181F6F92C9FC715A6F143E17F8187E
6F147CEFFCFC047F5BA217FF705BA2705BA3705BA2705BA37090CAFCA2705AA3705A1778
564E7DCB5D>I<B7D8F03FB600F8013FB6FCA6C602FCC7003F49C7000314E0013F01F002
0F01F0020014806D496E4992383FFE006D496E715A6D4E5E726D6F5A6F636D82745E816D
057F5F866F1A1F6D9AC7FC866E6C03FF163EA274157E6E6C4A177CA26F7015FC6E4B5F07
E77F7018016EDB07C35E8770010F16036E04815E8770011F16076E04005E877049160F6E
033E017F5D75131F6E6D017E94C8FC067C133F70705B037F02FC163E4E6D7E70187E033F
4948010F147C87DCFF0317FC6F4A6D5C1C80058716816F4A6D5C1CC105CF16C36F4A6D5C
1CE36F01FFEEE7C095C8FC1CFF6F614D81A26F496F90C9FCA370486F5AA370486F5AA370
486F5AA2040F5F4D150370486F5A784E7DCB7F>I<007FB600F80107B612F8A6D8003F02
E00101ECFE00010702806D6C13E0010191C814806D496F48C7FC027F17F86E6C5E1AC06E
6D5D6E6D4AC8FC6E6D147E19FE6E6D495A6E6D5C6E6D495A4E5A6F6C130F6F6C495A6F01
805B4EC9FC6FEBC07E6FEBE0FE6F6D5AEFF1F86FEBFBF06F13FF705B60705B82707FA270
7F707F845E844C7F93381FBFFF163F051F7FDC7E0F7F4C7E0301814B486C7F4C6C7F4B48
7E4B4880031F6E7E4B486D7E93C77E037E824B6E7F02016F7F4A48804B8202076F7F4A48
6E7F021F167F027F8302FF707E010385010F6D4B7F013F6D92B512F00003B56C020314FE
B7021F91B5FCA6584C7ECB5D>I<B700F8027FB512FCA6C66C49C8000F1480011F01F803
03EBFC006D496F13F06D715B6D61745A6D96C7FC6F167EA26D187C6F16FC027F5F811901
023F5F6F15036E5F8219076E5F70140F6E5F826E4CC8FCA2705C6E163E70147E6E167CA2
7014FC037F5D701301033F5DA27013036F5DEF80076F5DA2EFC00F6F5DEFE01F6F92C9FC
A2715A6F143EEFF87E6F147C17FC18FC047F5B17FF705BA3705BA2705BA3705BA27090CA
FCA3705AA2705AA25FA216015F16035FA216075F160F5FA2161FD807E092CBFCD81FF85C
486C143E487E167EB5147C16FC5E4B5A15034B5A5B007F4A5A49495A6C4849CCFC01E013
FF6C48485A390FF80FFC6CB512F06C5C6C5C6C6C90CDFCEB0FF856707DCB5D>I<000FB9
12FE85A402FCC85B02C04A5B4848C85A495F494B5B494B5B495D495F4D5B495D96C7FC4D
5A90C8485B5E604C5B5E485F003E4B5B4C5B5E95C8FC4C5A4B5BC85A5F4B5B5D5F4B5B4B
5B5D94C9FC4B5A5C5E4A5B4A5B4AEE0F805E4A5B5C5E4A90C8EA1F004A5A5B5D495B495B
5B4B5D495B5B5D4990C9127E495A4818FE5C484915015A4A1503484915074849151F4817
7F4AEC01FF4890C8001F5BBAFCA47E414C7BCB4E>I<BD12FEA5570580B058>I<D807F0EC
01FCD81FFCEC07FF486C4A1380486C4A13C0A2B56C4913E0A26E5BA44A7FA26C90C76C13
C0A26C486E13806C486E1300D807F0EC01FC33126EF558>127 D
E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fn cmbx12 14.4 26
/Fn 26 124 df[<F61F80F63FE0F67FF01EFF5313F8A265A3651FF065A21FE0651FC065
A21F80651F009AB5FCA266646664A266646664A266646664A266649BC7FC99B5FCA26563
65A2636563A265636563A265636563A29AC8FC98B5FC6462A264626462A264626462A264
626462A299C9FC97B5FC6361A263616361A263616361A263616361A298CAFC96B5FC6260
A262606260A262606260A262606260A297CBFC95B5FC61A25F615FA2615F615FA2615F61
5FA2615F96CCFC94B5FCA2605E605EA2605E605EA2605E605EA2605E95CDFC93B5FCA25F
5D5F5DA25F5D5F5DA25F5D5F5DA25F5D94CEFC92B5FCA25E5C5E5CA25E5C5E5CA25E5C5E
5CA25E5C93CFFC91B5FCA25D5B5DA25B5D5BA25D5B5D5BA25D5B5D5BA292D0FC90B5FC5C
5AA25C5A5C5AA25C5A5C5AA25C5A5C5AA291D1FCB5FC5BA35BA26C5A5B123FEA0FC0>
109 253 112 317 142 47 D[<197F953801FFC06060181F6095B5FC1703170F173F4CB6
FC160F167F0307B7FC92B8FC147FBBFCA616F71687EDF80715001480C9FCB3B3B3B3B3B3
B3A2001FBE12F0AA0480C81203>100 166 107 293 142 49 D[<94380FFFFE0403B612
F8043FEDFF800303B812F8030F17FF037F18E04ABA12F8020719FE021F737E027F1AE091
BC7E49DB000716FC010702F0D9007F81490280020F6F7E4901FCC80003824901F06F8249
496F6C8190B5008070814891CA6C8102FC050781484983484971818B4801FF718203E083
486E718103FC87486E838B486E8370868782B78787828B87A4208087A36C5DA36C5D6C92
CBFCA26C5C6C5C6C5C6C4A5F6C6C13C0D90FFECB170090CDFCA3515DA3515DA2676367A2
515DA2515D67639CC7FC98B65AA2505D66505D505D66505D5092C8FC65505C505C6597B6
5A4F5D4F5D4F4AC9FC644F5C4F5C4F14C04F5C96B6CAFC4E5C4E14F8634E5C4E14804E91
CBFC4E5B4E13F895B55A4D5C4D14804D91CCFC4D5B4D49933803FF804D5B4D13E094B55A
4C4A4C13004C91CAFC4C5B4C13F84C5B604C495F4C5B4C48CB5B4B5B4B5B4B49181F4B5B
4B13804B90CCFC4B48193F4B48624A49197F4A5B4A01C019FF4A4995B5FC4A90BCFC5C4A
6491BEFC5B5B5B5BA25B49655B90BFFC5A5A5A5A5A48665AC0FCA667A4>113
166 114 293 142 I[<F57FE0537E527F646464A2646464A299B5FC636363A2636363A2
6398B6FC62A262626262A2626297B7FCA26161616187F11FFE193FF17FFC1AF8F1FFF04E
13E0601AC04E13804E1300604E5A614E5A18FF4D5B614D5B4D5B5F96C7FC4D5A4D5A177F
4D5A604C5B5E4C5B604C90C8FC4C5A163F5F4C5A4C5A5D4B5B5F4B5B5D4B90C9FC5E4B5A
4B5A15FF5E4A5B4A5B5C4A5B93CAFC4A5A4A5A147F5D4A5A495B5B495B5D4990CBFC5B49
5A5C495A495A5A5C485B485B5A4890CCFC5B485A127F485A90C112F8ABCD000103F8C8FC
B3AB050FBC12F8AA08FCC81207>125 166 120 293 142 52 D[<95387FFFF8050FB612
E094B8FC040717E0043F17FC93BAFC030319C0030F19F0033F19FC4B9126C0007F804AB5
00F0C700036E7E4A0280DA007F804A01FCC9000F804A01F070804A490401804A0180706C
7F4A90CB6C7F4B844A48727F4949728049864B8749864B72805B89494987A24987A28BA2
498781A390B57EA28181A2816F6C6082706216F88204FF6005C06105F094B5FC836D03FE
61716C5D724B5C18F006FC4B91C7FC6D04FF4B5B735C07E04A5B6D05F84A5B07FE91B55A
6D715BE0C0035C6DDEF0071480E0F81F91C8FC6DDEFE3F5B6D95B65A1DF06D636E1A809A
C9FC6E19FC6E19F06E856E19FE6E737E6E866E1AF0033F19FC6F850307737E6F86030086
030386030F86033F864B864ABDFC0207884A02EF85023F0283854A02008591B500FC7F49
4A011F8401074A010784494A1301494A6D844C023F834991C8120F49496F188090B54815
01484A6F6C17C04B161F4885484A040317E04B1600481A3F4B7116F0481A0792CB120148
861C3F4A070F15F84887884A19008989B587A24A8689A289A289A220F089A38020E07EA3
6E1DC0657E6E1D80A26C6E4F1400A26C6E4F5B676C6E616F636C6E4F5B6C6E616F4F5B6C
6E96B55A6D6E05035C6D02E04D91C7FC6D6E051F5B6D02FC057F5B6D02FF4CB55A6D03E0
03075C6D03FC037F5C6D6CDAFFE0011FB612806E92B9C8FC020F1AFC02031AF002001AC0
033F96C9FC030718F8030018C0040F4CCAFC040016E0050002F0CBFC>117
169 116 293 142 56 D[<95387FFFF0053FB67E0403B712F8041F16FF93B912C0030318
F0030F18FC033F18FF4B19C04AB6D8FC00814A0380011F14F8020F4AC70007804A02F802
01804A4A6E804A02C06F8091B6486F804992C96C80494A7080497380494A82494A854973
80495C758090B6488648878B5A7680485D488AA28B5A76805A4C86A3488AA32080A3B7FC
20C0A288A320E0A620F0A664A27EA220F8A46C63A46C6F5FA37E99B7FC7EA26C62826C62
7E636D806D61826D616D6EEE3FEF6D6EEE7FCF6D19FF6D6E4B138F6D6F5C6E02E04A130F
6E6EDA1FFE16F06E02FCEC3FFC6E913AFF8001FFF8020392B6FC6E18F06E6C17C0031F17
8003071700030104FC17E0DB003F15F0040715C0DC007F49C75ADD0003C8FC95C916C0A5
2080A3200064A267EC7FF0903803FFFE496D63496E5F4980496E6249806790B66C94B6FC
674881515DA2675192C7FCA2666366515C5E515C6C4B4C5C515C4C614C93B6FC6D4A4B92
C8FC93C9485C6D494C5C03F0041F5C6D01804C5C6F4C5C6D01F04BB612806D01FC030792
C9FC03FF031F5C6D02E091B612F86D02FF010F5D6D92B812C06E96CAFC021F606E18F002
0318C0020095CBFC033F16F803071680DB007F02F8CCFC040349CDFC>117
169 116 293 142 I<EB03FE90381FFFC0017F13F048B512FC48804880481580A24815C0
4815E0A24815F0A3B712F8A96C15F0A36C15E0A26C15C06C1580A26C15006C5C6C5C6C6C
13F0011F13C0D903FEC7FC90C9FCB3B3A2EB03FE90381FFFC0017F13F048B512FC488048
80481580A24815C04815E0A24815F0A3B712F8A96C15F0A36C15E0A26C15C06C1580A26C
15006C5C6C5C6C6C13F0011F13C0D903FEC7FC25706BEF4F>I[<C5B412C0A4A17FA7C800
1F03F8CA1203F70007E6003F81210721017B7E221F8E22038E7C808F8F8F8FA28F8FA27D
7FA28FA2A1127FA3A1123FA2A17FA1121FA4A1120FA3A17F9B3803FF80A17EA7A16C7FA4
5494C9FCA466A366A266A2669BB5FC1D03651D1F1D7F0A0FB6FC96BAFCAB07F8C7120FF4
007F1D1F1D07891D008A8AA28AA28AA38AA2A1903803FF80A28AA1491300A6A1495AA59B
CC121FA15CA3A1133FA4A1495AA3A113FFA3A1485BA3A15AA2A15AA15CA15AA2A15AA15A
A2A1485BA1B5FC6B6B6B6B595C6BA0B6FC6A2207221F227F0F03B7C7FC211F0E03B8FC0D
03B9FCC5B5FCA2A15BA6A15BA3>169 173 119 300 187 69 D[<52B500F8F003F051B7
00E04D7E097F04FE170F0807B900C0161F087F06F8163F0703BB167F071F08C015FF96BC
00F85C060709FE5C061F755C95BE00C05B050395C703F05B050F058002076E5B4D04F0C9
6C01FE5B057F93CA000F6D90B5FC4CB700F8050314814C04C0050014E3040F93CC003F13
F74C03FC7390B6FC047F03F0190793B700C019014B4C8503074BCE7E4B4B874B03F01B0F
4B4B874B4B8792B748874A93D0FC4A03FC894A8D4A5D4E894A4B894A4B894A4B8991B7D1
FCA17E495D498E4D8B495DA17F495D498F5F498FA2495DA17F90B7FC4D8B5AA294D3FC48
A17EA2485DA17FA25A5EA248A1137FA4485DA16E5AA191CAFCA35AA45EA3B7FCB3A47EA2
82A454B7043FB512806C9FBAFCA4827EA47E7096CA001F03F8C8FCA27EA2827EA27E83A2
7E837FA26D81A26D81A26D817F837F837F6D81846E81806E816E81846E816E816E6F646E
826F816F03F0636F816F6F98B7FC6F03FF620301826F04E0617003F861041F03FE191F70
6F6C60040304E095B8FC7004FC4D149F706CDBFF8004071407051F04F8043F497E71DCFF
C04AB5487E0503DDFF80013F4A6C7E050095B800E07F061F52130F060799C71203060051
1400071F08F8153F070308C0150FDF007F96C91203080706F8EE00F0E0007F058094C9FC
090104F8CFFCE1000102FCD0FC>193 180 112 304 224 71 D[<040FB600F00307B512
F097BAFCAA93C9000193C8FCB3B3B3B3B3B3A7142090380FFF80013F13E090B512F80003
14FE488048814881A24881A24881A3B77EA36662A366A2626C4B61A2624C616C614C6150
5D6C5D93C9485D6C4A93B7C9FC6C02F84B5D03E0616C02804B5D6C6E030F5D6C02F04B5D
6D01FC037F1580011FD9FFC049B7CAFC6D02FF010F15FC010392B85A6D1AE06D6C198002
1F4ECBFC020318F002001880030F04F8CCFC03001680040302C0CDFC>124
177 122 301 147 74 D[<C07EF7FFC020FEF8FFF021FF22E022FC22FF23C023F88FC800
1F03F0C9001F16FFE4003F16C00D0316F0E5007F810E0F810E0315FF7A827A6C817B817B
817B817B817B818DA17F7B82A27C81A180A27C81A3A180A2A1808EA4A180ABA15CA4585D
A3A15CA2585DA2A15C9FB7FCA15CA191CBFC575D69A15B575D575D575D575D9EB75A564B
CCFC0E075D0E1F5D0E7F15E00D03B712800D3F4BCDFC0C1FB712F896BD12E0238010FCCE
FC22F09FCFFC697B7E22F022FC07F0C96C15FF0C07820C0116E0786C810D1F15FC0D0781
7981798279827A817A817A81A17E8C7A81A27A81A27A82A28CA17FA38DA17FA9A17FABA1
7FA9A118FEA16D4B7EA14D1380A28DA3A17F8DA15FA16D17008DA16E5C8DA16E4A5A8D7B
70143F7B704A5ABD00FE7118FF7C6F495B7C6F495B7C03FF5B7CDCE01F5B100193B65A7C
6C60111F95C7FC11075F110117F803E0C8000FE1003F5ED7000316C0A1D8001F4AC8FCA1
D9003F13F0>201 177 119 301 212 82 D[<0007C5B512F0A648A180A505E0C804C0C7
120304F8C9F1000F04C01E014BCAF2003F03F8200F03E020034B20004891CB767F4A8E4A
8E4A8E4A8E4A8EA24A8EA24A8EA291CC1D7F48A180A249A1123FA349A1121FA449A1120F
A3007FA180A349A17EA94848A16C1380A6CE9AC8FCB3B3B3B3B3AB043FC0FCAA08F0C912
03>177 172 118 299 198 84 D<057FB512C0047FB7FC030FB812F8037F17FF0203BA12
E0020F19F8023F19FF91BC12C0498749922680000F15F84902E0C88170033F14FF496E03
0F8149728170030181496E6F81758087496E70808A878A7581A27581A375816D5CA26D5C
75816D5C6D5C6D5C6D5C6D6C90CBFCEC0FF891CDFCAA0703B8FC0607B9FC4DBAFC173F04
03BBFC163F4BBCFC030F17FC037FEEF0004AB700FCC7FC020716C0021F03FCC8FC027F15
E049B71280494BC9FC010F15F84915E04915804992CAFC90B65A4815F8485D485DA2485D
485D93CBFC5A5D5AA25DA2B6FC5DA363A46381637E6F5F636C80F33FEF6C6FEE7FCF70DB
01FF816C6F4B138F6C6F4B010F14FE70DB1FFE6F7E6C03FE037F17F86C6F4A48486CEDFF
FE6C04E0010701F8EFFF80013F03FC90B5EAE0036D92B712C001074F7E6D4EC7FCD9007F
05F8143F021F05E080020305801407DA007F03FCC9FC030303E00407ECFE00DB000701FC
CFFC817378F18A>97 D[<9C3801FFC00B7FB6FC0903B8FCAB98C77E1D0789A289B3B3AA
95380FFFFC0503B612E0057F15FC0403B81280041F17F0047F17FC0303BAFC030F19C103
3F19E14BDBE00114F94AB600FCC7001F13FD4A03E0020390B7FC020F038014004A4AC912
3F4A4A824A02F0160791B64882494B1600494B834992CB7E494A84494A844C845B494A84
A290B65A5A5E5AA2485DA25AA293CCFC5AA35AA3485CA6B6FCB27EA67E81A37EA37E827E
A36C81A27E6C81656D6E60656D6E606D636D6E95B7FC705F6D6E5F6D6F5E6D6F5E6D6F04
3F826E6E5E6E02FC4BB87E6E6E030717FF02076E6C021F01FBEEFFE06E03F091B512E36E
03FF010F14C36E6C92B71203031F18FE030718F8030118E06F6C1780040FEEFC00040016
E0050F92C7FCDD003F01E005F8C8FC>139 177 119 303 158 100
D<95381FFFFC0507B612F0057F15FF0403B812E0041F17FC93BAFC030319C0030F19F003
3F8592B626FE003F14FE4A03E0010380020703800100814A4AC8003F14E04A02F86F804A
4A03078091B6486F80494B81494B6F804992CA804C7180494A834989494A834C86498690
B6488688488A4C835A4C864887A2488A93CBFC885AA28B5AA25D895A2080A5B6FC92BEFC
A7F7FE004BD0FCA77EA5817EA47EA36C81A36C6F1AFE9B3803FF807E826C65826C65701B
006D646D6E4F5A826D525A6D6E19FF6D6F4D5B6D6F4D5B6D6F5F6D6F4D5B6E6E053F5B6E
02FE4D5B6E6E6C4BB5C7FC6E03E003075B020303F8031F5B6E03FF4AB55A6E6C03F8013F
14E06F92B85A030F97C8FC030361030019F8043F18E004071880040005FCC9FC051F16E0
05004BCAFC06031480717378F182>I<F70FFC54B57E0507B5040F14E04CB600FC037F80
041FDBFFC049B67E93B800F8010781030705FF5B031FDEC03F81037FDEF07F814ABA00FD
B512F7020796B5EAFE074ADB800FDCF00F1480023F02F8C716C04A02E0023F150091B600
80020F14FC4992C87E494A6F804C81494A6F80494A706E6C1400491CC04C706F5B49766C
5B795B494A706E6D5A0E07C7FC90B67490C8FCA3484B7080A34889AE6C65A36C6F4C5CA3
6D64A26D6E4C5CA26D64705E6D646D6E93B6CAFC6D6E4B5C705D6D6E4B5C6D6F4A5C6E02
E0023F5C6E02F891B65A9426FF800F15804A92B8CBFC91BB12FC491AF0031F18C0490107
95CCFC4AC617F80107021F16C0040103FCCDFC010FDA000791CEFC4A91D1FCA2131FA280
A2133FA280A281A281818115FC81EDFFC06D91B97EF4FF801DFCF5FFC06D1CF81EFEF6FF
C06D1DF08B6D1DFE8B6D1EC06D8A8C6E89806E896E895C91C0FC01038B130F013F8B5B48
B60080C912014802FCCB0001824802F0F0001F484A19034B070081484A1A3F4891CE7E4A
874877804A878AB5FC5C8AA66E63A26C686E63A26C6D515CA26C6E505C6F626C6E505C6C
6E5091C7FC6C6E97B55A03FE19036C6E4F5C6C03C0061F5C6D02F0067F5C011F02FE0503
B612C06DDAFFC0041F5D010303FC4BB648C8FC6DDBFFF891B75A6D6C92BA12F0021F1CC0
020351C9FC02001BF8031F1AC0030107FCCAFCDB001F18C0040005F8CBFC050003F8CCFC
81A678F28E>103 D[<EE7FF0011FB6FCB8FCABEA001F13017FA280B3B3AA983807FFFE09
7FEBFFF80807B7FC081F16E097B812F8070317FE070F717E4F84077F8496B5D8F007814E
49C7814E01F86E804E01C0141F4E496E804E48C881DE3FF8814E48854E488105F1498561
05F390C97EEFF7FE4E86EFFFF8604E82A24E86A260A295CBFCA25FA45FA45FB3B3B3A7BA
00FC49BA12F8AA02E0C7001F06C0C7123F>141 176 118 303 158
I[<4AB4FC020F13E0023F13F84A7F49B6FC498149814981A24981A24981A34981A96D5D
A36D5DA26D5DA26D5D6D5D6D92C8FC6D6C13FC6E5B020F13E0020190C9FC91CBFCB3A9EE
7FF0011FB6FC007FB7FCABEA000F13017FA280B3B3B3B3ADBA12F0AA02E0C7123F>60
177 117 304 80 I<DCFFE0922607FFFE96380FFFFC013FB6047FD9FFF895B612F0B803
07B7050F15FE081F04E0043FEDFFC097B800F84BB812F0070305FE030717FC070F716C02
1F17FF4F724A84077F7291BA7E96B5D8F0076F49DAE00F814E49C76F499026FC0001814E
01F86E6E4901F06D814E01C0021F4C0180143FD8001F4C496E6E4990C86C8001014C48C8
6FD93FFC846DDC3FF86FDC7FF0814E48734848846E4B486F0381498105E14907C349854F
98C9FC05E390C96CDBC7FE82DDE7FEF2CFFC4EE0EFF886DDEFF8F2FFF0DDFFF0634E704C
82A24E5186A24E98CAFCA295CB5DA24D63A44D63A44D63B3B3B3A7BA00FC49BA00F80103
BA12F0AA02E0C7001F06C0C7003F0680C77EDC7176F0ED>109 D<DCFFE0923807FFFE01
3FB6047FEBFFF8B80307B7FC081F16E097B812F8070317FE070F717E4F84077F8496B5D8
F007814E49C7814E01F86E804E01C0141FD8001F4C496E8001014C48C8816DDC3FF8814E
48856E4B488105E149856105E390C97EEFE7FE4E86EFEFF8EFFFF04E82A24E86A260A295
CBFCA25FA45FA45FB3B3B3A7BA00FC49BA12F8AA02E0C7001F06C0C7123F8D7176F09E>
I<0607B5FC4DB612FC053FEDFFE04CB812FC040FEFFF80047F18F04BBA12FC030719FF03
1F1AC04BDB00078192B600F0D9007F14F84A0380020F8002074AC8000314FF4A02F80300
814A02E0043F804A4A70804A4A708091B6CA6C80494A7180494A7180494A7180494A7280
498A4C84498A494A7280A290B688484B7280A2488BA24892CC6C80A3482080A24820C0A2
4B85A24820E0A44820F0A6B61EF8B06C20F0A56C20E06F61A36C20C0A36C2080A270606C
2000A26C6770606C67A26C6F4E5CA26D6E4E5C6D666D6E95B65AA26D6E4D5D6D6E4D92C7
FC6D6E4D5C6D6F4C5C6D6F4C5C6E6E4C5C6E02F893B65A6E02FE03035D6E6E6C020F5D02
0303F0027F4AC8FC6E03FF0107B65A6E6C92B812F0031F1AC06F6203034FC9FCDB007F18
F0041F18C004034DCAFCDC003F16E005034BCBFCDD000791CCFC7D7378F18E>I<DC7FF0
92387FFFE0011FB6030FB6FCB892B712F0070716FF073F17C04EB912F8060718FE061F72
7E067F19E095BB7E05F39126FE003F15FC05F702C001038194B548C881D8001F05F8033F
81010105E06F816D05800307814EC96C816E4B708106F070814E71804E71804E8395CB82
4D72814D844D887881A27881A28E8A8E8BA28EA28B2380A38B23C0A67915E0B25515C0A5
2380A267A22300A2676AA29CB6FC6AA2545DA2545DA2545D6A71607164714E92C7FC6672
4D5C72627294B65A724C5D06FC4C5D72040F5D724C5D07C0037F92C8FC07F092B65A07FC
020315F805FB01FF021F5D05F9DAF801B712C0DDF87F90B95A724EC9FC060F18F8060318
C0060095CAFC073F16F807071680DF007F02F8CBFC080749CCFC97CFFCB3B3BA12FCAA02
E0C7121F8BA277F09E>I<4BB46CEC3FFE013FB64AB512E0B8020F14FC073F14FF96B712
C04E824E16F84E824E824EEBE07F4E0100B6FC95267FFC011580F0FFF8D8001FDDE00315
C00101038113C06D0383494815E019006EEC87FE60EF8FF8A2EF9FF0A2EFBFE0A24E6D15
C017FF4E6D1580A295C81500755B755B4D6F5B755B0901138098C9FC5FA45FA75FB3B3B3
BB12C0AA02E0C7120F637177F074>114 D<DC3FF8F27FF0011FB6063FB6FCB84CB8FCAB
D8001F96C7123F01011B036D87A26E86B3B3B3A765A565A365A265A26E62A265656E6E94
B7FC64527F6EF107FE6E6E040F82F41FFC6E6EDC7FF88172DBFFF0EDFFC06E03E0020301
E0EEFFF86E03F8021F13C06FDAFF8090B512806F92B712006F60030718F80301606F6C17
C0041F94C7FC040316F8DC003F15C0DD007F01FCC84AC8FC8D7276F09E>117
D<267FFFC091267FFFF0DCFFFC903803FFC091B895B7FCAAC76C4ACB000192C7FC6EE100
3F13E071070F1380807297C8FC6E525A841F3F6E6572187F6E65846E525A846E515B846F
505B846F505B84666F99C9FC856F505A856F505A856F505A856F505A856F4F5B85657062
85704E5B85704E90CAFC86704E5A86704E5A861D7F70617414FF706186704D5B86714C5B
86714C5B86714C90CBFC1B8064715F1BC0714C5A1BE0714C5A1BF0714C5A877103F95B1B
FD7291B55AA3725EA27293CCFCA2725DA2725DA2725DA3725DA2725DA2735CA2735CA273
91CDFCA2735BA3735BA2735BA2735BA263A24F5BA24F5BA26198CEFCA24F5AA24F5AA2D9
7FF04C5A3801FFFC000701FF4C5A4880486E5C62486E5C486E5EA24E5BB66C5C97CFFC60
614E5A187F4E5A614B5B6C4C5B4D5B4B011F5B6C4C90D0FC4B495A6C6D4848485A9126FF
00075B6C01EC011F5B6CD9FC01B55A6C90B75A6C5F6C4CD1FC6D5D011F15F06D15C00103
92D2FCD9007F13F8020790D3FC8AA27BEF96>121 D<C412F8A98D0980C98E>123
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fo cmbx6 6 2
/Fo 2 53 df<91387FFFC0010FB512FE017FECFFC048B712F0000716FC4816FF48178048
D9803F14C0DA000314E0486DC614F0043F13F8B56C7F7013FC8218FE8218FF826C5BA26C
90C7FC6C5A6C5AEA01E0C9FC18FE5EA24C13FCA24C13F818F05E4C13E04C138093B51200
4B5B4B5B4B13F04B5B4B13804B48C7FC4B5A913801FFF04A13C04A4913FF4A48C7FC4A5A
DA7FF0EB01FE4A5A4913804990C71203495AD91FF8140749B712FC5B90B8FC5A12075A48
17F85A5AB9FCA318F0A3384578C449>50 D<4CB47E04077FA25E5E5E5E93B5FCA25D5D5D
5DED1FF716E7153FED7FC7EDFF874A1307EC03FEEC07FCA2EC0FF8EC1FF0EC3FE0EC7FC0
ECFF8015005B495A495A495A495A5C133F495A495A4890C7FC485A485AA2485A485A485A
485A485A90B912FCA7C9001FEBC000AA0207B712FCA73E467BC549>52
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fp cmr6 6 28
/Fp 28 118 df<EA0F80EA3FC0EA7FE013F0EAFFF8A313FCA2127FA2123FEA0FBCEA003C
A4137C1378A213F8A213F0120113E01203EA07C0A2EA0F80EA1F00123E127E123C12180E
22758C25>44 D<EC0FFC91B512C0010314F0010F14FC90391FF807FE90393FE001FF903A
7F80007F8049C76C7E48486E7E48486E7E000782491407000F82491403001F82A3003F82
A24980007F1780A600FF17C0B3A2007F1780A66C6C4A1300A3001F5EA36C6C4A5AA20007
5E6D140F00035E6C6C4A5A6D143F6C6D495A903A7FE001FF8090271FF807FEC7FC6DB55A
010314F0010014C0DA0FFCC8FC32487AC540>48 D<EC03C01407141F147FEB01FF130F00
03B5FCB6FCA25B13F0EAFC00C7FCB3B3B0010313F0007FB71280A5294675C540>I<EC7F
F80107B57E011F14E0017F14F890B612FE000301007FD807F8011F1380D80FE0010713C0
49010113E048486D13F048C8EA7FF8003EED3FFC127ED87F80EC1FFE487E6D140F6D15FF
A4826C5AA26C485C000FC8FCC9FC17FE161FA217FC163F17F8EE7FF0EEFFE0A24B13C04B
13804B13005EED0FF84B5A4B5A4B5A4BC7FC4A5A4A5AEC07F04A5A4A5AEC7F8002FEC712
1F495A495A4948143E495AEB1F8049C8FC017E157E5B484815FE48B712FC5A5A5A5A5AB8
FC17F8A3304679C540>I<DC1FFFEC01C00303B500F01303031F02FE130792B712800203
EEC00F020FD9FC00EBF01F023F01C090380FF83F4A48C7EA03FCDAFFF8913800FE7F0103
01E0ED3FFF490180814990C97ED91FFC82494882494882494882485B1A7F485B4890CB12
3FA24848181FA2001F190F5B123FA2491807127FA397C7FC485AAC6C7EA2F207C0A2123F
7FA2121F6D180F000F1A80A26C6C181F1B006C7F6C6D5F1A7E6C7F6D6C5F6D6C4C5A6D6C
16036DB44C5A6D6D4B5A6D01E04B5A010001F8ED7F80DA7FFE4A48C7FC91263FFFC0EB07
FC020F01FCEB7FF8020390B612E002005E031F4AC8FC030314F8DB001F90C9FC4A4C78C9
5C>67 D<DC1FFFEC01C00303B500F01303031F02FE130792B712800203EEC00F020FD9FC
00EBF01F023F01C090380FF83F4A48C7EA03FCDAFFF8913800FE7F010301E0ED3FFF4901
80814990C97ED91FFC82494882494882494882485B1A7F485B4890CB123FA24848181FA2
001F190F5B123FA2491807127FA397C8FC485AAC6C6C93B712C0A4123F6DDC0007EBE000
07015B121F7F120F7F7E807E6C7F807E6D7E6D7EEB1FFE6D6C5E6D13C06D6D5D010001F8
5D6EB4153F6E01E0903801FF9F020F01FE011F130F020390B6EAFC070200EEF803031FED
E00103034AC9FCDB001F13C0524C78C963>71 D<B712E0A5D8003FEB8000D90FFEC7FCB3
B3B3A690383FFF80B712E0A523487BC72F>73 D<B500FC0603B512F86E606E60A263D800
3F6DF1E0006D636E6C173EA26E6C5FA26E6C5FA2020F4D5A81A26E6C4C5AA26E6C4C5AA2
6E6C4C5AA26E4D5A82A26F6C153EA26F6C5DA26F6C5DA26F6C4A5AA36F6C4A5AA26F6C4A
5AA26F6C4A5AA26F6D49C7FCA3706C133EA2706C5BA2706C5BA2706C485AA3706C485AA2
706C485AA2706C485AA270019FC8FCA3EF7FFEA2715A497E496C6E5A2603FFF84E7FB600
E06D480107B612F8A3715A715A65487AC773>77 D<B500FC0303B61280808081A2D8001F
6DDA000FEBE0006F030190C7FC6F6F5A6F167C147F6E7E816E7E806E7F6E7F826E7F806F
7E826F7E151F6F7E6F7F836F7F816F7F707E83707E161F707E84707F82707F707F84717E
173F717E84711380837113C07113E019F07113F8187FF03FFCF01FFE19FF7213FC8484A2
8484197F193FA2191F496C160F496C16073803FFF8B600E01503190119001A7CA251487A
C75F>I<B9FC18F018FEF0FFC08526003FFEC7000313F86D489138007FFCF00FFF721380
7213C0847213E0F17FF0A21AF8193FA21AFCA71AF8A2197F1AF0A2F1FFE04E13C04E1380
4E13004E5AF07FFC943807FFF091B85A198006FCC7FC18E002FCCBFCB3A8497EB77EA546
487AC756>80 D<B812F0EFFF8018F818FE727E26003FFEC7001F13E06D48020013F8F03F
FCF00FFE727E727F727F868486197F86A76219FF6260624E5B4E90C8FC4E5AF03FF84DB4
5A051F13C091B8C9FC18F86018FC02FCC76CB4FC050F7F05037F05007F727E727E85181F
A2727EA785A61CE0F301F01A8084A2F2C003496C6F15E0B76C6DEBE007729038F00FC096
397FFC1F8073B51200070F5BCC00035B9638003FF0544A7AC75D>82
D<DA3FFCEB01C00103B5EAC003010FECF007013F14FC49ECFF0F2701FFE00F139F4890C7
13FFD807FC141FD80FF08048481403498048488090C9127F5A173F007E161F12FEA2170F
A36C1607A27FA26C6C92C7FC7FEA3FF813FE6C6C7E14FC6CEBFFC06C14FE6CECFFF06C15
FE6C6F7E013F15E06D81010381D9007F80020780DA003F7F03011480DB001F13C0160370
13E0EE007FEF3FF0171F170F18F80078160712F8A21703A37EA218F06C1607A26C17E06D
150FEF1FC013E06DED3F8001FCEDFF0001FF4A5A02E0EB07FC26FE7FFEEB3FF8486CB65A
D8F80F5D0103158048C66C49C7FC48010313E0354C78C947>I<B600FE0307B512F8A5C6
91CA1400D93FFCEF3FF8745A011F725A6E60010F616E171F6D96C7FC6F5E6D183E811A7E
6D187C6F16FC6D606F1501027F5F6F1503023F5F811907021F5F6F150F020F5F6F151F6E
94C8FC82616E6D143E197E6E167C7014FC6E5E701301037F5D821803033F5D701307031F
5D70130F030F5D70131F6F92C9FC1780606F143EEFC07E6F147CEFE0FC6F5C17F1A29338
7FF9F017FB043F5B17FF705BA2705BA37090CAFCA2705AA2705AA2705A554A7CC75F>86
D<903803FFF8013F13FF90B612E04881489038003FFCD807F8EB07FE486C6D7E6D01007F
707E83163FA26C486E7E6C5A6C5AC9FCA3ED1FFF020FB5FC91B6FC1307013FEBFC1F90B5
12004813F8000713C04890C7FCEA1FFC485A5B127F5B00FF173E5BA3163FA26D147F007F
15FF6D5B6C6C49EBF87CD81FFE90390FE7FCFC3C0FFFC07FC7FFF86C90B51203000102FE
14E06C6CD9F80113C00107903980007E0037307BAE40>97 D<EBFF80B5FCA512037E7EB3
ED0FFF92B512E0028714F8029F14FE913ABFF00FFF809126FF80017F4AC76C7E02F8EC1F
F04A6E7E02C081717E4A6E7EA2711380A219C0A28319E0AA19C05FA21980A25F19006E4A
5AA26E4A5A6E4A5A6E4A5AD9FEFEECFFE091267F80035B91263FF01F90C7FCD9FC0FB55A
020314F849C614C090C7D81FFCC8FC3B4A7BC847>I<913807FFE0027F13FE49B6128001
0715C0903A1FFE007FE0D93FF0EB0FF0D97FC0EB1FF8484848133F4890C7FC5B485A120F
4848EC1FF0EE0FE0003FED07C04991C7FC127FA3485AAA6C7EA3123F7F173E6C7E000F16
7E6D157C6C6C15FC6C16F86C01C013036C6DEB07F0D97FF8EB1FE0D91FFFEBFFC06D90B5
120001035CD9007F13F0020713802F307BAE3A>I<EC0FFF91B512E0010314FC010F8090
3A1FFC07FF8090267FF00013C0D9FFC0EB3FE04890C7EA1FF04848140F000716F84848EC
07FC5B001FED03FE5B003F1501A2007F16FF5BA2B9FCA401E0C9FCA6127F7FA2123F7F00
1F161FA26C6C153F6C6C153E0003167E6C6C15FC6C01C0EB01F86D6CEB03F0D93FFCEB0F
E0903A1FFF807FC0010790B512800101ECFE00D9003F13F80207138030307CAE3A>101
D<ED7FC0913803FFF8020F7F023F7F91387FE0FF903801FF81494848138014FC1307EB0F
F8EB1FF06F13006F5A4948137C93C7FCAFB77EA526003FE0C8FCB3B0497E003FB512F8A5
294A7CC929>I<EBFF80B5FCA512037E7EB3923807FF80037F13F00281B512FC02878091
398FF807FF91269FC0017F02BFC7FC02FC6E7E5C4A814A143FA25CA35CB3A7486D4A7EB6
D8803FB512E0A53B497AC847>104 D<13F8EA03FE487EA2481380A56C1300A26C5AEA00
F890C7FCADEB7F80B5FCA512037E7EB3AE4813C0B6FCA518487AC725>I<EBFF80B5FCA5
12037E7EB3B3B3A5487FB61280A519497AC825>108 D<01FF902607FF80903801FFE0B5
017F01F0011F13FC4AB500FC017F13FF02076E48B67E912A0FF807FF03FE017F91261FC0
01903A87F0007FE0000349C7D98FC0133F6C017CDA7FDFC76C7E6C4915FE4A4B814A6E48
140FA24A5DA34A5DB3A7486D4A6C4A7EB6D8803FB5D8E00FB512F8A55D2E7AAD69>I<01
FF903807FF80B5017F13F04AB512FC02078091390FF807FF91261FC0017F000349C7FC6C
017C6E7E6C5B4A814A143FA25CA35CB3A7486D4A7EB6D8803FB512E0A53B2E7AAD47>I<
EC03FF023F13F049B512FE01076E7E90261FFE0113E0903A3FE0001FF049486D7E49C7EA
03FC48486E7E48486E7E000717804848ED7FC0A24848ED3FE0003F17F0A249151F007F17
F8A300FF17FCA9007F17F8A36C6CED3FF0A36C6CED7FE0000F17C06D15FF000717806C6C
4A13006C6C4A5A6C01C0EB0FFCD93FF0EB3FF0903A1FFE01FFE00107B6128001014AC7FC
6D6C13F80207138036307CAE40>I<01FFEB3FC0B5EBFFF0020313FC4A13FEEC0FE39138
1F87FF0003EB3E076C137C6C13F8A29138F003FE9138E001FCED00F816005CA35CB3A548
7FB612E0A5282E7BAD33>114 D<903907FF8070017FEBF0F048B6FC1207380FFC01391F
C0003F48C7120F007E1407A2007C140312FC1501A27E7E7F01E090C7FCEA7FFEEBFFF86C
EBFFC06C14F86C14FE6CECFF80000115C06C6C14E0010F14F0D9007F13F8020113FCEC00
3F15070078EC03FE00F8140115006C157EA37E167C6C15FC7F6DEB01F86DEB03F001F813
0F01FFEB7FE000FC90B51280486C1400D8F01F13FCD8E00313C027307BAE33>I<EB03E0
A61307A4130FA3131F133FA2137F13FF5A5A001F90B512F0B7FCA426003FE0C7FCB3A316
7CAA6E13F8131F1501D90FF813F09138FC03E0903807FF0F6DEBFFC06D14809039007FFE
00EC0FF826427DC033>I<D9FF80EC3FE0B5EC3FFFA5000315006C167F6C163FB3A6177F
A317FFA25E017F5C6E497F013F4A7FD91FF090393FBFFFE09139FC01FE3F0107B512FC6D
14F8010014E0021F0100EBE0003B2F7AAD47>I E
%EndDVIPSBitmapFont
end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 1270dpi
TeXDict begin

%%EndSetup
%%Page: 88 1
88 0 bop eop
%%Page: 89 2
89 1 bop 1070 348 a Fp(More)44 b(Games)h(of)f(No)f(Chance)1070
462 y(MSRI)h(Publications)1070 577 y(V)-10 b(olume)44
b Fo(42)p Fp(,)g(2002)2939 2931 y Fn(Go)95 b(Thermograph)-8
b(y:)2040 3248 y(The)95 b(4/21/98)i(Jiang{Rui)e(Endgame)3223
3670 y Fm(WILLIAM)77 b(L.)e(SPIGHT)1281 4394 y(Go)58
b(thermograph)-5 b(y)57 b(is)i(more)f(complex)h(than)f(thermograph)-5
b(y)57 b(for)g(classical)k(com)-5 b(bina-)1070 4623 y(torial)42
b(games)g(b)5 b(ecause)40 b(of)g(lo)5 b(op)-5 b(y)41
b(games)h(called)g(k)-5 b(os.)72 b(In)41 b(most)h(situations,)k(go)40
b(rules)i(forbid)1070 4851 y(the)51 b(lo)5 b(opiness)52
b(of)e(a)h(k)-5 b(o)50 b(b)-5 b(y)51 b(banning)e(the)i(pla)-5
b(y)51 b(that)g(rep)5 b(eats)51 b(a)g(p)5 b(osition.)76
b(Because)52 b(of)e(the)1070 5080 y(k)-5 b(o)52 b(ban)f(one)h(pla)-5
b(y)g(er)53 b(ma)-5 b(y)53 b(b)5 b(e)52 b(able)g(to)h(force)f(her)g
(opp)5 b(onen)-5 b(t)51 b(to)i(pla)-5 b(y)52 b(elsewhere)h(while)h(she)
1070 5308 y(mak)-5 b(es)59 b(more)h(than)e(one)h(pla)-5
b(y)59 b(in)h(the)f(k)-5 b(o,)59 b(and)f(that)h(fact)g(giv)-5
b(es)60 b(new)f(slop)5 b(es)60 b(to)f(the)h(lines)1070
5537 y(of)g(k)-5 b(o)61 b(thermographs.)84 b(Eac)-5 b(h)60
b(line)i(of)e(a)h(thermograph)f(is)i(asso)5 b(ciated)62
b(with)f(at)g(least)i(one)1070 5765 y(line)k(of)f(ortho)5
b(do)-5 b(x)65 b(pla)-5 b(y)66 b([Berlek)-10 b(amp)67
b(2000,)g(2001].)99 b(Multiple)69 b(k)-5 b(os)66 b(require)g(a)g(new)f
(de\014-)1070 5994 y(nition)58 b(of)e(thermograph,)g(one)g(based)h(on)f
(ortho)5 b(do)-5 b(x)56 b(pla)-5 b(y)57 b(in)g(an)f(enric)-5
b(hed)57 b(en)-5 b(vironmen)g(t,)1070 6222 y(rather)64
b(than)g(on)g(taxes)g(or)h(on)e(comp)5 b(osing)65 b(thermographs)f
(from)g(the)h(thermographs)f(of)1070 6450 y(the)58 b(follo)-5
b(w)g(ers)60 b([Spigh)-5 b(t)59 b(1998].)77 b(Ortho)5
b(do)-5 b(x)57 b(pla)-5 b(y)59 b(is)h(optimal)g(in)f(suc)-5
b(h)58 b(an)g(en)-5 b(vironmen)g(t.)2944 6993 y Fl(Reading)73
b(a)h(Thermograph)1281 7395 y Fm(Man)-5 b(y)68 b(go)h(terms)i(ha)-5
b(v)g(e)68 b(asso)5 b(ciations)72 b(with)e(thermographs.)109
b(They)68 b(are)h(not)g(de\014ned)1070 7623 y(in)c(terms)g(of)f
(thermographs,)h(but)f(I)h(will)h(b)5 b(e)64 b(using)h(them)g(in)g
(talking)g(ab)5 b(out)64 b(the)g(game,)1070 7852 y(and)e(it)j(will)h(b)
5 b(e)63 b(helpful)h(to)g(b)5 b(e)63 b(able)h(to)f(visualize)j(the)e
(thermographs)f(when)f(I)i(do.)93 b(The)1070 8080 y(in)-5
b(v)g(erse)74 b(of)g(the)g(slop)5 b(e)74 b(of)g(a)g(thermographic)f
(line)j(indicates)f(the)f(net)g(n)-5 b(um)g(b)5 b(er)73
b(of)h(lo)5 b(cal)1070 8309 y(pla)-5 b(ys.)78 b(If)58
b(one)g(pla)-5 b(y)g(er)58 b(mak)-5 b(es)59 b(2)f(lo)5
b(cal)59 b(pla)-5 b(ys)59 b(while)g(her)f(opp)5 b(onen)-5
b(t)56 b(mak)-5 b(es)59 b(only)f(pla)-5 b(ys)59 b(in)1070
8537 y(the)c(en)-5 b(vironmen)g(t,)56 b(the)f(slop)5
b(e)56 b(will)h(b)5 b(e)55 b(plus)g(or)g(min)-5 b(us)4842
8468 y Fk(1)p 4842 8497 71 8 v 4842 8598 a(2)4933 8537
y Fm(.)77 b(The)54 b(color)i(of)e(a)h(line)i(indicates)1070
8766 y(whic)-5 b(h)48 b(pla)-5 b(y)g(er)49 b(can)f(a\013ord)f(to)h(pla)
-5 b(y)49 b(lo)5 b(cally)50 b(at)e(a)g(certain)h(temp)5
b(erature.)75 b(The)48 b(pla)-5 b(y)g(er)48 b(do)5 b(es)1070
8994 y(not)51 b(necessarily)i(wish)e(to)h(pla)-5 b(y)51
b(at)h(that)f(temp)5 b(erature,)53 b(but)d(she)i(can)e(do)h(so)g
(without)h(loss.)1281 9223 y(In)76 b(the)g(simple)i(thermograph)d(in)h
(Figure)g(1,)k(the)c(blac)-5 b(k)76 b(mast)h(at)g(the)f(top)f(extends)
1070 9451 y(up)-5 b(w)g(ard)61 b(to)h(in\014nit)-5 b(y)-15
b(.)89 b(It)63 b(indicates)h(a)e(region)g(of)g(temp)5
b(erature)62 b(in)g(whic)-5 b(h)62 b(neither)h(pla)-5
b(y)g(er)1070 9679 y(can)50 b(a\013ord)g(to)h(pla)-5
b(y)51 b(lo)5 b(cally)52 b(without)g(taking)f(a)g(loss.)76
b(The)51 b(mast)g(starts)h(at)f(temp)5 b(erature,)1070
9908 y Fj(t)49 b Fm(=)g(2,)58 b(whic)-5 b(h)58 b(w)-5
b(e)59 b(call)g(the)g(temp)5 b(erature)58 b(of)g(this)i(game,)e(at)h
(the)f(top)g(of)g(the)g(hill.)80 b(It)59 b(also)1070
10136 y(indicates)74 b(the)f(lo)5 b(cal)73 b(coun)-5
b(t)73 b(\(or)f(mast)i(v)-10 b(alue\),)76 b(whic)-5 b(h)73
b(is)g Fi(\000)p Fm(5.)120 b(Just)73 b(b)5 b(elo)-5 b(w)73
b(the)f(top)h(of)1070 10365 y(the)62 b(hill,)k(the)c(blue)h(line)h(of)e
(the)g(Left)h(w)-5 b(all)64 b(indicates)g(that)f(Blac)-5
b(k)63 b(\(or)g(Left\))f(will)j(not)e(b)5 b(e)1070 10593
y(unhapp)-5 b(y)55 b(to)j(mak)-5 b(e)57 b(a)h(lo)5 b(cal)59
b(pla)-5 b(y)57 b(in)h(this)h(region)e(of)g(temp)5 b(erature.)78
b(And)56 b(it)j(sho)-5 b(ws)57 b(what)4046 11015 y Fh(89)p
eop
%%Page: 90 3
90 2 bop 1070 577 a Fg(90)2140 b(WILLIAM)65 b(L.)g(SPIGHT)2576
3162 y @beginspecial -1 @llx -1 @lly 205.997101 @urx
154.997833 @ury 1759.474976 @rwi 1325.981079 @rhi @setspecial
%%BeginDocument: /u/levy/MSRI/Book42/spight/fig01.ps
%!PS-Adobe-2.0 EPSF-2.0 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%Created By:                     GLE v3.5 R0.23                  %%
%%            visit www.uark.edu/misc/vlabella/gle/gle.html %%
%%                          for more information            %%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%CreationDate: Thu Apr  5 23:26:57 2001
%%SourceFile:   graph01.gle
%%BoundingBox: -1 -1 206 155 
%%EndComments 
%%EndProlog 
gsave 
 
/f {findfont exch scalefont setfont} bind def 
/s {show} bind def 
/ps {true charpath} bind def 
/l {lineto} bind def 
/m {newpath moveto} bind def 
matrix currentmatrix /originmat exch def 
/umatrix {originmat matrix concatmatrix setmatrix} def 
 
 [72 0 0 72 0 0] umatrix 
  [28.3465 0 0 28.3465 0 0] umatrix 
 [] 0 setdash 
0.02 setlinewidth 
0 0 0 setrgbcolor 
0 0 m 
0 0 m 
0 0 m 
0 0 m 
1.08 0.81 m 
0 0 0 setrgbcolor 
[] 0 setdash 
1 setlinecap 
1.08 0.81 m 
6.12 0.81 l 
stroke 
0 0 0 setrgbcolor 
0.02 setlinewidth 
[] 0 setdash 
0 setlinecap 
0 0 0 setrgbcolor 
[] 0 setdash 
6.12 0.81 m 
6.12 0.81 m 
6.12 0.76 l 
stroke 
5.49 0.81 m 
5.49 0.81 m 
5.49 0.76 l 
stroke 
4.86 0.81 m 
4.86 0.81 m 
4.86 0.76 l 
stroke 
4.23 0.81 m 
4.23 0.81 m 
4.23 0.76 l 
stroke 
3.6 0.81 m 
3.6 0.81 m 
3.6 0.76 l 
stroke 
2.97 0.81 m 
2.97 0.81 m 
2.97 0.76 l 
stroke 
2.34 0.81 m 
2.34 0.81 m 
2.34 0.76 l 
stroke 
1.71 0.81 m 
1.71 0.81 m 
1.71 0.76 l 
stroke 
1.08 0.81 m 
1.08 0.81 m 
1.08 0.76 l 
stroke 
0 0 0 setrgbcolor 
[] 0 setdash 
5.49 0.81 m 
5.49 0.81 m 
5.49 0.71 l 
stroke 
4.23 0.81 m 
4.23 0.81 m 
4.23 0.71 l 
stroke 
2.97 0.81 m 
2.97 0.81 m 
2.97 0.71 l 
stroke 
1.71 0.81 m 
1.71 0.81 m 
1.71 0.71 l 
stroke 
0 0 0 setrgbcolor 
0.02 setlinewidth 
[] 0 setdash 
0 0 0 setrgbcolor 
[] 0 setdash 
5.49 0.23 m 
5.325 0.23 m 
5.325 0.23 m 
 0.400000 /Times-Roman f (\55) s 5.4582 0.23 m 
(7) s 5.49 0.23 m 
4.23 0.23 m 
4.0612 0.23 m 
4.0612 0.23 m 
(\55) s 4.1944 0.23 m 
(6) s 4.23 0.23 m 
2.97 0.23 m 
2.8072 0.23 m 
2.8072 0.23 m 
(\55) s 2.9404 0.23 m 
(5) s 2.97 0.23 m 
1.71 0.23 m 
1.5404 0.23 m 
1.5404 0.23 m 
(\55) s 1.6736 0.23 m 
(4) s 1.71 0.23 m 
1.08 0.81 m 
0 0 0 setrgbcolor 
[] 0 setdash 
1 setlinecap 
1.08 0.81 m 
1.08 4.59 l 
stroke 
0 0 0 setrgbcolor 
0.02 setlinewidth 
[] 0 setdash 
0 setlinecap 
0 0 0 setrgbcolor 
[] 0 setdash 
1.08 0.81 m 
1.08 0.81 m 
1.03 0.81 l 
stroke 
1.08 1.44 m 
1.08 1.44 m 
1.03 1.44 l 
stroke 
1.08 2.07 m 
1.08 2.07 m 
1.03 2.07 l 
stroke 
1.08 2.7 m 
1.08 2.7 m 
1.03 2.7 l 
stroke 
1.08 3.33 m 
1.08 3.33 m 
1.03 3.33 l 
stroke 
1.08 3.96 m 
1.08 3.96 m 
1.03 3.96 l 
stroke 
1.08 4.59 m 
1.08 4.59 m 
1.03 4.59 l 
stroke 
0 0 0 setrgbcolor 
[] 0 setdash 
1.08 0.81 m 
1.08 0.81 m 
0.98 0.81 l 
stroke 
1.08 2.07 m 
1.08 2.07 m 
0.98 2.07 l 
stroke 
1.08 3.33 m 
1.08 3.33 m 
0.98 3.33 l 
stroke 
1.08 4.59 m 
1.08 4.59 m 
0.98 4.59 l 
stroke 
0 0 0 setrgbcolor 
0.02 setlinewidth 
[] 0 setdash 
0 0 0 setrgbcolor 
[] 0 setdash 
0.78 0.81 m 
0.5896 0.6776 m 
0.5896 0.6776 m 
(0) s 0.78 0.81 m 
0.78 2.07 m 
0.6224 1.9348 m 
0.6224 1.9348 m 
(1) s 0.78 2.07 m 
0.78 3.33 m 
0.59 3.1948 m 
0.59 3.1948 m 
(2) s 0.78 3.33 m 
0.78 4.59 m 
0.6076 4.4576 m 
0.6076 4.4576 m 
(3) s 0.78 4.59 m 
1.08 4.59 m 
6.12 0.81 m 
[] 0 setdash 
0.02 setlinewidth 
[] 0 setdash 
0 0 1 setrgbcolor 
0.05 setlinewidth 
1.71 0.81 m 
1.71 0.81 m 
1.71 2.07 l 
2.97 3.33 l 
stroke 
[] 0 setdash 
0.02 setlinewidth 
[] 0 setdash 
1 0 0 setrgbcolor 
0.05 setlinewidth 
2.97 3.33 m 
2.97 3.33 m 
5.49 0.81 l 
stroke 
[] 0 setdash 
0.02 setlinewidth 
[] 0 setdash 
0 0 0 setrgbcolor 
0.05 setlinewidth 
2.97 3.33 m 
2.97 3.33 m 
2.97 4.17042 l 
stroke 
0 0 0 setrgbcolor 
0.02 setlinewidth 
[] 0 setdash 
0 0 m 
0 0 0 setrgbcolor 
0.02 setlinewidth 
[] 0 setdash 
0 0 0 setrgbcolor 
0.02 setlinewidth 
[] 0 setdash 
0 0 m 
0.02 setlinewidth 
2.97 4.17042 m 
2.865 4.07949 m 
1 setlinejoin 
 newpath 2.865 4.07949 moveto 
2.865 4.07949 moveto 
3.075 4.07949 l 
2.97 4.26135 l 
2.865 4.07949 l 
gsave 
0 0 0 setrgbcolor 
fill 
0 0 0 setrgbcolor 
grestore 
0 setlinejoin 
0.02 setlinewidth 
0 0 0 setrgbcolor 
2.97 4.17042 m 
0 0 0 setrgbcolor 
0.02 setlinewidth 
[] 0 setdash 
0 0 m 
0 0 m 
0 0 m 
0 0 0 setrgbcolor 
0.02 setlinewidth 
[] 0 setdash 
showpage 
grestore 
%%Trailer 

%%EndDocument
 @endspecial 3032 3495 a Ff(Figure)56 b(1.)78 b Fe(Simple)54
b(Thermograph.)1070 3917 y Fm(the)62 b(lo)5 b(cal)63
b(score)f(at)g(eac)-5 b(h)61 b(temp)5 b(erature)62 b(w)-5
b(ould)62 b(b)5 b(e)61 b(when)g(Blac)-5 b(k)63 b(pla)-5
b(ys)63 b(\014rst.)87 b(Similarly)-15 b(,)1070 4146 y(the)67
b(red)f(line)j(of)d(the)i(Righ)-5 b(t)68 b(w)-5 b(all)68
b(indicates)h(an)d(initial)k(pla)-5 b(y)68 b(b)-5 b(y)66
b(White)i(\(or)f(Righ)-5 b(t\).)104 b(A)1070 4374 y(v)-5
b(ertical)61 b(slop)5 b(e,)60 b(whether)f(of)g(a)g(mast)i(or)e(a)g(w)-5
b(all,)61 b(indicates)g(that)f(eac)-5 b(h)59 b(pla)-5
b(y)g(er)60 b(has)f(made)1070 4602 y(the)66 b(same)h(n)-5
b(um)g(b)5 b(er)65 b(of)h(lo)5 b(cal)68 b(pla)-5 b(ys.)101
b(The)66 b(v)-5 b(ertical)68 b(section)f(of)f(the)g(Left)g(w)-5
b(all)68 b(indicates)1070 4831 y(that)50 b(Blac)-5 b(k)51
b(initiated)h(pla)-5 b(y)51 b(and)e(that)h(the)g(whole)g(sequence)g(of)
f(pla)-5 b(y)51 b(con)-5 b(tained)50 b(an)f(equal)1070
5059 y(n)-5 b(um)g(b)5 b(er)58 b(of)g(lo)5 b(cal)60 b(pla)-5
b(ys.)2373 7078 y @beginspecial -1 @llx -1 @lly 232.996735
@urx 116.998352 @ury 1988.971924 @rwi 1002.985535 @rhi
@setspecial
%%BeginDocument: /u/levy/MSRI/Book42/spight/fig02.ps
%!PS-Adobe-2.0 EPSF-2.0 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%Created By:                     GLE v3.5 R0.23                  %%
%%            visit www.uark.edu/misc/vlabella/gle/gle.html %%
%%                          for more information            %%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%CreationDate: Fri Apr  6 07:22:23 2001
%%SourceFile:   graph02.gle
%%BoundingBox: -1 -1 233 117 
%%EndComments 
%%EndProlog 
gsave 
 
/f {findfont exch scalefont setfont} bind def 
/s {show} bind def 
/ps {true charpath} bind def 
/l {lineto} bind def 
/m {newpath moveto} bind def 
matrix currentmatrix /originmat exch def 
/umatrix {originmat matrix concatmatrix setmatrix} def 
 
 [72 0 0 72 0 0] umatrix 
  [28.3465 0 0 28.3465 0 0] umatrix 
 [] 0 setdash 
0.02 setlinewidth 
0 0 0 setrgbcolor 
0 0 m 
0 0 m 
0 0 m 
0 0 m 
1.224 0.612 m 
0 0 0 setrgbcolor 
[] 0 setdash 
1 setlinecap 
1.224 0.612 m 
6.936 0.612 l 
stroke 
0 0 0 setrgbcolor 
0.02 setlinewidth 
[] 0 setdash 
0 setlinecap 
0 0 0 setrgbcolor 
[] 0 setdash 
6.936 0.612 m 
6.936 0.612 m 
6.936 0.562 l 
stroke 
6.579 0.612 m 
6.579 0.612 m 
6.579 0.562 l 
stroke 
6.222 0.612 m 
6.222 0.612 m 
6.222 0.562 l 
stroke 
5.865 0.612 m 
5.865 0.612 m 
5.865 0.562 l 
stroke 
5.508 0.612 m 
5.508 0.612 m 
5.508 0.562 l 
stroke 
5.151 0.612 m 
5.151 0.612 m 
5.151 0.562 l 
stroke 
4.794 0.612 m 
4.794 0.612 m 
4.794 0.562 l 
stroke 
4.437 0.612 m 
4.437 0.612 m 
4.437 0.562 l 
stroke 
4.08 0.612 m 
4.08 0.612 m 
4.08 0.562 l 
stroke 
3.723 0.612 m 
3.723 0.612 m 
3.723 0.562 l 
stroke 
3.366 0.612 m 
3.366 0.612 m 
3.366 0.562 l 
stroke 
3.009 0.612 m 
3.009 0.612 m 
3.009 0.562 l 
stroke 
2.652 0.612 m 
2.652 0.612 m 
2.652 0.562 l 
stroke 
2.295 0.612 m 
2.295 0.612 m 
2.295 0.562 l 
stroke 
1.938 0.612 m 
1.938 0.612 m 
1.938 0.562 l 
stroke 
1.581 0.612 m 
1.581 0.612 m 
1.581 0.562 l 
stroke 
1.224 0.612 m 
1.224 0.612 m 
1.224 0.562 l 
stroke 
0 0 0 setrgbcolor 
[] 0 setdash 
6.936 0.612 m 
6.936 0.612 m 
6.936 0.512 l 
stroke 
6.222 0.612 m 
6.222 0.612 m 
6.222 0.512 l 
stroke 
5.508 0.612 m 
5.508 0.612 m 
5.508 0.512 l 
stroke 
4.794 0.612 m 
4.794 0.612 m 
4.794 0.512 l 
stroke 
4.08 0.612 m 
4.08 0.612 m 
4.08 0.512 l 
stroke 
3.366 0.612 m 
3.366 0.612 m 
3.366 0.512 l 
stroke 
2.652 0.612 m 
2.652 0.612 m 
2.652 0.512 l 
stroke 
1.938 0.612 m 
1.938 0.612 m 
1.938 0.512 l 
stroke 
1.224 0.612 m 
1.224 0.612 m 
1.224 0.512 l 
stroke 
0 0 0 setrgbcolor 
0.02 setlinewidth 
[] 0 setdash 
0 0 0 setrgbcolor 
[] 0 setdash 
6.936 0.032 m 
6.7732 0.032 m 
6.7732 0.032 m 
 0.400000 /Times-Roman f (\55) s 6.9064 0.032 m 
(5) s 6.936 0.032 m 
6.222 0.032 m 
6.0524 0.032 m 
6.0524 0.032 m 
(\55) s 6.1856 0.032 m 
(4) s 6.222 0.032 m 
5.508 0.032 m 
5.3466 0.032 m 
5.3466 0.032 m 
(\55) s 5.4798 0.032 m 
(3) s 5.508 0.032 m 
4.794 0.032 m 
4.6238 0.032 m 
4.6238 0.032 m 
(\55) s 4.757 0.032 m 
(2) s 4.794 0.032 m 
4.08 0.032 m 
3.926 0.032 m 
3.926 0.032 m 
(\55) s 4.0592 0.032 m 
(1) s 4.08 0.032 m 
3.366 0.032 m 
3.266 0.032 m 
3.266 0.032 m 
(0) s 3.366 0.032 m 
2.652 0.032 m 
2.551 0.032 m 
2.551 0.032 m 
(1) s 2.652 0.032 m 
1.938 0.032 m 
1.837 0.032 m 
1.837 0.032 m 
(2) s 1.938 0.032 m 
1.224 0.032 m 
1.129 0.032 m 
1.129 0.032 m 
(3) s 1.224 0.032 m 
1.224 0.612 m 
0 0 0 setrgbcolor 
[] 0 setdash 
1 setlinecap 
1.224 0.612 m 
1.224 3.468 l 
stroke 
0 0 0 setrgbcolor 
0.02 setlinewidth 
[] 0 setdash 
0 setlinecap 
0 0 0 setrgbcolor 
[] 0 setdash 
1.224 0.612 m 
1.224 0.612 m 
1.174 0.612 l 
stroke 
1.224 0.969 m 
1.224 0.969 m 
1.174 0.969 l 
stroke 
1.224 1.326 m 
1.224 1.326 m 
1.174 1.326 l 
stroke 
1.224 1.683 m 
1.224 1.683 m 
1.174 1.683 l 
stroke 
1.224 2.04 m 
1.224 2.04 m 
1.174 2.04 l 
stroke 
1.224 2.397 m 
1.224 2.397 m 
1.174 2.397 l 
stroke 
1.224 2.754 m 
1.224 2.754 m 
1.174 2.754 l 
stroke 
1.224 3.111 m 
1.224 3.111 m 
1.174 3.111 l 
stroke 
1.224 3.468 m 
1.224 3.468 m 
1.174 3.468 l 
stroke 
0 0 0 setrgbcolor 
[] 0 setdash 
1.224 0.612 m 
1.224 0.612 m 
1.124 0.612 l 
stroke 
1.224 1.326 m 
1.224 1.326 m 
1.124 1.326 l 
stroke 
1.224 2.04 m 
1.224 2.04 m 
1.124 2.04 l 
stroke 
1.224 2.754 m 
1.224 2.754 m 
1.124 2.754 l 
stroke 
1.224 3.468 m 
1.224 3.468 m 
1.124 3.468 l 
stroke 
0 0 0 setrgbcolor 
0.02 setlinewidth 
[] 0 setdash 
0 0 0 setrgbcolor 
[] 0 setdash 
0.924 0.612 m 
0.7336 0.4796 m 
0.7336 0.4796 m 
(0) s 0.924 0.612 m 
0.924 1.326 m 
0.7664 1.1908 m 
0.7664 1.1908 m 
(1) s 0.924 1.326 m 
0.924 2.04 m 
0.734 1.9048 m 
0.734 1.9048 m 
(2) s 0.924 2.04 m 
0.924 2.754 m 
0.7516 2.6216 m 
0.7516 2.6216 m 
(3) s 0.924 2.754 m 
0.924 3.468 m 
0.7352 3.3328 m 
0.7352 3.3328 m 
(4) s 0.924 3.468 m 
1.224 3.468 m 
6.936 0.612 m 
[] 0 setdash 
0.02 setlinewidth 
[] 0 setdash 
0 0 1 setrgbcolor 
0.05 setlinewidth 
1.938 0.612 m 
1.938 0.612 m 
4.08 2.754 l 
stroke 
[] 0 setdash 
0.02 setlinewidth 
[] 0 setdash 
1 0 0 setrgbcolor 
0.05 setlinewidth 
4.08 2.754 m 
4.08 2.754 m 
6.222 0.612 l 
stroke 
[] 0 setdash 
0.02 setlinewidth 
[] 0 setdash 
0 0 0 setrgbcolor 
0.05 setlinewidth 
4.08 2.754 m 
4.08 2.754 m 
4.08 3.23024 l 
stroke 
0 0 0 setrgbcolor 
0.02 setlinewidth 
[] 0 setdash 
0 0 m 
0 0 0 setrgbcolor 
0.02 setlinewidth 
[] 0 setdash 
0 0 0 setrgbcolor 
0.02 setlinewidth 
[] 0 setdash 
0 0 m 
0.02 setlinewidth 
4.08 3.23024 m 
3.975 3.13931 m 
1 setlinejoin 
 newpath 3.975 3.13931 moveto 
3.975 3.13931 moveto 
4.185 3.13931 l 
4.08 3.32117 l 
3.975 3.13931 l 
gsave 
0 0 0 setrgbcolor 
fill 
0 0 0 setrgbcolor 
grestore 
0 setlinejoin 
0.02 setlinewidth 
0 0 0 setrgbcolor 
4.08 3.23024 m 
0 0 0 setrgbcolor 
0.02 setlinewidth 
[] 0 setdash 
0 0 m 
0 0 m 
0 0 m 
0 0 0 setrgbcolor 
0.02 setlinewidth 
[] 0 setdash 
showpage 
grestore 
%%Trailer 

%%EndDocument
 @endspecial 3583 7412 a Ff(Figure)57 b(2.)77 b Fe(Gote.)1281
7852 y Fm(Figure)56 b(2)g(sho)-5 b(ws)57 b(the)f(protot)-5
b(ypical)58 b(gote)e(thermograph.)77 b(Tw)-5 b(o)56 b(inclined)i(slop)5
b(es)57 b(meet)1070 8080 y(at)d(the)g(top)f(of)g(the)h(hill,)j(whic)-5
b(h)54 b(means)g(that)g(eac)-5 b(h)53 b(pla)-5 b(y)g(er)54
b(is)h(inclined)g(to)f(pla)-5 b(y)54 b(b)5 b(elo)-5 b(w)54
b(the)1070 8309 y(temp)5 b(erature)70 b(of)f(the)h(game,)i(whic)-5
b(h)70 b(is)h(3.)112 b(\(The)69 b(mast)i(v)-10 b(alue)70
b(is)h Fi(\000)p Fm(1.\))111 b(She)70 b(initiates)i(a)1070
8537 y(sequence)65 b(of)h(pla)-5 b(y)65 b(in)i(whic)-5
b(h)65 b(she)h(mak)-5 b(es)67 b(one)e(more)h(pla)-5 b(y)66
b(lo)5 b(cally)67 b(than)e(her)h(opp)5 b(onen)-5 b(t.)1070
8766 y(Ab)5 b(o)-5 b(v)g(e)52 b(the)i(temp)5 b(erature)53
b(of)g(the)g(game)g(the)h(mast)g(is)g(blac)-5 b(k,)54
b(whic)-5 b(h)54 b(means)f(that)h(neither)1070 8994 y(pla)-5
b(y)g(er)59 b(is)g(inclined)h(to)f(pla)-5 b(y)59 b(lo)5
b(cally)-15 b(.)1281 9223 y(Figure)46 b(3)h(sho)-5 b(ws)47
b(the)g(protot)-5 b(ypical)48 b(sen)-5 b(te)47 b(thermograph.)73
b(Its)48 b(mast)g(v)-10 b(alue)47 b(is)h(2)f(and)f(its)1070
9451 y(temp)5 b(erature)61 b(is)h(1.)86 b(It)61 b(has)g(one)g(v)-5
b(ertical)63 b(w)-5 b(all)62 b(at)g(the)f(top)g(of)g(the)g(hill,)i
(whic)-5 b(h)62 b(indicates)1070 9679 y(that,)76 b(just)c(b)5
b(elo)-5 b(w)73 b(the)g(temp)5 b(erature)72 b(of)g(the)h(game,)j(one)c
(pla)-5 b(y)g(er)73 b(will)h(b)5 b(e)72 b(able)h(to)g(pla)-5
b(y)1070 9908 y(lo)5 b(cally)63 b(and)d(force)h(her)g(opp)5
b(onen)-5 b(t)60 b(to)i(mak)-5 b(e)61 b(an)g(equal)g(n)-5
b(um)g(b)5 b(er)61 b(of)g(lo)5 b(cal)63 b(pla)-5 b(ys.)86
b(This)62 b(is)1070 10136 y(White's)j(sen)-5 b(te)65
b(b)5 b(ecause)64 b(the)h(Righ)-5 b(t)65 b(w)-5 b(all)67
b(is)e(v)-5 b(ertical.)98 b(Also,)66 b(the)f(mast)g(is)h(colored)f
(red,)1070 10365 y(whic)-5 b(h)56 b(means)g(that)g(White)h(will)h(not)e
(b)5 b(e)56 b(unhapp)-5 b(y)53 b(to)k(initiate)h(lo)5
b(cal)58 b(pla)-5 b(y)56 b(in)g(the)g(region)1070 10593
y(b)5 b(et)-5 b(w)g(een)46 b(the)g(temp)5 b(erature)46
b(of)g(the)g(game)g(and)f(the)h(temp)5 b(erature)46 b(ab)5
b(o)-5 b(v)g(e)46 b(whic)-5 b(h)46 b(the)g(mast)p eop
%%Page: 91 4
91 3 bop 1926 577 a Fg(GO)65 b(THERMOGRAPHY:)f(THE)g(4/21/98)e(JIANG{R)
l(UI)h(ENDGAME)706 b(91)2850 4287 y @beginspecial -1
@llx -1 @lly 205.997101 @urx 307.995697 @ury 1448.979492
@rwi 2162.969482 @rhi @setspecial
%%BeginDocument: /u/levy/MSRI/Book42/spight/fig03.ps
%!PS-Adobe-2.0 EPSF-2.0 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%Created By:                     GLE v3.5 R0.23                  %%
%%            visit www.uark.edu/misc/vlabella/gle/gle.html %%
%%                          for more information            %%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%CreationDate: Fri Apr  6 07:55:34 2001
%%SourceFile:   graph03.gle
%%BoundingBox: -1 -1 206 308 
%%EndComments 
%%EndProlog 
gsave 
 
/f {findfont exch scalefont setfont} bind def 
/s {show} bind def 
/ps {true charpath} bind def 
/l {lineto} bind def 
/m {newpath moveto} bind def 
matrix currentmatrix /originmat exch def 
/umatrix {originmat matrix concatmatrix setmatrix} def 
 
 [72 0 0 72 0 0] umatrix 
  [28.3465 0 0 28.3465 0 0] umatrix 
 [] 0 setdash 
0.02 setlinewidth 
0 0 0 setrgbcolor 
0 0 m 
0 0 m 
0 0 m 
0 0 m 
1.08 1.62 m 
0 0 0 setrgbcolor 
[] 0 setdash 
1 setlinecap 
1.08 1.62 m 
6.12 1.62 l 
stroke 
0 0 0 setrgbcolor 
0.02 setlinewidth 
[] 0 setdash 
0 setlinecap 
0 0 0 setrgbcolor 
[] 0 setdash 
6.12 1.62 m 
6.12 1.62 m 
6.12 1.57 l 
stroke 
4.86 1.62 m 
4.86 1.62 m 
4.86 1.57 l 
stroke 
3.6 1.62 m 
3.6 1.62 m 
3.6 1.57 l 
stroke 
2.34 1.62 m 
2.34 1.62 m 
2.34 1.57 l 
stroke 
1.08 1.62 m 
1.08 1.62 m 
1.08 1.57 l 
stroke 
0 0 0 setrgbcolor 
[] 0 setdash 
4.86 1.62 m 
4.86 1.62 m 
4.86 1.52 l 
stroke 
2.34 1.62 m 
2.34 1.62 m 
2.34 1.52 l 
stroke 
0 0 0 setrgbcolor 
0.02 setlinewidth 
[] 0 setdash 
0 0 0 setrgbcolor 
[] 0 setdash 
4.86 1.04 m 
4.759 1.04 m 
4.759 1.04 m 
 0.400000 /Times-Roman f (2) s 4.86 1.04 m 
2.34 1.04 m 
2.245 1.04 m 
2.245 1.04 m 
(3) s 2.34 1.04 m 
1.08 1.62 m 
0 0 0 setrgbcolor 
[] 0 setdash 
1 setlinecap 
1.08 1.62 m 
1.08 9.18 l 
stroke 
0 0 0 setrgbcolor 
0.02 setlinewidth 
[] 0 setdash 
0 setlinecap 
0 0 0 setrgbcolor 
[] 0 setdash 
1.08 1.62 m 
1.08 1.62 m 
1.03 1.62 l 
stroke 
1.08 2.88 m 
1.08 2.88 m 
1.03 2.88 l 
stroke 
1.08 4.14 m 
1.08 4.14 m 
1.03 4.14 l 
stroke 
1.08 5.4 m 
1.08 5.4 m 
1.03 5.4 l 
stroke 
1.08 6.66 m 
1.08 6.66 m 
1.03 6.66 l 
stroke 
1.08 7.92 m 
1.08 7.92 m 
1.03 7.92 l 
stroke 
1.08 9.18 m 
1.08 9.18 m 
1.03 9.18 l 
stroke 
0 0 0 setrgbcolor 
[] 0 setdash 
1.08 1.62 m 
1.08 1.62 m 
0.98 1.62 l 
stroke 
1.08 4.14 m 
1.08 4.14 m 
0.98 4.14 l 
stroke 
1.08 6.66 m 
1.08 6.66 m 
0.98 6.66 l 
stroke 
1.08 9.18 m 
1.08 9.18 m 
0.98 9.18 l 
stroke 
0 0 0 setrgbcolor 
0.02 setlinewidth 
[] 0 setdash 
0 0 0 setrgbcolor 
[] 0 setdash 
0.78 1.62 m 
0.5896 1.4876 m 
0.5896 1.4876 m 
(0) s 0.78 1.62 m 
0.78 4.14 m 
0.6224 4.0048 m 
0.6224 4.0048 m 
(1) s 0.78 4.14 m 
0.78 6.66 m 
0.59 6.5248 m 
0.59 6.5248 m 
(2) s 0.78 6.66 m 
0.78 9.18 m 
0.6076 9.0476 m 
0.6076 9.0476 m 
(3) s 0.78 9.18 m 
1.08 9.18 m 
6.12 1.62 m 
[] 0 setdash 
0.02 setlinewidth 
[] 0 setdash 
0 0 1 setrgbcolor 
0.05 setlinewidth 
2.34 1.62 m 
2.34 1.62 m 
4.86 4.14 l 
stroke 
[] 0 setdash 
0.02 setlinewidth 
[] 0 setdash 
1 0 0 setrgbcolor 
0.05 setlinewidth 
4.86 1.62 m 
4.86 1.62 m 
4.86 6.66 l 
stroke 
[] 0 setdash 
0.02 setlinewidth 
[] 0 setdash 
0 0 0 setrgbcolor 
0.05 setlinewidth 
4.86 6.66 m 
4.86 6.66 m 
4.86 8.34084 l 
stroke 
0 0 0 setrgbcolor 
0.02 setlinewidth 
[] 0 setdash 
0 0 m 
0 0 0 setrgbcolor 
0.02 setlinewidth 
[] 0 setdash 
0 0 0 setrgbcolor 
0.02 setlinewidth 
[] 0 setdash 
0 0 m 
0.02 setlinewidth 
4.86 8.34084 m 
4.755 8.24991 m 
1 setlinejoin 
 newpath 4.755 8.24991 moveto 
4.755 8.24991 moveto 
4.965 8.24991 l 
4.86 8.43177 l 
4.755 8.24991 l 
gsave 
0 0 0 setrgbcolor 
fill 
0 0 0 setrgbcolor 
grestore 
0 setlinejoin 
0.02 setlinewidth 
0 0 0 setrgbcolor 
4.86 8.34084 m 
0 0 0 setrgbcolor 
0.02 setlinewidth 
[] 0 setdash 
0 0 m 
0 0 m 
0 0 m 
0 0 0 setrgbcolor 
0.02 setlinewidth 
[] 0 setdash 
showpage 
grestore 
%%Trailer 

%%EndDocument
 @endspecial 3555 4269 a Ff(Figure)56 b(3.)78 b Fe(Sente.)1070
4760 y Fm(is)60 b(blac)-5 b(k.)81 b(So)59 b(when)g(1)50
b Fj(<)g(t)h(<)f Fm(2,)59 b(White)h(will)i(b)5 b(e)59
b(able)h(to)g(pla)-5 b(y)59 b(in)h(the)g(game)g(with)g(sen)-5
b(te,)1070 4988 y(as)59 b(Blac)-5 b(k)59 b(do)5 b(es)59
b(b)5 b(est)58 b(to)h(reply)g(lo)5 b(cally)-15 b(.)2850
7870 y @beginspecial -1 @llx -1 @lly 205.997101 @urx
234.996704 @ury 1448.979492 @rwi 1651.976562 @rhi @setspecial
%%BeginDocument: /u/levy/MSRI/Book42/spight/fig04.ps
%!PS-Adobe-2.0 EPSF-2.0 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%Created By:                     GLE v3.5 R0.23                  %%
%%            visit www.uark.edu/misc/vlabella/gle/gle.html %%
%%                          for more information            %%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%CreationDate: Fri Apr  6 08:51:12 2001
%%SourceFile:   graph04.gle
%%BoundingBox: -1 -1 206 235 
%%EndComments 
%%EndProlog 
gsave 
 
/f {findfont exch scalefont setfont} bind def 
/s {show} bind def 
/ps {true charpath} bind def 
/l {lineto} bind def 
/m {newpath moveto} bind def 
matrix currentmatrix /originmat exch def 
/umatrix {originmat matrix concatmatrix setmatrix} def 
 
 [72 0 0 72 0 0] umatrix 
  [28.3465 0 0 28.3465 0 0] umatrix 
 [] 0 setdash 
0.02 setlinewidth 
0 0 0 setrgbcolor 
0 0 m 
0 0 m 
0 0 m 
0 0 m 
1.0815 1.236 m 
0 0 0 setrgbcolor 
[] 0 setdash 
1 setlinecap 
1.0815 1.236 m 
6.1285 1.236 l 
stroke 
0 0 0 setrgbcolor 
0.02 setlinewidth 
[] 0 setdash 
0 setlinecap 
0 0 0 setrgbcolor 
[] 0 setdash 
6.1285 1.236 m 
6.1285 1.236 m 
6.1285 1.186 l 
stroke 
5.4075 1.236 m 
5.4075 1.236 m 
5.4075 1.186 l 
stroke 
4.6865 1.236 m 
4.6865 1.236 m 
4.6865 1.186 l 
stroke 
3.9655 1.236 m 
3.9655 1.236 m 
3.9655 1.186 l 
stroke 
3.2445 1.236 m 
3.2445 1.236 m 
3.2445 1.186 l 
stroke 
2.5235 1.236 m 
2.5235 1.236 m 
2.5235 1.186 l 
stroke 
1.8025 1.236 m 
1.8025 1.236 m 
1.8025 1.186 l 
stroke 
1.0815 1.236 m 
1.0815 1.236 m 
1.0815 1.186 l 
stroke 
0 0 0 setrgbcolor 
[] 0 setdash 
5.4075 1.236 m 
5.4075 1.236 m 
5.4075 1.136 l 
stroke 
3.9655 1.236 m 
3.9655 1.236 m 
3.9655 1.136 l 
stroke 
2.5235 1.236 m 
2.5235 1.236 m 
2.5235 1.136 l 
stroke 
1.0815 1.236 m 
1.0815 1.236 m 
1.0815 1.136 l 
stroke 
0 0 0 setrgbcolor 
0.02 setlinewidth 
[] 0 setdash 
0 0 0 setrgbcolor 
[] 0 setdash 
5.4075 0.656 m 
5.2461 0.656 m 
5.2461 0.656 m 
 0.400000 /Times-Roman f (\55) s 5.3793 0.656 m 
(3) s 5.4075 0.656 m 
3.9655 0.656 m 
3.7953 0.656 m 
3.7953 0.656 m 
(\55) s 3.9285 0.656 m 
(2) s 3.9655 0.656 m 
2.5235 0.656 m 
2.3695 0.656 m 
2.3695 0.656 m 
(\55) s 2.5027 0.656 m 
(1) s 2.5235 0.656 m 
1.0815 0.656 m 
0.9815 0.656 m 
0.9815 0.656 m 
(0) s 1.0815 0.656 m 
1.0815 1.236 m 
0 0 0 setrgbcolor 
[] 0 setdash 
1 setlinecap 
1.0815 1.236 m 
1.0815 7.004 l 
stroke 
0 0 0 setrgbcolor 
0.02 setlinewidth 
[] 0 setdash 
0 setlinecap 
0 0 0 setrgbcolor 
[] 0 setdash 
1.0815 1.236 m 
1.0815 1.236 m 
1.0315 1.236 l 
stroke 
1.0815 1.957 m 
1.0815 1.957 m 
1.0315 1.957 l 
stroke 
1.0815 2.678 m 
1.0815 2.678 m 
1.0315 2.678 l 
stroke 
1.0815 3.399 m 
1.0815 3.399 m 
1.0315 3.399 l 
stroke 
1.0815 4.12 m 
1.0815 4.12 m 
1.0315 4.12 l 
stroke 
1.0815 4.841 m 
1.0815 4.841 m 
1.0315 4.841 l 
stroke 
1.0815 5.562 m 
1.0815 5.562 m 
1.0315 5.562 l 
stroke 
1.0815 6.283 m 
1.0815 6.283 m 
1.0315 6.283 l 
stroke 
1.0815 7.004 m 
1.0815 7.004 m 
1.0315 7.004 l 
stroke 
0 0 0 setrgbcolor 
[] 0 setdash 
1.0815 1.236 m 
1.0815 1.236 m 
0.9815 1.236 l 
stroke 
1.0815 2.678 m 
1.0815 2.678 m 
0.9815 2.678 l 
stroke 
1.0815 4.12 m 
1.0815 4.12 m 
0.9815 4.12 l 
stroke 
1.0815 5.562 m 
1.0815 5.562 m 
0.9815 5.562 l 
stroke 
1.0815 7.004 m 
1.0815 7.004 m 
0.9815 7.004 l 
stroke 
0 0 0 setrgbcolor 
0.02 setlinewidth 
[] 0 setdash 
0 0 0 setrgbcolor 
[] 0 setdash 
0.7815 1.236 m 
0.5911 1.1036 m 
0.5911 1.1036 m 
(0) s 0.7815 1.236 m 
0.7815 2.678 m 
0.6239 2.5428 m 
0.6239 2.5428 m 
(1) s 0.7815 2.678 m 
0.7815 4.12 m 
0.5915 3.9848 m 
0.5915 3.9848 m 
(2) s 0.7815 4.12 m 
0.7815 5.562 m 
0.6091 5.4296 m 
0.6091 5.4296 m 
(3) s 0.7815 5.562 m 
0.7815 7.004 m 
0.5927 6.8688 m 
0.5927 6.8688 m 
(4) s 0.7815 7.004 m 
1.0815 7.004 m 
6.1285 1.236 m 
[] 0 setdash 
0.02 setlinewidth 
[] 0 setdash 
0 0 1 setrgbcolor 
0.05 setlinewidth 
1.8025 1.236 m 
1.8025 1.236 m 
1.8025 4.841 l 
2.5235 5.562 l 
stroke 
[] 0 setdash 
0.02 setlinewidth 
[] 0 setdash 
1 0 0 setrgbcolor 
0.05 setlinewidth 
2.5235 5.562 m 
2.5235 5.562 m 
3.2445 4.841 l 
3.2445 3.399 l 
5.4075 1.236 l 
stroke 
[] 0 setdash 
0.02 setlinewidth 
[] 0 setdash 
0 0 0 setrgbcolor 
0.05 setlinewidth 
2.5235 5.562 m 
2.5235 5.562 m 
2.5235 6.52381 l 
stroke 
0 0 0 setrgbcolor 
0.02 setlinewidth 
[] 0 setdash 
0 0 m 
0 0 0 setrgbcolor 
0.02 setlinewidth 
[] 0 setdash 
0 0 0 setrgbcolor 
0.02 setlinewidth 
[] 0 setdash 
0 0 m 
0.02 setlinewidth 
2.5235 6.52381 m 
2.4185 6.43288 m 
1 setlinejoin 
 newpath 2.4185 6.43288 moveto 
2.4185 6.43288 moveto 
2.6285 6.43288 l 
2.5235 6.61474 l 
2.4185 6.43288 l 
gsave 
0 0 0 setrgbcolor 
fill 
0 0 0 setrgbcolor 
grestore 
0 setlinejoin 
0.02 setlinewidth 
0 0 0 setrgbcolor 
2.5235 6.52381 m 
0 0 0 setrgbcolor 
0.02 setlinewidth 
[] 0 setdash 
0 0 m 
0 0 m 
0 0 m 
0 0 0 setrgbcolor 
0.02 setlinewidth 
[] 0 setdash 
showpage 
grestore 
%%Trailer 

%%EndDocument
 @endspecial 3221 8028 a Ff(Figure)57 b(4.)78 b Fe(\\Double)54
b(sente".)1281 8537 y Fm(A)63 b(common)h(go)f(term)i(is)f(double)f(sen)
-5 b(te.)94 b(A)-5 b(t)64 b(\014rst)g(it)g(do)5 b(es)64
b(not)f(seem)i(to)e(mak)-5 b(e)64 b(m)-5 b(uc)g(h)1070
8766 y(sense)68 b(in)h(terms)g(of)e(thermograph)-5 b(y)-15
b(,)69 b(b)5 b(ecause)68 b(it)h(suggests)g(t)-5 b(w)g(o)68
b(distinct)i(v)-5 b(ertical)70 b(lines,)1070 8994 y(whic)-5
b(h)68 b(can)g(nev)-5 b(er)67 b(meet)i(to)g(form)e(a)h(mast.)108
b(Ho)-5 b(w)g(ev)g(er,)70 b(it)f(do)5 b(es)68 b(mak)-5
b(e)68 b(sense)h(as)f(a)g(tem-)1070 9223 y(p)5 b(erature)62
b(relativ)-5 b(e)64 b(term.)91 b(In)63 b(the)g(thermograph)f(in)h
(Figure)g(4,)g(b)5 b(oth)62 b(w)-5 b(alls)65 b(are)d(v)-5
b(ertical)1070 9451 y(when)76 b(1)1656 9382 y Fk(1)p
1656 9411 71 8 v 1656 9512 a(2)1827 9451 y Fj(<)j(t)h(<)f
Fm(2)2511 9382 y Fk(1)p 2511 9411 V 2511 9512 a(2)2602
9451 y Fm(.)133 b(A)-5 b(t)77 b(those)h(temp)5 b(eratures,)81
b(eac)-5 b(h)77 b(pla)-5 b(y)g(er)77 b(will)j(b)5 b(e)76
b(able)i(to)f(pla)-5 b(y)1070 9679 y(in)76 b(the)g(game)h(with)f(sen)-5
b(te,)81 b(and)75 b(will)k(b)5 b(e)75 b(eager)h(to)g(do)g(so,)k(as)d
(the)f(gain)g(from)g(pla)-5 b(ying)1070 9908 y(costs)61
b(nothing)g(\(v)-5 b(ersus)60 b(allo)-5 b(wing)63 b(the)d(opp)5
b(onen)-5 b(t)60 b(to)g(pla)-5 b(y)61 b(\014rst)g(lo)5
b(cally\).)86 b(Hence)60 b(the)g(go)1070 10136 y(pro)-5
b(v)g(erb,)55 b(\\Pla)-5 b(y)57 b(double)f(sen)-5 b(te)57
b(early)-15 b(.")78 b(Of)55 b(course,)i(earlier,)h(when)e
Fj(t)49 b(>)f Fm(2)6109 10067 y Fk(1)p 6109 10096 V 6109
10197 a(2)6200 10136 y Fm(,)57 b(a)f(lo)5 b(cal)58 b(pla)-5
b(y)1070 10365 y(is)70 b(gote,)h(but)d(double)h(sen)-5
b(te)69 b(tend)f(to)h(arise)h(when)e(the)h(am)-5 b(bien)g(t)70
b(temp)5 b(erature)69 b(is)g(lo)-5 b(w)g(er)1070 10593
y(than)58 b(the)g(lo)5 b(cal)60 b(temp)5 b(erature.)p
eop
%%Page: 92 5
92 4 bop 1070 577 a Fg(92)2140 b(WILLIAM)65 b(L.)g(SPIGHT)3448
1511 y @beginspecial 0 @llx 0 @lly 76.998932 @urx 39
@ury 769.989075 @rwi 389.994446 @rhi @setspecial
%%BeginDocument: /u/levy/MSRI/Book42/spight/fig05a.ps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: dvipsk 5.58f Copyright 1986, 1994 Radical Eye Software
%%Title: 604211.dvi
%%BoundingBox: 0 0 77 39
%  #[info:
%									%
%									%
%	     _								%
%	    / \\  /'\\ -_-_  ,._-_  /'\\     _-_  -_-_	 _-_,		%
%	   || || || || || \\  ||   || ||    || \\ || \\ ||_.		%
%	   || || || || || ||  ||   || ||    ||/	  || ||	 ~ ||		%
%	   \\_-| \\,/  ||-'   \\,  \\,/	 <> \\,/  ||-'	,-_-		%
%	    /  \       |/			  |/			%
%	   '----`      '			  '			%
%									%
%		  Copyright (c) 1993  Jan van der Steen			%
%	       Centre for Mathematics and Computer Science		%
%		       Amsterdam, the Netherlands			%
%									%
%-----------------------------------------------------------------------%
%   You are not allowed to use this software in commercial software.	%
%   You are allowed to use this software in free software under the	%
%   condition that you maintain this integral message in the source.	%
%-----------------------------------------------------------------------%
% File	  : gopro.eps							%
% Purpose : Implement PostScript procedures to draw Go games		%
% Version : 1.28							%
% Modified: 07 Apr 1995 18:10:54					%
% Author  : Jan van der Steen (jansteen@cwi.nl)				%
%  #]info: 

/Liberty 100 dict def
Liberty begin

%  #[init:
%
% Default fonts for various applications
%
/bFont /Helvetica-Bold def	% Black numbers
/wFont /Helvetica      def	% White numbers
/fFont /Helvetica      def	% Grid markers
/mFont /Helvetica      def	% Metamarkers

/bF { bFont findfont yP scalefont setfont } bind def /bB -24 def /bH 752 def
/wF { wFont findfont yP scalefont setfont } bind def /wB -23 def /wH 733 def
/fF { fFont findfont yP scalefont setfont } bind def
/mF { mFont findfont yP scalefont setfont } bind def

%
% Abbreviations
%
/W 0 def			% White color
/B 1 def			% Black color

%
% The following sizes are in square units
%
/gW	.01   def	% Width of grid line
/bW	.10   def	% Width of border line
/wW	.02   def	% Width of a white stone
/bR	.48   def	% Radius of a black stone
/wR	.48   def	% Radius of a white stone
/hR	.10   def	% Radius of a hoshi point
/xP	.60   def	% Maximum width  of strings (number,indicator)
/yP	.80   def	% Maximum height of strings (number,indicator)
/axis	true  def	% Do we print coordinates too
/cache	true  def	% Do we use the stone cache

%
% The stone cache
%
cache {
    /EMPTY	 0 def
    /BLACK	-1 def
    /WHITE	-2 def
} if
%  #]init: 
%  #[tools:
%	 #[snap:

/snap {
    %
    % x y snap x" y"
    %
    % Make x and y snap on output device grid
    %
    transform round exch round exch itransform
} bind def

%	 #]snap: 
%	 #[centerstrn:

/centerstrn {
    %
    % string centerstrn --> --
    %
    % Print "string" balanced around (0,0) and make sure
    % it will fit in a "yP" x "yP" bounding box.
    %
    dup stringwidth pop
    %
    % Does stringwidth exceed allowed maximum
    %
    dup yP gt { dup yP exch div 1 scale } if

    %
    % Center the string
    %
    2 div neg yP .20 sub 2 div neg moveto show
} bind def

%	 #]centerstrn: 
%  #]tools: 
%  #[boardinit:

/boardinit {
    %
    % boardsize (9, 13, 19, ...) realsize (in cm) boardinit --> ---
    %
    /realsize  exch def
    /boardsize exch def

    %
    % Initialise the hoshipoints
    %
    /hoshipos
	boardsize 19 eq {6} {
	boardsize 13 eq {3} {
	boardsize  9 eq {2}
			{0}		% Nothing appropriate
		ifelse
	    } ifelse
	} ifelse
    def

    %
    % Initialise the coordinate system (square = unity)
    %
    realsize boardsize div 2.54 div 72 mul dup scale

    %
    % Get and load the caption font
    %
    % /Times-Roman findfont .5 scalefont setfont

    % .5 axis {1}{0} ifelse add dup translate
    % axis {1}{0} ifelse dup translate

    %
    % Initialise clipping to whole board, and region to NIL
    %
    /llbdx 0 def/llbdy llbdx boardsize 1 sub add def
    /urbdy 0 def/urbdx urbdy boardsize 1 sub add def
    /llrgx 0 def
    /urrgx 0 def
    /llrgy 0 def
    /urrgy 0 def

    %
    % Clean the current path
    %
    newpath
} bind def

%  #]boardinit: 
%  #[cache:
%	 #[cacheinit:

/cacheinit {
    %
    % For the stone cache
    %
    cache {
	/stonecache boardsize dup mul array def
	0 1 boardsize dup mul 1 sub {
	    stonecache exch EMPTY put
	} for
    } if
} bind def

%	 #]cacheinit: 
%	 #[cachedump:

/cachedump {
    0 1 360 {
	dup stonecache exch get
	dup EMPTY eq {
	    pop pop
	}{
	    BLACK eq {
		dup
		boardsize  mod boardsize 2 idiv sub exch
		boardsize idiv boardsize 2 idiv sub bs
	    }{
		dup
		boardsize  mod boardsize 2 idiv sub exch
		boardsize idiv boardsize 2 idiv sub ws
	    } ifelse
	} ifelse    
    } for
} bind def

%	 #]cachedump: 
%	 #[cachedelete:

/cachedelete {
    /y exch def
    /x exch def
    stonecache
	x boardsize 2 idiv add
	y boardsize 2 idiv add boardsize mul add
	EMPTY
    put
} bind def

%	 #]cachedelete: 
%	 #[cd:

/cd {
    %
    % Delete an entry from the cache (stone has been hit)
    % x y cd
    %
    cache { cachedelete }{ pop pop } ifelse
} bind def

%	 #]cd: 
%  #]cache: 
%  #[caption:

/caption {
    gsave
	0 -1 translate
	0 0 moveto show
    grestore
} bind def

%  #]caption: 
%  #[transboard:

/row  0 def
/col  0 def
/rmax 3 def	% 3 rows	(based on h = 146 diagrams)
/cmax 2 def	% 2 columns	(based on w = 146 diagrams)
/lm   2 def	% Left margin

/init {
    lm lm translate
    0 boardsize 2 add rmax 1 sub mul translate
} bind def

true {
    /transboard { 0 0 translate } bind def
}{
    /transboard {
	col boardsize 2 add mul neg
	row boardsize 2 add mul translate
	row rmax 1 sub lt { /row row 1 add def }{
	    /row 0 def
	    col cmax 1 sub lt { /col col 1 add def }{
		showpage restore save
	    } ifelse
	} ifelse
	col boardsize 2 add mul
	row boardsize 2 add mul neg translate
    } bind def
} ifelse

%  #]transboard: 
%  #[board:
%	 #[hoshidump:

/hoshidump {
    gsave
    boardsize 2 idiv dup translate
    0 setgray
    newpath	    0                   0               hR 0 360 arc fill
    newpath	    hoshipos            hoshipos        hR 0 360 arc fill
    newpath	    hoshipos            hoshipos neg    hR 0 360 arc fill
    newpath	    hoshipos neg        hoshipos        hR 0 360 arc fill
    newpath	    hoshipos neg        hoshipos neg    hR 0 360 arc fill
    boardsize 19 eq {
	newpath	        0               hoshipos        hR 0 360 arc fill
	newpath	        hoshipos        0               hR 0 360 arc fill
	newpath	        0               hoshipos neg    hR 0 360 arc fill
	newpath	        hoshipos neg    0               hR 0 360 arc fill
    } if
    grestore
} bind def

%	 #]hoshidump: 
%	 #[coordump:

/X-AXIS [
    (A)(B)(C)(D)(E)(F)(G)(H)(J)(K)(L)(M)(N)(O)(P)(Q)(R)(S)(T)
] def
/Y-AXIS [
    (1)(2)(3)(4)(5)(6)(7)(8)(9)(10)(11)(12)(13)(14)(15)(16)(17)(18)(19)
] def

/coordump {
    %
    % Surround the board with coordinates
    %
    fF
    newpath
    0 bdh moveto	% upper edge
    1 1 boardsize {
	1 sub X-AXIS exch get
	gsave currentpoint translate centerstrn grestore
	1 0 rmoveto
    } for
    newpath
    0 -1 moveto		% lower edge
    1 1 boardsize {
	1 sub X-AXIS exch get
	gsave currentpoint translate centerstrn grestore
	1 0 rmoveto
    } for
    newpath
    -1 0 moveto		% left edge
    1 1 boardsize {
	1 sub Y-AXIS exch get
	gsave currentpoint translate centerstrn grestore
	0 1 rmoveto
    } for
    newpath
    bdw 0 moveto	% right edge
    1 1 boardsize {
	1 sub Y-AXIS exch get
	gsave currentpoint translate centerstrn grestore
	0 1 rmoveto
    } for
    newpath
} bind def

%  #]coordump: 
%	 #[board:

/board {
    transboard					% Translate into position

    %
    % Clip region
    %
    % Example 1: Bottom slice
    % /bdx  0 def	% SGF coordinates (topdown, leftright)
    % /bdy  8 def	% SGF coordinates (topdown, leftright)
    % /bdw 19 def
    % /bdh 11 def
    %
    % Example 2: Top slice
    % /bdx  0 def
    % /bdy  0 def
    % /bdw 19 def
    % /bdh 10 def
    %
    /psclipx bdx def
    /psclipy boardsize bdy bdh add sub def
    /psclipw bdw def
    /pscliph bdh def

    axis {
	%
	% Add space for the coordinates
	%
	/psclipw psclipw 2 add def	% left/right side
	/pscliph pscliph 2 add def	% top/bottom side
    } if

    newpath
	0           0        moveto
	psclipw     0       rlineto
	0           pscliph rlineto
	psclipw neg 0       rlineto
    closepath
    gsave 1 setgray fill grestore clip
    newpath
    %
    % Translate to relative origin
    %
    psclipx .5 sub neg
    psclipy .5 sub neg translate

    axis {1}{0} ifelse dup translate

    %
    % Region
    %
    gsave
	llrgx urrgx ne llrgy urrgy ne or {
	    newpath
	    llrgx .5 sub llrgy .5 add moveto
	    llrgx .5 sub urrgy .5 sub lineto
	    urrgx .5 add urrgy .5 sub lineto
	    urrgx .5 add llrgy .5 add lineto
	    closepath
	    .75 setgray
	    % 255 255 div
	    % 175 255 div
	    % 125 255 div setrgbcolor
	    gsave gW setlinewidth stroke grestore fill
	    newpath
	} if
    grestore

    %
    % Horizontals
    %
    newpath
    1 1 boardsize 2 sub {
	0 exch snap moveto
	boardsize 1 sub 0 rlineto
    } for
    %
    % Verticals
    %
    1 1 boardsize 2 sub {
	0 snap moveto
	0 boardsize 1 sub rlineto
    } for
    gW setlinewidth stroke

    %
    % Borders
    %
    newpath
    0			0			moveto
    0			boardsize 1 sub		rlineto
    boardsize 1 sub	0			rlineto
    0			boardsize 1 sub neg	rlineto
    closepath
    bW setlinewidth stroke

    hoshidump					% Print the hoshi points
    cache { cachedump } if			% Print the cache contents
    axis  { coordump  } if			% Print the coordinates
    % grestore
} bind def

%	 #]board: 
%  #]board: 
%  #[stones:
%	 #[wst:

/wst {
    %
    % Numbered white stone
    %
    % [[s0 K0][...][sn Kn]] ox w x y wst --> --
    %
    %	x,y 	[0..boardsize-1]
    %	ox,w	[1/1000 unit]
    %
    gsave
	/y  exch def
	/x  exch def
	/h  wH   yP mul 1000 div def
	/w  exch yP mul 1000 div def
	/oy wB   yP mul 1000 div def
	/ox exch yP mul 1000 div def
	cache {
	    stonecache
		x boardsize 2 idiv add
		y boardsize 2 idiv add boardsize mul add
		WHITE
	    put
	} if
	x y translate
	0 0 ws
	0 setgray wF

	w xP gt { xP w div }{1} ifelse
	h yP gt { yP h div }{1} ifelse scale
	w 2 div ox add neg
	h 2 div oy add neg translate
	0 0 moveto
	1 1 counttomark 2 sub 2 idiv { pop neg yP mul 1000 div 0 rmoveto show } for
	pop % "mark" itself
    grestore
} bind def

%	 #]wst: 
%	 #[bst:

/bst {
    %
    % Numbered black stone
    %
    % [[s0 K0][...][sn Kn]] ox w x y bst --> --
    %
    %	x,y 	[0..boardsize-1]
    %	ox,w	[1/1000 unit]
    %
    %
    gsave
	/y  exch def
	/x  exch def
	/h  bH   yP mul 1000 div def
	/w  exch yP mul 1000 div def
	/oy bB   yP mul 1000 div def
	/ox exch yP mul 1000 div def
	cache {
	    stonecache
		x boardsize 2 idiv add
		y boardsize 2 idiv add boardsize mul add
		BLACK
	    put
	} if
	x y translate
	0 0 bs
	1 setgray bF

	w xP gt { xP w div }{1} ifelse
	h yP gt { yP h div }{1} ifelse scale
	w 2 div ox add neg
	h 2 div oy add neg translate
	0 0 moveto
	1 1 counttomark 2 sub 2 idiv { pop neg yP mul 1000 div 0 rmoveto show } for
	pop % "mark" itself
    grestore
} bind def

%	 #]bst: 
%	 #[ws:

/ws {
    %
    % x y ws --> --
    %
    % Unnumbered white stone
    %
    newpath
    wR 0 360 arc
    gsave
	1 setgray fill
    grestore
    wW setlinewidth
    0 setgray stroke
} bind def

%	 #]ws: 
%	 #[bs:

/bs {
    %
    % x y ws --> --
    %
    % Unnumbered black stone
    %
    newpath
    bR 0 360 arc
    0 setgray fill
} bind def

%	 #]bs: 
%  #]stones: 
%  #[stone signs:
%	 #[ps:

/ps {
    %
    % color x y ps --> --
    %
    % Plus sign in "color" stone
    %
    gsave
	/ycoor exch def
	/xcoor exch def
	/color exch def
	xcoor ycoor color 0 eq { ws } { bs } ifelse
	newpath
	    xcoor ycoor translate
	    .06 setlinewidth
	    color setgray
	    -.2 0  moveto
	     .2 0  lineto
	    0  -.2 moveto
	    0   .2 lineto
	stroke
    grestore
} bind def

%	 #]ps: 
%	 #[ms:

/ms {
    %
    % color x y ms --> --
    %
    % Minus sign in "color" stone
    %
    gsave
	/ycoor exch def
	/xcoor exch def
	/color exch def
	xcoor ycoor color 0 eq { ws } { bs } ifelse
	newpath
	    xcoor ycoor translate
	    .06 setlinewidth
	    color setgray
	    -.2 0 moveto
	     .2 0 lineto
	stroke
    grestore
} bind def

%	 #]ms: 
%	 #[square_e:

/square_e {
    %
    % color x y square_e --> --
    %
    % Empty square in "color" stone
    %
    gsave
	/ycoor exch def
	/xcoor exch def
	/color exch def
	xcoor ycoor color 0 eq { ws } { bs } ifelse
	newpath
	    xcoor ycoor translate
	    .04 setlinewidth
	    color setgray
	    -.2353   -.2353   moveto
	    -.2353    .2353   lineto
	     .2353    .2353   lineto
	     .2353   -.2353   lineto
	closepath
	stroke
    grestore
} bind def

%	 #]square_e: 
%	 #[square_f:

/square_f {
    %
    % color x y square_f --> --
    %
    % Filled square in "color" stone
    %
    gsave
	/ycoor exch def
	/xcoor exch def
	/color exch def
	xcoor ycoor color 0 eq { ws } { bs } ifelse
	newpath
	    xcoor ycoor translate
	    .04 setlinewidth
	    color setgray
	    -.2353   -.2353   moveto
	    -.2353    .2353   lineto
	     .2353    .2353   lineto
	     .2353   -.2353   lineto
	closepath
	fill
    grestore
} bind def

%	 #]square_f: 
%	 #[triang_e:

/triang_e {
    %
    % color x y triang_e --> --
    %
    % Empty triangle in "color" stone
    %
    gsave
	/ycoor exch def
	/xcoor exch def
	/color exch def
	xcoor ycoor color 0 eq { ws } { bs } ifelse
	newpath
	    xcoor ycoor translate
	    .04 setlinewidth
	    color setgray
	    -.2353   -.175   moveto
	     .4706   0       rlineto
	    -.2353    .500   rlineto
	closepath
	stroke
    grestore
} bind def

%	 #]triang_e: 
%	 #[triang_f:

/triang_f {
    %
    % color x y triang_f --> --
    %
    % Filled triangle in "color" stone
    %
    gsave
	/ycoor exch def
	/xcoor exch def
	/color exch def
	xcoor ycoor color 0 eq { ws } { bs } ifelse
	newpath
	    xcoor ycoor translate
	    .04 setlinewidth
	    color setgray
	    -.2353   -.175   moveto
	     .4706   0       rlineto
	    -.2353    .500   rlineto
	closepath
	fill
    grestore
} bind def

%	 #]triang_f: 
%	 #[shade:

/shade {
    %
    % color x y shade --> --
    %
    % Give the board some color at (x,y)
    %
    gsave
	translate		% To x y
	newpath
	    -.5 -.5 moveto
	    0 1 rlineto
	    1 0 rlineto
	    0 -1 rlineto
	closepath
	100 div setgray fill		% with color

	%
	% Restore grid
	%
	gW setlinewidth
	newpath -.5 0 moveto 1 0 rlineto stroke
	newpath 0 -.5 moveto 0 1 rlineto stroke
    grestore
} bind def

%	 #]shade: 
%	 #[bterr:

/bterr {
    %
    % x y bterr --> --
    %
    % Black territory indicator
    %
    gsave
	false {
	    %
	    % white stone filled 60% black
	    %
	    wR 0 360 arc
	    gsave
		.40 setgray fill
	    grestore
	    wW setlinewidth
	    0 setgray stroke
	}{
	    false {
		%
		% The character 'b'
		%
		gsave
		    2 copy wR 3 mul 4 div 0 360 arc 1 setgray fill
		grestore
		translate fF (b) centerstrn
	    }{
		%
		% A small black square
		%
		translate
		newpath
		    -.4 -.4  moveto
		    0.8 0   rlineto
		    0   0.8 rlineto
		    -.8 0   rlineto
		closepath
		gsave .25 setgray fill grestore stroke
	    } ifelse
	} ifelse
    grestore
} bind def

%	 #]bterr: 
%	 #[wterr:

/wterr {
    %
    % x y wterr --> --
    %
    % White territory indicator
    %
    gsave
	false {
	    %
	    % White stone filled 10% black
	    %
	    wR 0 360 arc
	    gsave
		.90 setgray fill
	    grestore
	    wW setlinewidth
	    0 setgray stroke
	}{
	    false {
		%
		% The character 'w'
		%
		gsave
		    2 copy wR 3 mul 4 div 0 360 arc 1 setgray fill
		grestore
		translate fF (w) centerstrn
	    }{
		%
		% A small white square
		%
		translate
		newpath
		    -.4 -.4  moveto
		    0.8 0   rlineto
		    0   0.8 rlineto
		    -.8 0   rlineto
		closepath
		gsave .75 setgray fill grestore stroke
	    } ifelse
	} ifelse
    grestore
} bind def

%	 #]wterr: 
%	 #[metamark:

/metamark {
    %
    % color x y (string) metamark --> --
    %
    % Arbitrairy mark in "color" stone
    %
    gsave
	/marker exch def
	/ycoor  exch def
	/xcoor  exch def
	/color  exch def
	xcoor ycoor color 0 eq { ws } { bs } ifelse
	xcoor ycoor translate
	mF
	marker stringwidth pop 2 div neg 0 translate
	color 1 eq { 1 setgray } if
	0 0 moveto marker show
    grestore
} bind def

%	 #]metamark: 
%  #]stone signs: 
%  #[field signs:
%	 #[fs:

/fs {
    %
    % string x y fs --> --
    %
    % Grid point indicator
    %
    gsave
	newpath
	    translate
	    0 0 wR 0 360 arc
	    1 setgray
	    fill
	0 setgray fF centerstrn
    grestore
} bind def

%	 #]fs: 
%	 #[arrow:

/arrow {
    %
    % angle x y arrow --> --
    %
    % Put an arrow from (x,y) in direction determined by angle
    %
    gsave
	translate
	0.5 setgray 0 0 hR 0 360 arc fill
	rotate
	newpath
	     0.0   0.25  moveto
	    -0.1   0.25  lineto
	     0.0   0.48  lineto
	     0.1   0.25  lineto
	closepath 0.5 setgray
	gsave stroke grestore
	fill
    grestore
} bind def

%	 #]arrow: 
%	 #[nl:

/nl {
    %
    % string x y nl --> --
    %
    % Numbered liberty --- Put Number next to a marked grid point
    %
    gsave
	translate
	newpath
	     0.0  -0.25  moveto
	    -0.25  0.0   lineto
	     0.0   0.25  lineto
	     0.25  0.0   lineto
	closepath 0.5 setgray fill
	.3 .3 translate
	.6 dup scale
	0 setgray fF centerstrn
    grestore
} bind def

%	 #]nl: 
%	 #[no:

/no {
    %
    % string x y no --> --
    %
    % Put Number next to grid point
    %
    gsave
	translate
	% 0.5 setgray 0 0 hR 0 360 arc fill
	.3 .3 translate
	.6 dup scale
	0 setgray fF centerstrn
    grestore
} bind def

%	 #]no: 
%	 #[ds:

/ds {
    %
    % string x y ds --> --
    %
    % Destructive Grid point indicator
    %
    gsave
	translate
	0 setgray fF centerstrn
    grestore
} bind def

%	 #]ds: 
%  #]field signs: 

end

Liberty begin
/cache false def
/axis  false def
19 8.50 boardinit
/bdx  0 def
/bdy  0 def
/bdw  6 def
/bdh  3 def
/rgx  0 def
/rgy  0 def
/rgw 10 def
/rgh 10 def
board
1 18 ws
2 18 bs
3 18 ws
4 18 ws
5 18 ws
0 17 bs
1 17 bs
3 17 bs
5 17 ws
1 16 bs
2 16 bs
3 16 ws
4 16 ws
5 16 ws
end
%%Trailer
userdict /end-hook known{end-hook}if
%%EOF

%%EndDocument
 @endspecial 1920 2357 a @beginspecial 0 @llx 0 @lly
76.998932 @urx 39 @ury 769.989075 @rwi 389.994446 @rhi
@setspecial
%%BeginDocument: /u/levy/MSRI/Book42/spight/fig05b.ps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: dvipsk 5.58f Copyright 1986, 1994 Radical Eye Software
%%Title: 604211.dvi
%%BoundingBox: 0 0 77 39
%  #[info:
%									%
%									%
%	     _								%
%	    / \\  /'\\ -_-_  ,._-_  /'\\     _-_  -_-_	 _-_,		%
%	   || || || || || \\  ||   || ||    || \\ || \\ ||_.		%
%	   || || || || || ||  ||   || ||    ||/	  || ||	 ~ ||		%
%	   \\_-| \\,/  ||-'   \\,  \\,/	 <> \\,/  ||-'	,-_-		%
%	    /  \       |/			  |/			%
%	   '----`      '			  '			%
%									%
%		  Copyright (c) 1993  Jan van der Steen			%
%	       Centre for Mathematics and Computer Science		%
%		       Amsterdam, the Netherlands			%
%									%
%-----------------------------------------------------------------------%
%   You are not allowed to use this software in commercial software.	%
%   You are allowed to use this software in free software under the	%
%   condition that you maintain this integral message in the source.	%
%-----------------------------------------------------------------------%
% File	  : gopro.eps							%
% Purpose : Implement PostScript procedures to draw Go games		%
% Version : 1.28							%
% Modified: 07 Apr 1995 18:10:54					%
% Author  : Jan van der Steen (jansteen@cwi.nl)				%
%  #]info: 

/Liberty 100 dict def
Liberty begin

%  #[init:
%
% Default fonts for various applications
%
/bFont /Helvetica-Bold def	% Black numbers
/wFont /Helvetica      def	% White numbers
/fFont /Helvetica      def	% Grid markers
/mFont /Helvetica      def	% Metamarkers

/bF { bFont findfont yP scalefont setfont } bind def /bB -24 def /bH 752 def
/wF { wFont findfont yP scalefont setfont } bind def /wB -23 def /wH 733 def
/fF { fFont findfont yP scalefont setfont } bind def
/mF { mFont findfont yP scalefont setfont } bind def

%
% Abbreviations
%
/W 0 def			% White color
/B 1 def			% Black color

%
% The following sizes are in square units
%
/gW	.01   def	% Width of grid line
/bW	.10   def	% Width of border line
/wW	.02   def	% Width of a white stone
/bR	.48   def	% Radius of a black stone
/wR	.48   def	% Radius of a white stone
/hR	.10   def	% Radius of a hoshi point
/xP	.60   def	% Maximum width  of strings (number,indicator)
/yP	.80   def	% Maximum height of strings (number,indicator)
/axis	true  def	% Do we print coordinates too
/cache	true  def	% Do we use the stone cache

%
% The stone cache
%
cache {
    /EMPTY	 0 def
    /BLACK	-1 def
    /WHITE	-2 def
} if
%  #]init: 
%  #[tools:
%	 #[snap:

/snap {
    %
    % x y snap x" y"
    %
    % Make x and y snap on output device grid
    %
    transform round exch round exch itransform
} bind def

%	 #]snap: 
%	 #[centerstrn:

/centerstrn {
    %
    % string centerstrn --> --
    %
    % Print "string" balanced around (0,0) and make sure
    % it will fit in a "yP" x "yP" bounding box.
    %
    dup stringwidth pop
    %
    % Does stringwidth exceed allowed maximum
    %
    dup yP gt { dup yP exch div 1 scale } if

    %
    % Center the string
    %
    2 div neg yP .20 sub 2 div neg moveto show
} bind def

%	 #]centerstrn: 
%  #]tools: 
%  #[boardinit:

/boardinit {
    %
    % boardsize (9, 13, 19, ...) realsize (in cm) boardinit --> ---
    %
    /realsize  exch def
    /boardsize exch def

    %
    % Initialise the hoshipoints
    %
    /hoshipos
	boardsize 19 eq {6} {
	boardsize 13 eq {3} {
	boardsize  9 eq {2}
			{0}		% Nothing appropriate
		ifelse
	    } ifelse
	} ifelse
    def

    %
    % Initialise the coordinate system (square = unity)
    %
    realsize boardsize div 2.54 div 72 mul dup scale

    %
    % Get and load the caption font
    %
    % /Times-Roman findfont .5 scalefont setfont

    % .5 axis {1}{0} ifelse add dup translate
    % axis {1}{0} ifelse dup translate

    %
    % Initialise clipping to whole board, and region to NIL
    %
    /llbdx 0 def/llbdy llbdx boardsize 1 sub add def
    /urbdy 0 def/urbdx urbdy boardsize 1 sub add def
    /llrgx 0 def
    /urrgx 0 def
    /llrgy 0 def
    /urrgy 0 def

    %
    % Clean the current path
    %
    newpath
} bind def

%  #]boardinit: 
%  #[cache:
%	 #[cacheinit:

/cacheinit {
    %
    % For the stone cache
    %
    cache {
	/stonecache boardsize dup mul array def
	0 1 boardsize dup mul 1 sub {
	    stonecache exch EMPTY put
	} for
    } if
} bind def

%	 #]cacheinit: 
%	 #[cachedump:

/cachedump {
    0 1 360 {
	dup stonecache exch get
	dup EMPTY eq {
	    pop pop
	}{
	    BLACK eq {
		dup
		boardsize  mod boardsize 2 idiv sub exch
		boardsize idiv boardsize 2 idiv sub bs
	    }{
		dup
		boardsize  mod boardsize 2 idiv sub exch
		boardsize idiv boardsize 2 idiv sub ws
	    } ifelse
	} ifelse    
    } for
} bind def

%	 #]cachedump: 
%	 #[cachedelete:

/cachedelete {
    /y exch def
    /x exch def
    stonecache
	x boardsize 2 idiv add
	y boardsize 2 idiv add boardsize mul add
	EMPTY
    put
} bind def

%	 #]cachedelete: 
%	 #[cd:

/cd {
    %
    % Delete an entry from the cache (stone has been hit)
    % x y cd
    %
    cache { cachedelete }{ pop pop } ifelse
} bind def

%	 #]cd: 
%  #]cache: 
%  #[caption:

/caption {
    gsave
	0 -1 translate
	0 0 moveto show
    grestore
} bind def

%  #]caption: 
%  #[transboard:

/row  0 def
/col  0 def
/rmax 3 def	% 3 rows	(based on h = 146 diagrams)
/cmax 2 def	% 2 columns	(based on w = 146 diagrams)
/lm   2 def	% Left margin

/init {
    lm lm translate
    0 boardsize 2 add rmax 1 sub mul translate
} bind def

true {
    /transboard { 0 0 translate } bind def
}{
    /transboard {
	col boardsize 2 add mul neg
	row boardsize 2 add mul translate
	row rmax 1 sub lt { /row row 1 add def }{
	    /row 0 def
	    col cmax 1 sub lt { /col col 1 add def }{
		showpage restore save
	    } ifelse
	} ifelse
	col boardsize 2 add mul
	row boardsize 2 add mul neg translate
    } bind def
} ifelse

%  #]transboard: 
%  #[board:
%	 #[hoshidump:

/hoshidump {
    gsave
    boardsize 2 idiv dup translate
    0 setgray
    newpath	    0                   0               hR 0 360 arc fill
    newpath	    hoshipos            hoshipos        hR 0 360 arc fill
    newpath	    hoshipos            hoshipos neg    hR 0 360 arc fill
    newpath	    hoshipos neg        hoshipos        hR 0 360 arc fill
    newpath	    hoshipos neg        hoshipos neg    hR 0 360 arc fill
    boardsize 19 eq {
	newpath	        0               hoshipos        hR 0 360 arc fill
	newpath	        hoshipos        0               hR 0 360 arc fill
	newpath	        0               hoshipos neg    hR 0 360 arc fill
	newpath	        hoshipos neg    0               hR 0 360 arc fill
    } if
    grestore
} bind def

%	 #]hoshidump: 
%	 #[coordump:

/X-AXIS [
    (A)(B)(C)(D)(E)(F)(G)(H)(J)(K)(L)(M)(N)(O)(P)(Q)(R)(S)(T)
] def
/Y-AXIS [
    (1)(2)(3)(4)(5)(6)(7)(8)(9)(10)(11)(12)(13)(14)(15)(16)(17)(18)(19)
] def

/coordump {
    %
    % Surround the board with coordinates
    %
    fF
    newpath
    0 bdh moveto	% upper edge
    1 1 boardsize {
	1 sub X-AXIS exch get
	gsave currentpoint translate centerstrn grestore
	1 0 rmoveto
    } for
    newpath
    0 -1 moveto		% lower edge
    1 1 boardsize {
	1 sub X-AXIS exch get
	gsave currentpoint translate centerstrn grestore
	1 0 rmoveto
    } for
    newpath
    -1 0 moveto		% left edge
    1 1 boardsize {
	1 sub Y-AXIS exch get
	gsave currentpoint translate centerstrn grestore
	0 1 rmoveto
    } for
    newpath
    bdw 0 moveto	% right edge
    1 1 boardsize {
	1 sub Y-AXIS exch get
	gsave currentpoint translate centerstrn grestore
	0 1 rmoveto
    } for
    newpath
} bind def

%  #]coordump: 
%	 #[board:

/board {
    transboard					% Translate into position

    %
    % Clip region
    %
    % Example 1: Bottom slice
    % /bdx  0 def	% SGF coordinates (topdown, leftright)
    % /bdy  8 def	% SGF coordinates (topdown, leftright)
    % /bdw 19 def
    % /bdh 11 def
    %
    % Example 2: Top slice
    % /bdx  0 def
    % /bdy  0 def
    % /bdw 19 def
    % /bdh 10 def
    %
    /psclipx bdx def
    /psclipy boardsize bdy bdh add sub def
    /psclipw bdw def
    /pscliph bdh def

    axis {
	%
	% Add space for the coordinates
	%
	/psclipw psclipw 2 add def	% left/right side
	/pscliph pscliph 2 add def	% top/bottom side
    } if

    newpath
	0           0        moveto
	psclipw     0       rlineto
	0           pscliph rlineto
	psclipw neg 0       rlineto
    closepath
    gsave 1 setgray fill grestore clip
    newpath
    %
    % Translate to relative origin
    %
    psclipx .5 sub neg
    psclipy .5 sub neg translate

    axis {1}{0} ifelse dup translate

    %
    % Region
    %
    gsave
	llrgx urrgx ne llrgy urrgy ne or {
	    newpath
	    llrgx .5 sub llrgy .5 add moveto
	    llrgx .5 sub urrgy .5 sub lineto
	    urrgx .5 add urrgy .5 sub lineto
	    urrgx .5 add llrgy .5 add lineto
	    closepath
	    .75 setgray
	    % 255 255 div
	    % 175 255 div
	    % 125 255 div setrgbcolor
	    gsave gW setlinewidth stroke grestore fill
	    newpath
	} if
    grestore

    %
    % Horizontals
    %
    newpath
    1 1 boardsize 2 sub {
	0 exch snap moveto
	boardsize 1 sub 0 rlineto
    } for
    %
    % Verticals
    %
    1 1 boardsize 2 sub {
	0 snap moveto
	0 boardsize 1 sub rlineto
    } for
    gW setlinewidth stroke

    %
    % Borders
    %
    newpath
    0			0			moveto
    0			boardsize 1 sub		rlineto
    boardsize 1 sub	0			rlineto
    0			boardsize 1 sub neg	rlineto
    closepath
    bW setlinewidth stroke

    hoshidump					% Print the hoshi points
    cache { cachedump } if			% Print the cache contents
    axis  { coordump  } if			% Print the coordinates
    % grestore
} bind def

%	 #]board: 
%  #]board: 
%  #[stones:
%	 #[wst:

/wst {
    %
    % Numbered white stone
    %
    % [[s0 K0][...][sn Kn]] ox w x y wst --> --
    %
    %	x,y 	[0..boardsize-1]
    %	ox,w	[1/1000 unit]
    %
    gsave
	/y  exch def
	/x  exch def
	/h  wH   yP mul 1000 div def
	/w  exch yP mul 1000 div def
	/oy wB   yP mul 1000 div def
	/ox exch yP mul 1000 div def
	cache {
	    stonecache
		x boardsize 2 idiv add
		y boardsize 2 idiv add boardsize mul add
		WHITE
	    put
	} if
	x y translate
	0 0 ws
	0 setgray wF

	w xP gt { xP w div }{1} ifelse
	h yP gt { yP h div }{1} ifelse scale
	w 2 div ox add neg
	h 2 div oy add neg translate
	0 0 moveto
	1 1 counttomark 2 sub 2 idiv { pop neg yP mul 1000 div 0 rmoveto show } for
	pop % "mark" itself
    grestore
} bind def

%	 #]wst: 
%	 #[bst:

/bst {
    %
    % Numbered black stone
    %
    % [[s0 K0][...][sn Kn]] ox w x y bst --> --
    %
    %	x,y 	[0..boardsize-1]
    %	ox,w	[1/1000 unit]
    %
    %
    gsave
	/y  exch def
	/x  exch def
	/h  bH   yP mul 1000 div def
	/w  exch yP mul 1000 div def
	/oy bB   yP mul 1000 div def
	/ox exch yP mul 1000 div def
	cache {
	    stonecache
		x boardsize 2 idiv add
		y boardsize 2 idiv add boardsize mul add
		BLACK
	    put
	} if
	x y translate
	0 0 bs
	1 setgray bF

	w xP gt { xP w div }{1} ifelse
	h yP gt { yP h div }{1} ifelse scale
	w 2 div ox add neg
	h 2 div oy add neg translate
	0 0 moveto
	1 1 counttomark 2 sub 2 idiv { pop neg yP mul 1000 div 0 rmoveto show } for
	pop % "mark" itself
    grestore
} bind def

%	 #]bst: 
%	 #[ws:

/ws {
    %
    % x y ws --> --
    %
    % Unnumbered white stone
    %
    newpath
    wR 0 360 arc
    gsave
	1 setgray fill
    grestore
    wW setlinewidth
    0 setgray stroke
} bind def

%	 #]ws: 
%	 #[bs:

/bs {
    %
    % x y ws --> --
    %
    % Unnumbered black stone
    %
    newpath
    bR 0 360 arc
    0 setgray fill
} bind def

%	 #]bs: 
%  #]stones: 
%  #[stone signs:
%	 #[ps:

/ps {
    %
    % color x y ps --> --
    %
    % Plus sign in "color" stone
    %
    gsave
	/ycoor exch def
	/xcoor exch def
	/color exch def
	xcoor ycoor color 0 eq { ws } { bs } ifelse
	newpath
	    xcoor ycoor translate
	    .06 setlinewidth
	    color setgray
	    -.2 0  moveto
	     .2 0  lineto
	    0  -.2 moveto
	    0   .2 lineto
	stroke
    grestore
} bind def

%	 #]ps: 
%	 #[ms:

/ms {
    %
    % color x y ms --> --
    %
    % Minus sign in "color" stone
    %
    gsave
	/ycoor exch def
	/xcoor exch def
	/color exch def
	xcoor ycoor color 0 eq { ws } { bs } ifelse
	newpath
	    xcoor ycoor translate
	    .06 setlinewidth
	    color setgray
	    -.2 0 moveto
	     .2 0 lineto
	stroke
    grestore
} bind def

%	 #]ms: 
%	 #[square_e:

/square_e {
    %
    % color x y square_e --> --
    %
    % Empty square in "color" stone
    %
    gsave
	/ycoor exch def
	/xcoor exch def
	/color exch def
	xcoor ycoor color 0 eq { ws } { bs } ifelse
	newpath
	    xcoor ycoor translate
	    .04 setlinewidth
	    color setgray
	    -.2353   -.2353   moveto
	    -.2353    .2353   lineto
	     .2353    .2353   lineto
	     .2353   -.2353   lineto
	closepath
	stroke
    grestore
} bind def

%	 #]square_e: 
%	 #[square_f:

/square_f {
    %
    % color x y square_f --> --
    %
    % Filled square in "color" stone
    %
    gsave
	/ycoor exch def
	/xcoor exch def
	/color exch def
	xcoor ycoor color 0 eq { ws } { bs } ifelse
	newpath
	    xcoor ycoor translate
	    .04 setlinewidth
	    color setgray
	    -.2353   -.2353   moveto
	    -.2353    .2353   lineto
	     .2353    .2353   lineto
	     .2353   -.2353   lineto
	closepath
	fill
    grestore
} bind def

%	 #]square_f: 
%	 #[triang_e:

/triang_e {
    %
    % color x y triang_e --> --
    %
    % Empty triangle in "color" stone
    %
    gsave
	/ycoor exch def
	/xcoor exch def
	/color exch def
	xcoor ycoor color 0 eq { ws } { bs } ifelse
	newpath
	    xcoor ycoor translate
	    .04 setlinewidth
	    color setgray
	    -.2353   -.175   moveto
	     .4706   0       rlineto
	    -.2353    .500   rlineto
	closepath
	stroke
    grestore
} bind def

%	 #]triang_e: 
%	 #[triang_f:

/triang_f {
    %
    % color x y triang_f --> --
    %
    % Filled triangle in "color" stone
    %
    gsave
	/ycoor exch def
	/xcoor exch def
	/color exch def
	xcoor ycoor color 0 eq { ws } { bs } ifelse
	newpath
	    xcoor ycoor translate
	    .04 setlinewidth
	    color setgray
	    -.2353   -.175   moveto
	     .4706   0       rlineto
	    -.2353    .500   rlineto
	closepath
	fill
    grestore
} bind def

%	 #]triang_f: 
%	 #[shade:

/shade {
    %
    % color x y shade --> --
    %
    % Give the board some color at (x,y)
    %
    gsave
	translate		% To x y
	newpath
	    -.5 -.5 moveto
	    0 1 rlineto
	    1 0 rlineto
	    0 -1 rlineto
	closepath
	100 div setgray fill		% with color

	%
	% Restore grid
	%
	gW setlinewidth
	newpath -.5 0 moveto 1 0 rlineto stroke
	newpath 0 -.5 moveto 0 1 rlineto stroke
    grestore
} bind def

%	 #]shade: 
%	 #[bterr:

/bterr {
    %
    % x y bterr --> --
    %
    % Black territory indicator
    %
    gsave
	false {
	    %
	    % white stone filled 60% black
	    %
	    wR 0 360 arc
	    gsave
		.40 setgray fill
	    grestore
	    wW setlinewidth
	    0 setgray stroke
	}{
	    false {
		%
		% The character 'b'
		%
		gsave
		    2 copy wR 3 mul 4 div 0 360 arc 1 setgray fill
		grestore
		translate fF (b) centerstrn
	    }{
		%
		% A small black square
		%
		translate
		newpath
		    -.4 -.4  moveto
		    0.8 0   rlineto
		    0   0.8 rlineto
		    -.8 0   rlineto
		closepath
		gsave .25 setgray fill grestore stroke
	    } ifelse
	} ifelse
    grestore
} bind def

%	 #]bterr: 
%	 #[wterr:

/wterr {
    %
    % x y wterr --> --
    %
    % White territory indicator
    %
    gsave
	false {
	    %
	    % White stone filled 10% black
	    %
	    wR 0 360 arc
	    gsave
		.90 setgray fill
	    grestore
	    wW setlinewidth
	    0 setgray stroke
	}{
	    false {
		%
		% The character 'w'
		%
		gsave
		    2 copy wR 3 mul 4 div 0 360 arc 1 setgray fill
		grestore
		translate fF (w) centerstrn
	    }{
		%
		% A small white square
		%
		translate
		newpath
		    -.4 -.4  moveto
		    0.8 0   rlineto
		    0   0.8 rlineto
		    -.8 0   rlineto
		closepath
		gsave .75 setgray fill grestore stroke
	    } ifelse
	} ifelse
    grestore
} bind def

%	 #]wterr: 
%	 #[metamark:

/metamark {
    %
    % color x y (string) metamark --> --
    %
    % Arbitrairy mark in "color" stone
    %
    gsave
	/marker exch def
	/ycoor  exch def
	/xcoor  exch def
	/color  exch def
	xcoor ycoor color 0 eq { ws } { bs } ifelse
	xcoor ycoor translate
	mF
	marker stringwidth pop 2 div neg 0 translate
	color 1 eq { 1 setgray } if
	0 0 moveto marker show
    grestore
} bind def

%	 #]metamark: 
%  #]stone signs: 
%  #[field signs:
%	 #[fs:

/fs {
    %
    % string x y fs --> --
    %
    % Grid point indicator
    %
    gsave
	newpath
	    translate
	    0 0 wR 0 360 arc
	    1 setgray
	    fill
	0 setgray fF centerstrn
    grestore
} bind def

%	 #]fs: 
%	 #[arrow:

/arrow {
    %
    % angle x y arrow --> --
    %
    % Put an arrow from (x,y) in direction determined by angle
    %
    gsave
	translate
	0.5 setgray 0 0 hR 0 360 arc fill
	rotate
	newpath
	     0.0   0.25  moveto
	    -0.1   0.25  lineto
	     0.0   0.48  lineto
	     0.1   0.25  lineto
	closepath 0.5 setgray
	gsave stroke grestore
	fill
    grestore
} bind def

%	 #]arrow: 
%	 #[nl:

/nl {
    %
    % string x y nl --> --
    %
    % Numbered liberty --- Put Number next to a marked grid point
    %
    gsave
	translate
	newpath
	     0.0  -0.25  moveto
	    -0.25  0.0   lineto
	     0.0   0.25  lineto
	     0.25  0.0   lineto
	closepath 0.5 setgray fill
	.3 .3 translate
	.6 dup scale
	0 setgray fF centerstrn
    grestore
} bind def

%	 #]nl: 
%	 #[no:

/no {
    %
    % string x y no --> --
    %
    % Put Number next to grid point
    %
    gsave
	translate
	% 0.5 setgray 0 0 hR 0 360 arc fill
	.3 .3 translate
	.6 dup scale
	0 setgray fF centerstrn
    grestore
} bind def

%	 #]no: 
%	 #[ds:

/ds {
    %
    % string x y ds --> --
    %
    % Destructive Grid point indicator
    %
    gsave
	translate
	0 setgray fF centerstrn
    grestore
} bind def

%	 #]ds: 
%  #]field signs: 

end

Liberty begin
/cache false def
/axis  false def
19 8.50 boardinit
/bdx  0 def
/bdy  0 def
/bdw  6 def
/bdh  3 def
/rgx  0 def
/rgy  0 def
/rgw 10 def
/rgh 10 def
board
1 18 ws
2 18 bs
3 18 ws
4 18 ws
5 18 ws
0 17 bs
1 17 bs
mark (1) 27 
/bB -24 def
/bH 752 def
68 310 2 17 bst
3 17 bs
5 17 ws
1 16 bs
2 16 bs
3 16 ws
4 16 ws
5 16 ws
end
%%Trailer
userdict /end-hook known{end-hook}if
%%EOF

%%EndDocument
 @endspecial 3057 w @beginspecial 0 @llx 0 @lly 76.998932
@urx 39 @ury 769.989075 @rwi 389.994446 @rhi @setspecial
%%BeginDocument: /u/levy/MSRI/Book42/spight/fig05c.ps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: dvipsk 5.58f Copyright 1986, 1994 Radical Eye Software
%%Title: 604211.dvi
%%BoundingBox: 0 0 77 39
%  #[info:
%									%
%									%
%	     _								%
%	    / \\  /'\\ -_-_  ,._-_  /'\\     _-_  -_-_	 _-_,		%
%	   || || || || || \\  ||   || ||    || \\ || \\ ||_.		%
%	   || || || || || ||  ||   || ||    ||/	  || ||	 ~ ||		%
%	   \\_-| \\,/  ||-'   \\,  \\,/	 <> \\,/  ||-'	,-_-		%
%	    /  \       |/			  |/			%
%	   '----`      '			  '			%
%									%
%		  Copyright (c) 1993  Jan van der Steen			%
%	       Centre for Mathematics and Computer Science		%
%		       Amsterdam, the Netherlands			%
%									%
%-----------------------------------------------------------------------%
%   You are not allowed to use this software in commercial software.	%
%   You are allowed to use this software in free software under the	%
%   condition that you maintain this integral message in the source.	%
%-----------------------------------------------------------------------%
% File	  : gopro.eps							%
% Purpose : Implement PostScript procedures to draw Go games		%
% Version : 1.28							%
% Modified: 07 Apr 1995 18:10:54					%
% Author  : Jan van der Steen (jansteen@cwi.nl)				%
%  #]info: 

/Liberty 100 dict def
Liberty begin

%  #[init:
%
% Default fonts for various applications
%
/bFont /Helvetica-Bold def	% Black numbers
/wFont /Helvetica      def	% White numbers
/fFont /Helvetica      def	% Grid markers
/mFont /Helvetica      def	% Metamarkers

/bF { bFont findfont yP scalefont setfont } bind def /bB -24 def /bH 752 def
/wF { wFont findfont yP scalefont setfont } bind def /wB -23 def /wH 733 def
/fF { fFont findfont yP scalefont setfont } bind def
/mF { mFont findfont yP scalefont setfont } bind def

%
% Abbreviations
%
/W 0 def			% White color
/B 1 def			% Black color

%
% The following sizes are in square units
%
/gW	.01   def	% Width of grid line
/bW	.10   def	% Width of border line
/wW	.02   def	% Width of a white stone
/bR	.48   def	% Radius of a black stone
/wR	.48   def	% Radius of a white stone
/hR	.10   def	% Radius of a hoshi point
/xP	.60   def	% Maximum width  of strings (number,indicator)
/yP	.80   def	% Maximum height of strings (number,indicator)
/axis	true  def	% Do we print coordinates too
/cache	true  def	% Do we use the stone cache

%
% The stone cache
%
cache {
    /EMPTY	 0 def
    /BLACK	-1 def
    /WHITE	-2 def
} if
%  #]init: 
%  #[tools:
%	 #[snap:

/snap {
    %
    % x y snap x" y"
    %
    % Make x and y snap on output device grid
    %
    transform round exch round exch itransform
} bind def

%	 #]snap: 
%	 #[centerstrn:

/centerstrn {
    %
    % string centerstrn --> --
    %
    % Print "string" balanced around (0,0) and make sure
    % it will fit in a "yP" x "yP" bounding box.
    %
    dup stringwidth pop
    %
    % Does stringwidth exceed allowed maximum
    %
    dup yP gt { dup yP exch div 1 scale } if

    %
    % Center the string
    %
    2 div neg yP .20 sub 2 div neg moveto show
} bind def

%	 #]centerstrn: 
%  #]tools: 
%  #[boardinit:

/boardinit {
    %
    % boardsize (9, 13, 19, ...) realsize (in cm) boardinit --> ---
    %
    /realsize  exch def
    /boardsize exch def

    %
    % Initialise the hoshipoints
    %
    /hoshipos
	boardsize 19 eq {6} {
	boardsize 13 eq {3} {
	boardsize  9 eq {2}
			{0}		% Nothing appropriate
		ifelse
	    } ifelse
	} ifelse
    def

    %
    % Initialise the coordinate system (square = unity)
    %
    realsize boardsize div 2.54 div 72 mul dup scale

    %
    % Get and load the caption font
    %
    % /Times-Roman findfont .5 scalefont setfont

    % .5 axis {1}{0} ifelse add dup translate
    % axis {1}{0} ifelse dup translate

    %
    % Initialise clipping to whole board, and region to NIL
    %
    /llbdx 0 def/llbdy llbdx boardsize 1 sub add def
    /urbdy 0 def/urbdx urbdy boardsize 1 sub add def
    /llrgx 0 def
    /urrgx 0 def
    /llrgy 0 def
    /urrgy 0 def

    %
    % Clean the current path
    %
    newpath
} bind def

%  #]boardinit: 
%  #[cache:
%	 #[cacheinit:

/cacheinit {
    %
    % For the stone cache
    %
    cache {
	/stonecache boardsize dup mul array def
	0 1 boardsize dup mul 1 sub {
	    stonecache exch EMPTY put
	} for
    } if
} bind def

%	 #]cacheinit: 
%	 #[cachedump:

/cachedump {
    0 1 360 {
	dup stonecache exch get
	dup EMPTY eq {
	    pop pop
	}{
	    BLACK eq {
		dup
		boardsize  mod boardsize 2 idiv sub exch
		boardsize idiv boardsize 2 idiv sub bs
	    }{
		dup
		boardsize  mod boardsize 2 idiv sub exch
		boardsize idiv boardsize 2 idiv sub ws
	    } ifelse
	} ifelse    
    } for
} bind def

%	 #]cachedump: 
%	 #[cachedelete:

/cachedelete {
    /y exch def
    /x exch def
    stonecache
	x boardsize 2 idiv add
	y boardsize 2 idiv add boardsize mul add
	EMPTY
    put
} bind def

%	 #]cachedelete: 
%	 #[cd:

/cd {
    %
    % Delete an entry from the cache (stone has been hit)
    % x y cd
    %
    cache { cachedelete }{ pop pop } ifelse
} bind def

%	 #]cd: 
%  #]cache: 
%  #[caption:

/caption {
    gsave
	0 -1 translate
	0 0 moveto show
    grestore
} bind def

%  #]caption: 
%  #[transboard:

/row  0 def
/col  0 def
/rmax 3 def	% 3 rows	(based on h = 146 diagrams)
/cmax 2 def	% 2 columns	(based on w = 146 diagrams)
/lm   2 def	% Left margin

/init {
    lm lm translate
    0 boardsize 2 add rmax 1 sub mul translate
} bind def

true {
    /transboard { 0 0 translate } bind def
}{
    /transboard {
	col boardsize 2 add mul neg
	row boardsize 2 add mul translate
	row rmax 1 sub lt { /row row 1 add def }{
	    /row 0 def
	    col cmax 1 sub lt { /col col 1 add def }{
		showpage restore save
	    } ifelse
	} ifelse
	col boardsize 2 add mul
	row boardsize 2 add mul neg translate
    } bind def
} ifelse

%  #]transboard: 
%  #[board:
%	 #[hoshidump:

/hoshidump {
    gsave
    boardsize 2 idiv dup translate
    0 setgray
    newpath	    0                   0               hR 0 360 arc fill
    newpath	    hoshipos            hoshipos        hR 0 360 arc fill
    newpath	    hoshipos            hoshipos neg    hR 0 360 arc fill
    newpath	    hoshipos neg        hoshipos        hR 0 360 arc fill
    newpath	    hoshipos neg        hoshipos neg    hR 0 360 arc fill
    boardsize 19 eq {
	newpath	        0               hoshipos        hR 0 360 arc fill
	newpath	        hoshipos        0               hR 0 360 arc fill
	newpath	        0               hoshipos neg    hR 0 360 arc fill
	newpath	        hoshipos neg    0               hR 0 360 arc fill
    } if
    grestore
} bind def

%	 #]hoshidump: 
%	 #[coordump:

/X-AXIS [
    (A)(B)(C)(D)(E)(F)(G)(H)(J)(K)(L)(M)(N)(O)(P)(Q)(R)(S)(T)
] def
/Y-AXIS [
    (1)(2)(3)(4)(5)(6)(7)(8)(9)(10)(11)(12)(13)(14)(15)(16)(17)(18)(19)
] def

/coordump {
    %
    % Surround the board with coordinates
    %
    fF
    newpath
    0 bdh moveto	% upper edge
    1 1 boardsize {
	1 sub X-AXIS exch get
	gsave currentpoint translate centerstrn grestore
	1 0 rmoveto
    } for
    newpath
    0 -1 moveto		% lower edge
    1 1 boardsize {
	1 sub X-AXIS exch get
	gsave currentpoint translate centerstrn grestore
	1 0 rmoveto
    } for
    newpath
    -1 0 moveto		% left edge
    1 1 boardsize {
	1 sub Y-AXIS exch get
	gsave currentpoint translate centerstrn grestore
	0 1 rmoveto
    } for
    newpath
    bdw 0 moveto	% right edge
    1 1 boardsize {
	1 sub Y-AXIS exch get
	gsave currentpoint translate centerstrn grestore
	0 1 rmoveto
    } for
    newpath
} bind def

%  #]coordump: 
%	 #[board:

/board {
    transboard					% Translate into position

    %
    % Clip region
    %
    % Example 1: Bottom slice
    % /bdx  0 def	% SGF coordinates (topdown, leftright)
    % /bdy  8 def	% SGF coordinates (topdown, leftright)
    % /bdw 19 def
    % /bdh 11 def
    %
    % Example 2: Top slice
    % /bdx  0 def
    % /bdy  0 def
    % /bdw 19 def
    % /bdh 10 def
    %
    /psclipx bdx def
    /psclipy boardsize bdy bdh add sub def
    /psclipw bdw def
    /pscliph bdh def

    axis {
	%
	% Add space for the coordinates
	%
	/psclipw psclipw 2 add def	% left/right side
	/pscliph pscliph 2 add def	% top/bottom side
    } if

    newpath
	0           0        moveto
	psclipw     0       rlineto
	0           pscliph rlineto
	psclipw neg 0       rlineto
    closepath
    gsave 1 setgray fill grestore clip
    newpath
    %
    % Translate to relative origin
    %
    psclipx .5 sub neg
    psclipy .5 sub neg translate

    axis {1}{0} ifelse dup translate

    %
    % Region
    %
    gsave
	llrgx urrgx ne llrgy urrgy ne or {
	    newpath
	    llrgx .5 sub llrgy .5 add moveto
	    llrgx .5 sub urrgy .5 sub lineto
	    urrgx .5 add urrgy .5 sub lineto
	    urrgx .5 add llrgy .5 add lineto
	    closepath
	    .75 setgray
	    % 255 255 div
	    % 175 255 div
	    % 125 255 div setrgbcolor
	    gsave gW setlinewidth stroke grestore fill
	    newpath
	} if
    grestore

    %
    % Horizontals
    %
    newpath
    1 1 boardsize 2 sub {
	0 exch snap moveto
	boardsize 1 sub 0 rlineto
    } for
    %
    % Verticals
    %
    1 1 boardsize 2 sub {
	0 snap moveto
	0 boardsize 1 sub rlineto
    } for
    gW setlinewidth stroke

    %
    % Borders
    %
    newpath
    0			0			moveto
    0			boardsize 1 sub		rlineto
    boardsize 1 sub	0			rlineto
    0			boardsize 1 sub neg	rlineto
    closepath
    bW setlinewidth stroke

    hoshidump					% Print the hoshi points
    cache { cachedump } if			% Print the cache contents
    axis  { coordump  } if			% Print the coordinates
    % grestore
} bind def

%	 #]board: 
%  #]board: 
%  #[stones:
%	 #[wst:

/wst {
    %
    % Numbered white stone
    %
    % [[s0 K0][...][sn Kn]] ox w x y wst --> --
    %
    %	x,y 	[0..boardsize-1]
    %	ox,w	[1/1000 unit]
    %
    gsave
	/y  exch def
	/x  exch def
	/h  wH   yP mul 1000 div def
	/w  exch yP mul 1000 div def
	/oy wB   yP mul 1000 div def
	/ox exch yP mul 1000 div def
	cache {
	    stonecache
		x boardsize 2 idiv add
		y boardsize 2 idiv add boardsize mul add
		WHITE
	    put
	} if
	x y translate
	0 0 ws
	0 setgray wF

	w xP gt { xP w div }{1} ifelse
	h yP gt { yP h div }{1} ifelse scale
	w 2 div ox add neg
	h 2 div oy add neg translate
	0 0 moveto
	1 1 counttomark 2 sub 2 idiv { pop neg yP mul 1000 div 0 rmoveto show } for
	pop % "mark" itself
    grestore
} bind def

%	 #]wst: 
%	 #[bst:

/bst {
    %
    % Numbered black stone
    %
    % [[s0 K0][...][sn Kn]] ox w x y bst --> --
    %
    %	x,y 	[0..boardsize-1]
    %	ox,w	[1/1000 unit]
    %
    %
    gsave
	/y  exch def
	/x  exch def
	/h  bH   yP mul 1000 div def
	/w  exch yP mul 1000 div def
	/oy bB   yP mul 1000 div def
	/ox exch yP mul 1000 div def
	cache {
	    stonecache
		x boardsize 2 idiv add
		y boardsize 2 idiv add boardsize mul add
		BLACK
	    put
	} if
	x y translate
	0 0 bs
	1 setgray bF

	w xP gt { xP w div }{1} ifelse
	h yP gt { yP h div }{1} ifelse scale
	w 2 div ox add neg
	h 2 div oy add neg translate
	0 0 moveto
	1 1 counttomark 2 sub 2 idiv { pop neg yP mul 1000 div 0 rmoveto show } for
	pop % "mark" itself
    grestore
} bind def

%	 #]bst: 
%	 #[ws:

/ws {
    %
    % x y ws --> --
    %
    % Unnumbered white stone
    %
    newpath
    wR 0 360 arc
    gsave
	1 setgray fill
    grestore
    wW setlinewidth
    0 setgray stroke
} bind def

%	 #]ws: 
%	 #[bs:

/bs {
    %
    % x y ws --> --
    %
    % Unnumbered black stone
    %
    newpath
    bR 0 360 arc
    0 setgray fill
} bind def

%	 #]bs: 
%  #]stones: 
%  #[stone signs:
%	 #[ps:

/ps {
    %
    % color x y ps --> --
    %
    % Plus sign in "color" stone
    %
    gsave
	/ycoor exch def
	/xcoor exch def
	/color exch def
	xcoor ycoor color 0 eq { ws } { bs } ifelse
	newpath
	    xcoor ycoor translate
	    .06 setlinewidth
	    color setgray
	    -.2 0  moveto
	     .2 0  lineto
	    0  -.2 moveto
	    0   .2 lineto
	stroke
    grestore
} bind def

%	 #]ps: 
%	 #[ms:

/ms {
    %
    % color x y ms --> --
    %
    % Minus sign in "color" stone
    %
    gsave
	/ycoor exch def
	/xcoor exch def
	/color exch def
	xcoor ycoor color 0 eq { ws } { bs } ifelse
	newpath
	    xcoor ycoor translate
	    .06 setlinewidth
	    color setgray
	    -.2 0 moveto
	     .2 0 lineto
	stroke
    grestore
} bind def

%	 #]ms: 
%	 #[square_e:

/square_e {
    %
    % color x y square_e --> --
    %
    % Empty square in "color" stone
    %
    gsave
	/ycoor exch def
	/xcoor exch def
	/color exch def
	xcoor ycoor color 0 eq { ws } { bs } ifelse
	newpath
	    xcoor ycoor translate
	    .04 setlinewidth
	    color setgray
	    -.2353   -.2353   moveto
	    -.2353    .2353   lineto
	     .2353    .2353   lineto
	     .2353   -.2353   lineto
	closepath
	stroke
    grestore
} bind def

%	 #]square_e: 
%	 #[square_f:

/square_f {
    %
    % color x y square_f --> --
    %
    % Filled square in "color" stone
    %
    gsave
	/ycoor exch def
	/xcoor exch def
	/color exch def
	xcoor ycoor color 0 eq { ws } { bs } ifelse
	newpath
	    xcoor ycoor translate
	    .04 setlinewidth
	    color setgray
	    -.2353   -.2353   moveto
	    -.2353    .2353   lineto
	     .2353    .2353   lineto
	     .2353   -.2353   lineto
	closepath
	fill
    grestore
} bind def

%	 #]square_f: 
%	 #[triang_e:

/triang_e {
    %
    % color x y triang_e --> --
    %
    % Empty triangle in "color" stone
    %
    gsave
	/ycoor exch def
	/xcoor exch def
	/color exch def
	xcoor ycoor color 0 eq { ws } { bs } ifelse
	newpath
	    xcoor ycoor translate
	    .04 setlinewidth
	    color setgray
	    -.2353   -.175   moveto
	     .4706   0       rlineto
	    -.2353    .500   rlineto
	closepath
	stroke
    grestore
} bind def

%	 #]triang_e: 
%	 #[triang_f:

/triang_f {
    %
    % color x y triang_f --> --
    %
    % Filled triangle in "color" stone
    %
    gsave
	/ycoor exch def
	/xcoor exch def
	/color exch def
	xcoor ycoor color 0 eq { ws } { bs } ifelse
	newpath
	    xcoor ycoor translate
	    .04 setlinewidth
	    color setgray
	    -.2353   -.175   moveto
	     .4706   0       rlineto
	    -.2353    .500   rlineto
	closepath
	fill
    grestore
} bind def

%	 #]triang_f: 
%	 #[shade:

/shade {
    %
    % color x y shade --> --
    %
    % Give the board some color at (x,y)
    %
    gsave
	translate		% To x y
	newpath
	    -.5 -.5 moveto
	    0 1 rlineto
	    1 0 rlineto
	    0 -1 rlineto
	closepath
	100 div setgray fill		% with color

	%
	% Restore grid
	%
	gW setlinewidth
	newpath -.5 0 moveto 1 0 rlineto stroke
	newpath 0 -.5 moveto 0 1 rlineto stroke
    grestore
} bind def

%	 #]shade: 
%	 #[bterr:

/bterr {
    %
    % x y bterr --> --
    %
    % Black territory indicator
    %
    gsave
	false {
	    %
	    % white stone filled 60% black
	    %
	    wR 0 360 arc
	    gsave
		.40 setgray fill
	    grestore
	    wW setlinewidth
	    0 setgray stroke
	}{
	    false {
		%
		% The character 'b'
		%
		gsave
		    2 copy wR 3 mul 4 div 0 360 arc 1 setgray fill
		grestore
		translate fF (b) centerstrn
	    }{
		%
		% A small black square
		%
		translate
		newpath
		    -.4 -.4  moveto
		    0.8 0   rlineto
		    0   0.8 rlineto
		    -.8 0   rlineto
		closepath
		gsave .25 setgray fill grestore stroke
	    } ifelse
	} ifelse
    grestore
} bind def

%	 #]bterr: 
%	 #[wterr:

/wterr {
    %
    % x y wterr --> --
    %
    % White territory indicator
    %
    gsave
	false {
	    %
	    % White stone filled 10% black
	    %
	    wR 0 360 arc
	    gsave
		.90 setgray fill
	    grestore
	    wW setlinewidth
	    0 setgray stroke
	}{
	    false {
		%
		% The character 'w'
		%
		gsave
		    2 copy wR 3 mul 4 div 0 360 arc 1 setgray fill
		grestore
		translate fF (w) centerstrn
	    }{
		%
		% A small white square
		%
		translate
		newpath
		    -.4 -.4  moveto
		    0.8 0   rlineto
		    0   0.8 rlineto
		    -.8 0   rlineto
		closepath
		gsave .75 setgray fill grestore stroke
	    } ifelse
	} ifelse
    grestore
} bind def

%	 #]wterr: 
%	 #[metamark:

/metamark {
    %
    % color x y (string) metamark --> --
    %
    % Arbitrairy mark in "color" stone
    %
    gsave
	/marker exch def
	/ycoor  exch def
	/xcoor  exch def
	/color  exch def
	xcoor ycoor color 0 eq { ws } { bs } ifelse
	xcoor ycoor translate
	mF
	marker stringwidth pop 2 div neg 0 translate
	color 1 eq { 1 setgray } if
	0 0 moveto marker show
    grestore
} bind def

%	 #]metamark: 
%  #]stone signs: 
%  #[field signs:
%	 #[fs:

/fs {
    %
    % string x y fs --> --
    %
    % Grid point indicator
    %
    gsave
	newpath
	    translate
	    0 0 wR 0 360 arc
	    1 setgray
	    fill
	0 setgray fF centerstrn
    grestore
} bind def

%	 #]fs: 
%	 #[arrow:

/arrow {
    %
    % angle x y arrow --> --
    %
    % Put an arrow from (x,y) in direction determined by angle
    %
    gsave
	translate
	0.5 setgray 0 0 hR 0 360 arc fill
	rotate
	newpath
	     0.0   0.25  moveto
	    -0.1   0.25  lineto
	     0.0   0.48  lineto
	     0.1   0.25  lineto
	closepath 0.5 setgray
	gsave stroke grestore
	fill
    grestore
} bind def

%	 #]arrow: 
%	 #[nl:

/nl {
    %
    % string x y nl --> --
    %
    % Numbered liberty --- Put Number next to a marked grid point
    %
    gsave
	translate
	newpath
	     0.0  -0.25  moveto
	    -0.25  0.0   lineto
	     0.0   0.25  lineto
	     0.25  0.0   lineto
	closepath 0.5 setgray fill
	.3 .3 translate
	.6 dup scale
	0 setgray fF centerstrn
    grestore
} bind def

%	 #]nl: 
%	 #[no:

/no {
    %
    % string x y no --> --
    %
    % Put Number next to grid point
    %
    gsave
	translate
	% 0.5 setgray 0 0 hR 0 360 arc fill
	.3 .3 translate
	.6 dup scale
	0 setgray fF centerstrn
    grestore
} bind def

%	 #]no: 
%	 #[ds:

/ds {
    %
    % string x y ds --> --
    %
    % Destructive Grid point indicator
    %
    gsave
	translate
	0 setgray fF centerstrn
    grestore
} bind def

%	 #]ds: 
%  #]field signs: 

end

Liberty begin
/cache false def
/axis  false def
19 8.50 boardinit
/bdx  0 def
/bdy  0 def
/bdw  6 def
/bdh  3 def
/rgx  0 def
/rgy  0 def
/rgw 10 def
/rgh 10 def
board
1 18 ws
mark (3) 0 
/wB -23 def
/wH 733 def
32 474 2 18 wst
3 18 ws
4 18 ws
5 18 ws
0 17 bs
1 17 bs
mark (1) 37 102 245 2 17 wst
3 17 bs
5 17 ws
1 16 bs
2 16 bs
3 16 ws
4 16 ws
5 16 ws
end
%%Trailer
userdict /end-hook known{end-hook}if
%%EOF

%%EndDocument
 @endspecial 3646 2691 a Ff(Figure)57 b(5.)77 b Fe(Ko.)1281
3089 y Fm(The)68 b(top)g(cen)-5 b(tral)69 b(p)5 b(osition)69
b(in)g(Figure)f(5)g(is)h(a)f(k)-5 b(o.)107 b(The)68 b(single)i(Blac)-5
b(k)69 b(stone)f(on)g(the)1070 3317 y(upp)5 b(er)58 b(side)j(has)e
(only)h(one)f(adjacen)-5 b(t)59 b(free)g(p)5 b(oin)-5
b(t)60 b(\(lib)5 b(ert)-5 b(y\))62 b(and)c(ma)-5 b(y)60
b(b)5 b(e)59 b(captured)g(b)-5 b(y)59 b(a)1070 3546 y(pla)-5
b(y)65 b(on)f(that)g(p)5 b(oin)-5 b(t)65 b(\(W)g(1\).)96
b(Then)63 b(the)i(stone)g(at)g(1)f(has)g(only)h(one)f(lib)5
b(ert)-5 b(y)-15 b(,)68 b(and)63 b(could)1070 3774 y(b)5
b(e)58 b(captured)g(except)g(for)g(the)h(k)-5 b(o)58
b(ban.)1947 5722 y @beginspecial -1 @llx -1 @lly 307.995697
@urx 120.998291 @ury 2471.965088 @rwi 975.986023 @rhi
@setspecial
%%BeginDocument: /u/levy/MSRI/Book42/spight/fig06.ps
%!PS-Adobe-2.0 EPSF-2.0 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%Created By:                     GLE v3.5 R0.23                  %%
%%            visit www.uark.edu/misc/vlabella/gle/gle.html %%
%%                          for more information            %%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%CreationDate: Fri Apr  6 09:13:22 2001
%%SourceFile:   graph06.gle
%%BoundingBox: -1 -1 308 121 
%%EndComments 
%%EndProlog 
gsave 
 
/f {findfont exch scalefont setfont} bind def 
/s {show} bind def 
/ps {true charpath} bind def 
/l {lineto} bind def 
/m {newpath moveto} bind def 
matrix currentmatrix /originmat exch def 
/umatrix {originmat matrix concatmatrix setmatrix} def 
 
 [72 0 0 72 0 0] umatrix 
  [28.3465 0 0 28.3465 0 0] umatrix 
 [] 0 setdash 
0.02 setlinewidth 
0 0 0 setrgbcolor 
0 0 m 
0 0 m 
0 0 m 
0 0 m 
1.62 0.63 m 
0 0 0 setrgbcolor 
[] 0 setdash 
1 setlinecap 
1.62 0.63 m 
9.18 0.63 l 
stroke 
0 0 0 setrgbcolor 
0.02 setlinewidth 
[] 0 setdash 
0 setlinecap 
0 0 0 setrgbcolor 
[] 0 setdash 
9.18 0.63 m 
9.18 0.63 m 
9.18 0.58 l 
stroke 
8.76 0.63 m 
8.76 0.63 m 
8.76 0.58 l 
stroke 
8.34 0.63 m 
8.34 0.63 m 
8.34 0.58 l 
stroke 
7.92 0.63 m 
7.92 0.63 m 
7.92 0.58 l 
stroke 
7.5 0.63 m 
7.5 0.63 m 
7.5 0.58 l 
stroke 
7.08 0.63 m 
7.08 0.63 m 
7.08 0.58 l 
stroke 
6.66 0.63 m 
6.66 0.63 m 
6.66 0.58 l 
stroke 
6.24 0.63 m 
6.24 0.63 m 
6.24 0.58 l 
stroke 
5.82 0.63 m 
5.82 0.63 m 
5.82 0.58 l 
stroke 
5.4 0.63 m 
5.4 0.63 m 
5.4 0.58 l 
stroke 
4.98 0.63 m 
4.98 0.63 m 
4.98 0.58 l 
stroke 
4.56 0.63 m 
4.56 0.63 m 
4.56 0.58 l 
stroke 
4.14 0.63 m 
4.14 0.63 m 
4.14 0.58 l 
stroke 
3.72 0.63 m 
3.72 0.63 m 
3.72 0.58 l 
stroke 
3.3 0.63 m 
3.3 0.63 m 
3.3 0.58 l 
stroke 
2.88 0.63 m 
2.88 0.63 m 
2.88 0.58 l 
stroke 
2.46 0.63 m 
2.46 0.63 m 
2.46 0.58 l 
stroke 
2.04 0.63 m 
2.04 0.63 m 
2.04 0.58 l 
stroke 
1.62 0.63 m 
1.62 0.63 m 
1.62 0.58 l 
stroke 
0 0 0 setrgbcolor 
[] 0 setdash 
9.18 0.63 m 
9.18 0.63 m 
9.18 0.53 l 
stroke 
8.34 0.63 m 
8.34 0.63 m 
8.34 0.53 l 
stroke 
7.5 0.63 m 
7.5 0.63 m 
7.5 0.53 l 
stroke 
6.66 0.63 m 
6.66 0.63 m 
6.66 0.53 l 
stroke 
5.82 0.63 m 
5.82 0.63 m 
5.82 0.53 l 
stroke 
4.98 0.63 m 
4.98 0.63 m 
4.98 0.53 l 
stroke 
4.14 0.63 m 
4.14 0.63 m 
4.14 0.53 l 
stroke 
3.3 0.63 m 
3.3 0.63 m 
3.3 0.53 l 
stroke 
2.46 0.63 m 
2.46 0.63 m 
2.46 0.53 l 
stroke 
1.62 0.63 m 
1.62 0.63 m 
1.62 0.53 l 
stroke 
0 0 0 setrgbcolor 
0.02 setlinewidth 
[] 0 setdash 
0 0 0 setrgbcolor 
[] 0 setdash 
9.18 0.05 m 
9.0172 0.05 m 
9.0172 0.05 m 
 0.400000 /Times-Roman f (\55) s 9.1504 0.05 m 
(5) s 9.18 0.05 m 
8.34 0.05 m 
8.1704 0.05 m 
8.1704 0.05 m 
(\55) s 8.3036 0.05 m 
(4) s 8.34 0.05 m 
7.5 0.05 m 
7.3386 0.05 m 
7.3386 0.05 m 
(\55) s 7.4718 0.05 m 
(3) s 7.5 0.05 m 
6.66 0.05 m 
6.4898 0.05 m 
6.4898 0.05 m 
(\55) s 6.623 0.05 m 
(2) s 6.66 0.05 m 
5.82 0.05 m 
5.666 0.05 m 
5.666 0.05 m 
(\55) s 5.7992 0.05 m 
(1) s 5.82 0.05 m 
4.98 0.05 m 
4.88 0.05 m 
4.88 0.05 m 
(0) s 4.98 0.05 m 
4.14 0.05 m 
4.039 0.05 m 
4.039 0.05 m 
(1) s 4.14 0.05 m 
3.3 0.05 m 
3.199 0.05 m 
3.199 0.05 m 
(2) s 3.3 0.05 m 
2.46 0.05 m 
2.365 0.05 m 
2.365 0.05 m 
(3) s 2.46 0.05 m 
1.62 0.05 m 
1.5232 0.05 m 
1.5232 0.05 m 
(4) s 1.62 0.05 m 
1.62 0.63 m 
0 0 0 setrgbcolor 
[] 0 setdash 
1 setlinecap 
1.62 0.63 m 
1.62 3.57 l 
stroke 
0 0 0 setrgbcolor 
0.02 setlinewidth 
[] 0 setdash 
0 setlinecap 
0 0 0 setrgbcolor 
[] 0 setdash 
1.62 0.63 m 
1.62 0.63 m 
1.57 0.63 l 
stroke 
1.62 1.05 m 
1.62 1.05 m 
1.57 1.05 l 
stroke 
1.62 1.47 m 
1.62 1.47 m 
1.57 1.47 l 
stroke 
1.62 1.89 m 
1.62 1.89 m 
1.57 1.89 l 
stroke 
1.62 2.31 m 
1.62 2.31 m 
1.57 2.31 l 
stroke 
1.62 2.73 m 
1.62 2.73 m 
1.57 2.73 l 
stroke 
1.62 3.15 m 
1.62 3.15 m 
1.57 3.15 l 
stroke 
1.62 3.57 m 
1.62 3.57 m 
1.57 3.57 l 
stroke 
0 0 0 setrgbcolor 
[] 0 setdash 
1.62 0.63 m 
1.62 0.63 m 
1.52 0.63 l 
stroke 
1.62 1.47 m 
1.62 1.47 m 
1.52 1.47 l 
stroke 
1.62 2.31 m 
1.62 2.31 m 
1.52 2.31 l 
stroke 
1.62 3.15 m 
1.62 3.15 m 
1.52 3.15 l 
stroke 
0 0 0 setrgbcolor 
0.02 setlinewidth 
[] 0 setdash 
0 0 0 setrgbcolor 
[] 0 setdash 
1.32 0.63 m 
1.1296 0.4976 m 
1.1296 0.4976 m 
(0) s 1.32 0.63 m 
1.32 1.47 m 
1.1624 1.3348 m 
1.1624 1.3348 m 
(1) s 1.32 1.47 m 
1.32 2.31 m 
1.13 2.1748 m 
1.13 2.1748 m 
(2) s 1.32 2.31 m 
1.32 3.15 m 
1.1476 3.0176 m 
1.1476 3.0176 m 
(3) s 1.32 3.15 m 
1.62 3.57 m 
9.18 0.63 m 
[] 0 setdash 
0.02 setlinewidth 
[] 0 setdash 
0 0 1 setrgbcolor 
0.05 setlinewidth 
2.46 0.63 m 
2.46 0.63 m 
4.41972 2.58972 l 
stroke 
[] 0 setdash 
0.02 setlinewidth 
[] 0 setdash 
1 0 0 setrgbcolor 
0.05 setlinewidth 
4.41972 2.58972 m 
4.41972 2.58972 m 
8.34 0.63 l 
stroke 
[] 0 setdash 
0.02 setlinewidth 
[] 0 setdash 
0 0 0 setrgbcolor 
0.05 setlinewidth 
4.41972 2.58972 m 
4.41972 2.58972 m 
4.41972 3.29028 l 
stroke 
0 0 0 setrgbcolor 
0.02 setlinewidth 
[] 0 setdash 
0 0 m 
0 0 0 setrgbcolor 
0.02 setlinewidth 
[] 0 setdash 
0 0 0 setrgbcolor 
0.02 setlinewidth 
[] 0 setdash 
0 0 m 
0.02 setlinewidth 
4.41972 3.29028 m 
4.31472 3.19935 m 
1 setlinejoin 
 newpath 4.31472 3.19935 moveto 
4.31472 3.19935 moveto 
4.52472 3.19935 l 
4.41972 3.38121 l 
4.31472 3.19935 l 
gsave 
0 0 0 setrgbcolor 
fill 
0 0 0 setrgbcolor 
grestore 
0 setlinejoin 
0.02 setlinewidth 
0 0 0 setrgbcolor 
4.41972 3.29028 m 
0 0 0 setrgbcolor 
0.02 setlinewidth 
[] 0 setdash 
0 0 m 
0 0 m 
0 0 m 
0 0 0 setrgbcolor 
0.02 setlinewidth 
[] 0 setdash 
showpage 
grestore 
%%Trailer 

%%EndDocument
 @endspecial 2534 6056 a Ff(Figure)e(6.)78 b Fe(Ko)55
b(Thermograph)f(\(White)g(k)-5 b(omaster\).)1281 6481
y Fm(Figure)39 b(6)g(sho)-5 b(ws)39 b(the)g(thermograph)f(for)h(the)g
(k)-5 b(o)39 b(in)g(Figure)h(5)f(when)f(White)i(is)g(k)-5
b(omaster,)1070 6710 y(whic)g(h)56 b(means)h(that)g(he)f(can)g(tak)-5
b(e)57 b(and)e(win)i(the)g(k)-5 b(o)56 b(if)h(he)f(pla)-5
b(ys)57 b(\014rst)g([Berlek)-10 b(amp)57 b(1996].)1070
6938 y(If)73 b(Blac)-5 b(k)75 b(wins)f(the)f(k)-5 b(o)73
b(b)-5 b(y)73 b(\014lling)i(with)f(B)g(1,)i(she)e(gets)f(3)h(p)5
b(oin)-5 b(ts)74 b(lo)5 b(cally)-15 b(,)79 b(2)73 b(p)5
b(oin)-5 b(ts)74 b(of)1070 7167 y(territory)62 b(plus)f(1)g(p)5
b(oin)-5 b(t)61 b(for)f(the)i(dead)e(White)h(stone)h(on)e(the)h(2-1)g
(p)5 b(oin)-5 b(t.)85 b(The)61 b(Left)g(w)-5 b(all)1070
7395 y(indicates)72 b(the)e(single)i(Blac)-5 b(k)72 b(pla)-5
b(y)70 b(to)h(a)f(lo)5 b(cal)72 b(score)f(of)f(3.)113
b(If)71 b(White)g(captures)f(the)g(k)-5 b(o)1070 7623
y(with)75 b(W)e(1)h(and)g(then,)j(after)d(Blac)-5 b(k)75
b(pla)-5 b(ys)75 b(elsewhere,)k(wins)74 b(it)i(with)e(W)g(3,)k(he)c
(gets)g(2)1070 7852 y(p)5 b(oin)-5 b(ts)69 b(of)f(territory)i(plus)f(1)
f(p)5 b(oin)-5 b(t)69 b(for)f(the)h(dead)f(Blac)-5 b(k)70
b(stone)f(on)f(the)h(2-4)f(p)5 b(oin)-5 b(t)69 b(plus)1070
8080 y(1)c(p)5 b(oin)-5 b(t)66 b(for)f(the)h(stone)g(captured)e(b)-5
b(y)65 b(W)g(1,)i(for)e(a)h(total)h(of)e(4)g(p)5 b(oin)-5
b(ts.)100 b(The)65 b(Righ)-5 b(t)67 b(w)-5 b(all)1070
8309 y(indicates)60 b(the)g(2)e(White)i(mo)-5 b(v)g(es)60
b(to)f(a)g(lo)5 b(cal)60 b(score)f(of)g Fi(\000)p Fm(4.)79
b(The)58 b(mast)i(v)-10 b(alue)60 b(of)e(the)h(k)-5 b(o)59
b(is)1091 8468 y Fk(2)p 1091 8497 71 8 v 1091 8598 a(3)1182
8537 y Fm(,)f(and)g(its)i(temp)5 b(erature)59 b(is)h(2)3164
8468 y Fk(1)p 3163 8497 V 3163 8598 a(3)3255 8537 y Fm(.)1281
8766 y(Figure)84 b(7)g(sho)-5 b(ws)85 b(the)f(thermograph)f(of)h(the)g
(same)h(k)-5 b(o)84 b(when)g(Blac)-5 b(k)85 b(is)h(k)-5
b(omaster.)1070 8994 y(Ev)g(en)55 b(if)i(White)f(pla)-5
b(ys)57 b(\014rst,)f(Blac)-5 b(k)58 b(can)d(win)i(the)f(k)-5
b(o.)77 b(W)-15 b(e)56 b(do)f(not)h(see)h(a)f(separate)g(Righ)-5
b(t)1070 9223 y(w)g(all,)63 b(b)5 b(ecause)60 b(it)j(coincides)f(with)g
(the)f(Left)g(w)-5 b(all.)86 b(Since)62 b(the)f(t)-5
b(w)g(o)61 b(w)-5 b(alls)63 b(coincide,)f(they)1070 9451
y(form)79 b(a)f(mast.)140 b(The)79 b(inclined)h(section)g(of)f(the)g
(mast)h(when)e Fj(t)83 b(<)f Fm(2)5843 9382 y Fk(1)p
5843 9411 V 5843 9512 a(3)6013 9451 y Fm(is)f(purple,)i(as)c(it)1070
9679 y(com)-5 b(bines)53 b(blue)g(and)e(red)h(lines.)78
b(When)51 b(White)i(tak)-5 b(es)53 b(the)f(k)-5 b(o,)54
b(Blac)-5 b(k)53 b(mak)-5 b(es)53 b(a)f(pla)-5 b(y)53
b(that)1070 9908 y(carries)76 b(a)g(threat)g(whic)-5
b(h)76 b(is)h(to)5 b(o)75 b(large)i(for)e(White)h(to)g(ignore.)130
b(White)76 b(replies)h(to)f(this)1070 10136 y(k)-5 b(o)60
b(threat,)h(and)e(then)h(Blac)-5 b(k)62 b(tak)-5 b(es)61
b(the)f(k)-5 b(o)61 b(bac)-5 b(k)59 b(and)h(wins)h(it)h(on)e(the)g
(follo)-5 b(wing)62 b(mo)-5 b(v)g(e.)1070 10365 y(The)52
b(lo)5 b(cal)55 b(result)f(is)g(the)f(same)h(as)f(when)f(Blac)-5
b(k)55 b(simply)f(wins)g(the)f(k)-5 b(o.)76 b(The)53
b(purple)f(mast)1070 10593 y(indicates)58 b(that)e(either)h(pla)-5
b(y)g(er)57 b(can)e(pla)-5 b(y)57 b(without)g(a)f(lo)5
b(cal)57 b(loss)h(at)e(eac)-5 b(h)56 b(temp)5 b(erature)57
b(in)p eop
%%Page: 93 6
93 5 bop 1926 577 a Fg(GO)65 b(THERMOGRAPHY:)f(THE)g(4/21/98)e(JIANG{R)
l(UI)h(ENDGAME)706 b(93)2758 3659 y @beginspecial -1
@llx -1 @lly 205.997101 @urx 239.996643 @ury 1552.478027
@rwi 1807.474487 @rhi @setspecial
%%BeginDocument: /u/levy/MSRI/Book42/spight/fig07.ps
%!PS-Adobe-2.0 EPSF-2.0 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%Created By:                     GLE v3.5 R0.23                  %%
%%            visit www.uark.edu/misc/vlabella/gle/gle.html %%
%%                          for more information            %%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%CreationDate: Fri Apr  6 09:28:42 2001
%%SourceFile:   graph07.gle
%%BoundingBox: -1 -1 206 240 
%%EndComments 
%%EndProlog 
gsave 
 
/f {findfont exch scalefont setfont} bind def 
/s {show} bind def 
/ps {true charpath} bind def 
/l {lineto} bind def 
/m {newpath moveto} bind def 
matrix currentmatrix /originmat exch def 
/umatrix {originmat matrix concatmatrix setmatrix} def 
 
 [72 0 0 72 0 0] umatrix 
  [28.3465 0 0 28.3465 0 0] umatrix 
 [] 0 setdash 
0.02 setlinewidth 
0 0 0 setrgbcolor 
0 0 m 
0 0 m 
0 0 m 
0 0 m 
1.08 1.26 m 
0 0 0 setrgbcolor 
[] 0 setdash 
1 setlinecap 
1.08 1.26 m 
6.12 1.26 l 
stroke 
0 0 0 setrgbcolor 
0.02 setlinewidth 
[] 0 setdash 
0 setlinecap 
0 0 0 setrgbcolor 
[] 0 setdash 
6.12 1.26 m 
6.12 1.26 m 
6.12 1.21 l 
stroke 
5.28 1.26 m 
5.28 1.26 m 
5.28 1.21 l 
stroke 
4.44 1.26 m 
4.44 1.26 m 
4.44 1.21 l 
stroke 
3.6 1.26 m 
3.6 1.26 m 
3.6 1.21 l 
stroke 
2.76 1.26 m 
2.76 1.26 m 
2.76 1.21 l 
stroke 
1.92 1.26 m 
1.92 1.26 m 
1.92 1.21 l 
stroke 
1.08 1.26 m 
1.08 1.26 m 
1.08 1.21 l 
stroke 
0 0 0 setrgbcolor 
[] 0 setdash 
5.28 1.26 m 
5.28 1.26 m 
5.28 1.16 l 
stroke 
3.6 1.26 m 
3.6 1.26 m 
3.6 1.16 l 
stroke 
1.92 1.26 m 
1.92 1.26 m 
1.92 1.16 l 
stroke 
0 0 0 setrgbcolor 
0.02 setlinewidth 
[] 0 setdash 
0 0 0 setrgbcolor 
[] 0 setdash 
5.28 0.68 m 
5.179 0.68 m 
5.179 0.68 m 
 0.400000 /Times-Roman f (1) s 5.28 0.68 m 
3.6 0.68 m 
3.499 0.68 m 
3.499 0.68 m 
(2) s 3.6 0.68 m 
1.92 0.68 m 
1.825 0.68 m 
1.825 0.68 m 
(3) s 1.92 0.68 m 
1.08 1.26 m 
0 0 0 setrgbcolor 
[] 0 setdash 
1 setlinecap 
1.08 1.26 m 
1.08 7.14 l 
stroke 
0 0 0 setrgbcolor 
0.02 setlinewidth 
[] 0 setdash 
0 setlinecap 
0 0 0 setrgbcolor 
[] 0 setdash 
1.08 1.26 m 
1.08 1.26 m 
1.03 1.26 l 
stroke 
1.08 2.1 m 
1.08 2.1 m 
1.03 2.1 l 
stroke 
1.08 2.94 m 
1.08 2.94 m 
1.03 2.94 l 
stroke 
1.08 3.78 m 
1.08 3.78 m 
1.03 3.78 l 
stroke 
1.08 4.62 m 
1.08 4.62 m 
1.03 4.62 l 
stroke 
1.08 5.46 m 
1.08 5.46 m 
1.03 5.46 l 
stroke 
1.08 6.3 m 
1.08 6.3 m 
1.03 6.3 l 
stroke 
1.08 7.14 m 
1.08 7.14 m 
1.03 7.14 l 
stroke 
0 0 0 setrgbcolor 
[] 0 setdash 
1.08 1.26 m 
1.08 1.26 m 
0.98 1.26 l 
stroke 
1.08 2.94 m 
1.08 2.94 m 
0.98 2.94 l 
stroke 
1.08 4.62 m 
1.08 4.62 m 
0.98 4.62 l 
stroke 
1.08 6.3 m 
1.08 6.3 m 
0.98 6.3 l 
stroke 
0 0 0 setrgbcolor 
0.02 setlinewidth 
[] 0 setdash 
0 0 0 setrgbcolor 
[] 0 setdash 
0.78 1.26 m 
0.5896 1.1276 m 
0.5896 1.1276 m 
(0) s 0.78 1.26 m 
0.78 2.94 m 
0.6224 2.8048 m 
0.6224 2.8048 m 
(1) s 0.78 2.94 m 
0.78 4.62 m 
0.59 4.4848 m 
0.59 4.4848 m 
(2) s 0.78 4.62 m 
0.78 6.3 m 
0.6076 6.1676 m 
0.6076 6.1676 m 
(3) s 0.78 6.3 m 
1.08 7.14 m 
6.12 1.26 m 
[] 0 setdash 
0.02 setlinewidth 
[] 0 setdash 
1 0 1 setrgbcolor 
0.05 setlinewidth 
1.92 1.26 m 
1.92 1.26 m 
5.83944 5.17944 l 
stroke 
[] 0 setdash 
0.02 setlinewidth 
[] 0 setdash 
1 0 0 setrgbcolor 
0.05 setlinewidth 
[] 0 setdash 
0.02 setlinewidth 
[] 0 setdash 
0 0 0 setrgbcolor 
0.05 setlinewidth 
5.83944 5.17944 m 
5.83944 5.17944 m 
5.83944 6.58056 l 
stroke 
0 0 0 setrgbcolor 
0.02 setlinewidth 
[] 0 setdash 
0 0 m 
0 0 0 setrgbcolor 
0.02 setlinewidth 
[] 0 setdash 
0 0 0 setrgbcolor 
0.02 setlinewidth 
[] 0 setdash 
0 0 m 
0.02 setlinewidth 
5.83944 6.58056 m 
5.73444 6.48963 m 
1 setlinejoin 
 newpath 5.73444 6.48963 moveto 
5.73444 6.48963 moveto 
5.94444 6.48963 l 
5.83944 6.67149 l 
5.73444 6.48963 l 
gsave 
0 0 0 setrgbcolor 
fill 
0 0 0 setrgbcolor 
grestore 
0 setlinejoin 
0.02 setlinewidth 
0 0 0 setrgbcolor 
5.83944 6.58056 m 
0 0 0 setrgbcolor 
0.02 setlinewidth 
[] 0 setdash 
0 0 m 
0 0 m 
0 0 m 
0 0 0 setrgbcolor 
0.02 setlinewidth 
[] 0 setdash 
showpage 
grestore 
%%Trailer 

%%EndDocument
 @endspecial 3158 3641 a Ff(Figure)57 b(7.)78 b Fe(\(Black)55
b(k)-5 b(omaster\).)1070 4076 y Fm(that)58 b(range,)g(but)g(that)g
(fact)g(do)5 b(es)58 b(not)g(tak)-5 b(e)59 b(in)-5 b(to)59
b(accoun)-5 b(t)58 b(the)g(dynamic)h(asp)5 b(ects)58
b(of)g(the)1070 4304 y(k)-5 b(o.)80 b(If)60 b(Blac)-5
b(k)61 b(can)e(a\013ord)f(to)i(w)-5 b(ait,)61 b(as)e(the)h(temp)5
b(erature)60 b(drops)f(the)g(v)-10 b(alue)60 b(of)f(the)h(game)1070
4532 y(increases,)54 b(and)e(that)g(fa)-5 b(v)g(ors)52
b(Blac)-5 b(k.)77 b(So)52 b(Blac)-5 b(k)54 b(will)g(b)5
b(e)52 b(inclined)i(not)e(to)h(win)g(the)f(k)-5 b(o)52
b(y)-5 b(et.)1070 4761 y(Therefore)49 b(the)g(k)-5 b(oloser,)52
b(White,)g(should)e(tak)-5 b(e)50 b(the)g(k)-5 b(o)49
b(and)g(force)g(Blac)-5 b(k)51 b(to)f(win)g(it)h(b)5
b(efore)1070 4989 y(the)62 b(temp)5 b(erature)62 b(drops.)89
b(It)63 b(costs)g(Blac)-5 b(k)63 b(one)f(mo)-5 b(v)g(e)63
b(to)f(win)h(the)f(k)-5 b(o,)63 b(and)e(that)h(allo)-5
b(ws)1070 5218 y(White)53 b(to)h(mak)-5 b(e)53 b(a)g(pla)-5
b(y)54 b(in)f(the)g(en)-5 b(vironmen)g(t.)77 b(The)53
b(hotter)g(the)g(am)-5 b(bien)g(t)54 b(temp)5 b(erature,)1070
5446 y(the)71 b(more)g(White)h(gains)g(from)f(that)g(pla)-5
b(y)-15 b(.)116 b(This)72 b(idea)g(is)g(coun)-5 b(terin)g(tuitiv)g(e,)
76 b(and)70 b(most)1070 5675 y(amateur)52 b(go)f(pla)-5
b(y)g(ers)52 b(ha)-5 b(v)g(e)51 b(no)g(conception)h(of)f(starting)i(a)e
(k)-5 b(o)52 b(when)f(they)g(cannot)g(win)h(it.)1070
5903 y(They)58 b(sh)-5 b(y)58 b(a)-5 b(w)g(a)g(y)58 b(from)h(it.)2108
7531 y @beginspecial 0 @llx 0 @lly 228.996796 @urx 77.998901
@ury 2289.967773 @rwi 779.989014 @rhi @setspecial
%%BeginDocument: /u/levy/MSRI/Book42/spight/fig08.ps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: dvipsk 5.58f Copyright 1986, 1994 Radical Eye Software
%%Title: 589718.dvi
%%BoundingBox: 0 0 229 78
% File	  : gopro.eps							%
% Purpose : Implement PostScript procedures to draw Go games		%
% Version : 1.28							%
% Modified: 07 Apr 1995 18:10:54					%
% Author  : Jan van der Steen (jansteen@cwi.nl)				%
%  #]info: 

/Liberty 100 dict def
Liberty begin

%  #[init:
%
% Default fonts for various applications
%
/bFont /Helvetica-Bold def	% Black numbers
/wFont /Helvetica      def	% White numbers
/fFont /Helvetica      def	% Grid markers
/mFont /Helvetica      def	% Metamarkers

/bF { bFont findfont yP scalefont setfont } bind def /bB -24 def /bH 752 def
/wF { wFont findfont yP scalefont setfont } bind def /wB -23 def /wH 733 def
/fF { fFont findfont yP scalefont setfont } bind def
/mF { mFont findfont yP scalefont setfont } bind def

%
% Abbreviations
%
/W 0 def			% White color
/B 1 def			% Black color

%
% The following sizes are in square units
%
/gW	.01   def	% Width of grid line
/bW	.10   def	% Width of border line
/wW	.02   def	% Width of a white stone
/bR	.48   def	% Radius of a black stone
/wR	.48   def	% Radius of a white stone
/hR	.10   def	% Radius of a hoshi point
/xP	.60   def	% Maximum width  of strings (number,indicator)
/yP	.80   def	% Maximum height of strings (number,indicator)
/axis	true  def	% Do we print coordinates too
/cache	true  def	% Do we use the stone cache

%
% The stone cache
%
cache {
    /EMPTY	 0 def
    /BLACK	-1 def
    /WHITE	-2 def
} if
%  #]init: 
%  #[tools:
%	 #[snap:

/snap {
    %
    % x y snap x" y"
    %
    % Make x and y snap on output device grid
    %
    transform round exch round exch itransform
} bind def

%	 #]snap: 
%	 #[centerstrn:

/centerstrn {
    %
    % string centerstrn --> --
    %
    % Print "string" balanced around (0,0) and make sure
    % it will fit in a "yP" x "yP" bounding box.
    %
    dup stringwidth pop
    %
    % Does stringwidth exceed allowed maximum
    %
    dup yP gt { dup yP exch div 1 scale } if

    %
    % Center the string
    %
    2 div neg yP .20 sub 2 div neg moveto show
} bind def

%	 #]centerstrn: 
%  #]tools: 
%  #[boardinit:

/boardinit {
    %
    % boardsize (9, 13, 19, ...) realsize (in cm) boardinit --> ---
    %
    /realsize  exch def
    /boardsize exch def

    %
    % Initialise the hoshipoints
    %
    /hoshipos
	boardsize 19 eq {6} {
	boardsize 13 eq {3} {
	boardsize  9 eq {2}
			{0}		% Nothing appropriate
		ifelse
	    } ifelse
	} ifelse
    def

    %
    % Initialise the coordinate system (square = unity)
    %
    realsize boardsize div 2.54 div 72 mul dup scale

    %
    % Get and load the caption font
    %
    % /Times-Roman findfont .5 scalefont setfont

    % .5 axis {1}{0} ifelse add dup translate
    % axis {1}{0} ifelse dup translate

    %
    % Initialise clipping to whole board, and region to NIL
    %
    /llbdx 0 def/llbdy llbdx boardsize 1 sub add def
    /urbdy 0 def/urbdx urbdy boardsize 1 sub add def
    /llrgx 0 def
    /urrgx 0 def
    /llrgy 0 def
    /urrgy 0 def

    %
    % Clean the current path
    %
    newpath
} bind def

%  #]boardinit: 
%  #[cache:
%	 #[cacheinit:

/cacheinit {
    %
    % For the stone cache
    %
    cache {
	/stonecache boardsize dup mul array def
	0 1 boardsize dup mul 1 sub {
	    stonecache exch EMPTY put
	} for
    } if
} bind def

%	 #]cacheinit: 
%	 #[cachedump:

/cachedump {
    0 1 360 {
	dup stonecache exch get
	dup EMPTY eq {
	    pop pop
	}{
	    BLACK eq {
		dup
		boardsize  mod boardsize 2 idiv sub exch
		boardsize idiv boardsize 2 idiv sub bs
	    }{
		dup
		boardsize  mod boardsize 2 idiv sub exch
		boardsize idiv boardsize 2 idiv sub ws
	    } ifelse
	} ifelse    
    } for
} bind def

%	 #]cachedump: 
%	 #[cachedelete:

/cachedelete {
    /y exch def
    /x exch def
    stonecache
	x boardsize 2 idiv add
	y boardsize 2 idiv add boardsize mul add
	EMPTY
    put
} bind def

%	 #]cachedelete: 
%	 #[cd:

/cd {
    %
    % Delete an entry from the cache (stone has been hit)
    % x y cd
    %
    cache { cachedelete }{ pop pop } ifelse
} bind def

%	 #]cd: 
%  #]cache: 
%  #[caption:

/caption {
    gsave
	0 -1 translate
	0 0 moveto show
    grestore
} bind def

%  #]caption: 
%  #[transboard:

/row  0 def
/col  0 def
/rmax 3 def	% 3 rows	(based on h = 146 diagrams)
/cmax 2 def	% 2 columns	(based on w = 146 diagrams)
/lm   2 def	% Left margin

/init {
    lm lm translate
    0 boardsize 2 add rmax 1 sub mul translate
} bind def

true {
    /transboard { 0 0 translate } bind def
}{
    /transboard {
	col boardsize 2 add mul neg
	row boardsize 2 add mul translate
	row rmax 1 sub lt { /row row 1 add def }{
	    /row 0 def
	    col cmax 1 sub lt { /col col 1 add def }{
		showpage restore save
	    } ifelse
	} ifelse
	col boardsize 2 add mul
	row boardsize 2 add mul neg translate
    } bind def
} ifelse

%  #]transboard: 
%  #[board:
%	 #[hoshidump:

/hoshidump {
    gsave
    boardsize 2 idiv dup translate
    0 setgray
    newpath	    0                   0               hR 0 360 arc fill
    newpath	    hoshipos            hoshipos        hR 0 360 arc fill
    newpath	    hoshipos            hoshipos neg    hR 0 360 arc fill
    newpath	    hoshipos neg        hoshipos        hR 0 360 arc fill
    newpath	    hoshipos neg        hoshipos neg    hR 0 360 arc fill
    boardsize 19 eq {
	newpath	        0               hoshipos        hR 0 360 arc fill
	newpath	        hoshipos        0               hR 0 360 arc fill
	newpath	        0               hoshipos neg    hR 0 360 arc fill
	newpath	        hoshipos neg    0               hR 0 360 arc fill
    } if
    grestore
} bind def

%	 #]hoshidump: 
%	 #[coordump:

/X-AXIS [
    (A)(B)(C)(D)(E)(F)(G)(H)(J)(K)(L)(M)(N)(O)(P)(Q)(R)(S)(T)
] def
/Y-AXIS [
    (1)(2)(3)(4)(5)(6)(7)(8)(9)(10)(11)(12)(13)(14)(15)(16)(17)(18)(19)
] def

/coordump {
    %
    % Surround the board with coordinates
    %
    fF
    newpath
    0 bdh moveto	% upper edge
    1 1 boardsize {
	1 sub X-AXIS exch get
	gsave currentpoint translate centerstrn grestore
	1 0 rmoveto
    } for
    newpath
    0 -1 moveto		% lower edge
    1 1 boardsize {
	1 sub X-AXIS exch get
	gsave currentpoint translate centerstrn grestore
	1 0 rmoveto
    } for
    newpath
    -1 0 moveto		% left edge
    1 1 boardsize {
	1 sub Y-AXIS exch get
	gsave currentpoint translate centerstrn grestore
	0 1 rmoveto
    } for
    newpath
    bdw 0 moveto	% right edge
    1 1 boardsize {
	1 sub Y-AXIS exch get
	gsave currentpoint translate centerstrn grestore
	0 1 rmoveto
    } for
    newpath
} bind def

%  #]coordump: 
%	 #[board:

/board {
    transboard					% Translate into position

    %
    % Clip region
    %
    % Example 1: Bottom slice
    % /bdx  0 def	% SGF coordinates (topdown, leftright)
    % /bdy  8 def	% SGF coordinates (topdown, leftright)
    % /bdw 19 def
    % /bdh 11 def
    %
    % Example 2: Top slice
    % /bdx  0 def
    % /bdy  0 def
    % /bdw 19 def
    % /bdh 10 def
    %
    /psclipx bdx def
    /psclipy boardsize bdy bdh add sub def
    /psclipw bdw def
    /pscliph bdh def

    axis {
	%
	% Add space for the coordinates
	%
	/psclipw psclipw 2 add def	% left/right side
	/pscliph pscliph 2 add def	% top/bottom side
    } if

    newpath
	0           0        moveto
	psclipw     0       rlineto
	0           pscliph rlineto
	psclipw neg 0       rlineto
    closepath
    gsave 1 setgray fill grestore clip
    newpath
    %
    % Translate to relative origin
    %
    psclipx .5 sub neg
    psclipy .5 sub neg translate

    axis {1}{0} ifelse dup translate

    %
    % Region
    %
    gsave
	llrgx urrgx ne llrgy urrgy ne or {
	    newpath
	    llrgx .5 sub llrgy .5 add moveto
	    llrgx .5 sub urrgy .5 sub lineto
	    urrgx .5 add urrgy .5 sub lineto
	    urrgx .5 add llrgy .5 add lineto
	    closepath
	    .75 setgray
	    % 255 255 div
	    % 175 255 div
	    % 125 255 div setrgbcolor
	    gsave gW setlinewidth stroke grestore fill
	    newpath
	} if
    grestore

    %
    % Horizontals
    %
    newpath
    1 1 boardsize 2 sub {
	0 exch snap moveto
	boardsize 1 sub 0 rlineto
    } for
    %
    % Verticals
    %
    1 1 boardsize 2 sub {
	0 snap moveto
	0 boardsize 1 sub rlineto
    } for
    gW setlinewidth stroke

    %
    % Borders
    %
    newpath
    0			0			moveto
    0			boardsize 1 sub		rlineto
    boardsize 1 sub	0			rlineto
    0			boardsize 1 sub neg	rlineto
    closepath
    bW setlinewidth stroke

    hoshidump					% Print the hoshi points
    cache { cachedump } if			% Print the cache contents
    axis  { coordump  } if			% Print the coordinates
    % grestore
} bind def

%	 #]board: 
%  #]board: 
%  #[stones:
%	 #[wst:

/wst {
    %
    % Numbered white stone
    %
    % [[s0 K0][...][sn Kn]] ox w x y wst --> --
    %
    %	x,y 	[0..boardsize-1]
    %	ox,w	[1/1000 unit]
    %
    gsave
	/y  exch def
	/x  exch def
	/h  wH   yP mul 1000 div def
	/w  exch yP mul 1000 div def
	/oy wB   yP mul 1000 div def
	/ox exch yP mul 1000 div def
	cache {
	    stonecache
		x boardsize 2 idiv add
		y boardsize 2 idiv add boardsize mul add
		WHITE
	    put
	} if
	x y translate
	0 0 ws
	0 setgray wF

	w xP gt { xP w div }{1} ifelse
	h yP gt { yP h div }{1} ifelse scale
	w 2 div ox add neg
	h 2 div oy add neg translate
	0 0 moveto
	1 1 counttomark 2 sub 2 idiv { pop neg yP mul 1000 div 0 rmoveto show } for
	pop % "mark" itself
    grestore
} bind def

%	 #]wst: 
%	 #[bst:

/bst {
    %
    % Numbered black stone
    %
    % [[s0 K0][...][sn Kn]] ox w x y bst --> --
    %
    %	x,y 	[0..boardsize-1]
    %	ox,w	[1/1000 unit]
    %
    %
    gsave
	/y  exch def
	/x  exch def
	/h  bH   yP mul 1000 div def
	/w  exch yP mul 1000 div def
	/oy bB   yP mul 1000 div def
	/ox exch yP mul 1000 div def
	cache {
	    stonecache
		x boardsize 2 idiv add
		y boardsize 2 idiv add boardsize mul add
		BLACK
	    put
	} if
	x y translate
	0 0 bs
	1 setgray bF

	w xP gt { xP w div }{1} ifelse
	h yP gt { yP h div }{1} ifelse scale
	w 2 div ox add neg
	h 2 div oy add neg translate
	0 0 moveto
	1 1 counttomark 2 sub 2 idiv { pop neg yP mul 1000 div 0 rmoveto show } for
	pop % "mark" itself
    grestore
} bind def

%	 #]bst: 
%	 #[ws:

/ws {
    %
    % x y ws --> --
    %
    % Unnumbered white stone
    %
    newpath
    wR 0 360 arc
    gsave
	1 setgray fill
    grestore
    wW setlinewidth
    0 setgray stroke
} bind def

%	 #]ws: 
%	 #[bs:

/bs {
    %
    % x y ws --> --
    %
    % Unnumbered black stone
    %
    newpath
    bR 0 360 arc
    0 setgray fill
} bind def

%	 #]bs: 
%  #]stones: 
%  #[stone signs:
%	 #[ps:

/ps {
    %
    % color x y ps --> --
    %
    % Plus sign in "color" stone
    %
    gsave
	/ycoor exch def
	/xcoor exch def
	/color exch def
	xcoor ycoor color 0 eq { ws } { bs } ifelse
	newpath
	    xcoor ycoor translate
	    .06 setlinewidth
	    color setgray
	    -.2 0  moveto
	     .2 0  lineto
	    0  -.2 moveto
	    0   .2 lineto
	stroke
    grestore
} bind def

%	 #]ps: 
%	 #[ms:

/ms {
    %
    % color x y ms --> --
    %
    % Minus sign in "color" stone
    %
    gsave
	/ycoor exch def
	/xcoor exch def
	/color exch def
	xcoor ycoor color 0 eq { ws } { bs } ifelse
	newpath
	    xcoor ycoor translate
	    .06 setlinewidth
	    color setgray
	    -.2 0 moveto
	     .2 0 lineto
	stroke
    grestore
} bind def

%	 #]ms: 
%	 #[square_e:

/square_e {
    %
    % color x y square_e --> --
    %
    % Empty square in "color" stone
    %
    gsave
	/ycoor exch def
	/xcoor exch def
	/color exch def
	xcoor ycoor color 0 eq { ws } { bs } ifelse
	newpath
	    xcoor ycoor translate
	    .04 setlinewidth
	    color setgray
	    -.2353   -.2353   moveto
	    -.2353    .2353   lineto
	     .2353    .2353   lineto
	     .2353   -.2353   lineto
	closepath
	stroke
    grestore
} bind def

%	 #]square_e: 
%	 #[square_f:

/square_f {
    %
    % color x y square_f --> --
    %
    % Filled square in "color" stone
    %
    gsave
	/ycoor exch def
	/xcoor exch def
	/color exch def
	xcoor ycoor color 0 eq { ws } { bs } ifelse
	newpath
	    xcoor ycoor translate
	    .04 setlinewidth
	    color setgray
	    -.2353   -.2353   moveto
	    -.2353    .2353   lineto
	     .2353    .2353   lineto
	     .2353   -.2353   lineto
	closepath
	fill
    grestore
} bind def

%	 #]square_f: 
%	 #[triang_e:

/triang_e {
    %
    % color x y triang_e --> --
    %
    % Empty triangle in "color" stone
    %
    gsave
	/ycoor exch def
	/xcoor exch def
	/color exch def
	xcoor ycoor color 0 eq { ws } { bs } ifelse
	newpath
	    xcoor ycoor translate
	    .04 setlinewidth
	    color setgray
	    -.2353   -.175   moveto
	     .4706   0       rlineto
	    -.2353    .500   rlineto
	closepath
	stroke
    grestore
} bind def

%	 #]triang_e: 
%	 #[triang_f:

/triang_f {
    %
    % color x y triang_f --> --
    %
    % Filled triangle in "color" stone
    %
    gsave
	/ycoor exch def
	/xcoor exch def
	/color exch def
	xcoor ycoor color 0 eq { ws } { bs } ifelse
	newpath
	    xcoor ycoor translate
	    .04 setlinewidth
	    color setgray
	    -.2353   -.175   moveto
	     .4706   0       rlineto
	    -.2353    .500   rlineto
	closepath
	fill
    grestore
} bind def

%	 #]triang_f: 
%	 #[shade:

/shade {
    %
    % color x y shade --> --
    %
    % Give the board some color at (x,y)
    %
    gsave
	translate		% To x y
	newpath
	    -.5 -.5 moveto
	    0 1 rlineto
	    1 0 rlineto
	    0 -1 rlineto
	closepath
	100 div setgray fill		% with color

	%
	% Restore grid
	%
	gW setlinewidth
	newpath -.5 0 moveto 1 0 rlineto stroke
	newpath 0 -.5 moveto 0 1 rlineto stroke
    grestore
} bind def

%	 #]shade: 
%	 #[bterr:

/bterr {
    %
    % x y bterr --> --
    %
    % Black territory indicator
    %
    gsave
	false {
	    %
	    % white stone filled 60% black
	    %
	    wR 0 360 arc
	    gsave
		.40 setgray fill
	    grestore
	    wW setlinewidth
	    0 setgray stroke
	}{
	    false {
		%
		% The character 'b'
		%
		gsave
		    2 copy wR 3 mul 4 div 0 360 arc 1 setgray fill
		grestore
		translate fF (b) centerstrn
	    }{
		%
		% A small black square
		%
		translate
		newpath
		    -.4 -.4  moveto
		    0.8 0   rlineto
		    0   0.8 rlineto
		    -.8 0   rlineto
		closepath
		gsave .25 setgray fill grestore stroke
	    } ifelse
	} ifelse
    grestore
} bind def

%	 #]bterr: 
%	 #[wterr:

/wterr {
    %
    % x y wterr --> --
    %
    % White territory indicator
    %
    gsave
	false {
	    %
	    % White stone filled 10% black
	    %
	    wR 0 360 arc
	    gsave
		.90 setgray fill
	    grestore
	    wW setlinewidth
	    0 setgray stroke
	}{
	    false {
		%
		% The character 'w'
		%
		gsave
		    2 copy wR 3 mul 4 div 0 360 arc 1 setgray fill
		grestore
		translate fF (w) centerstrn
	    }{
		%
		% A small white square
		%
		translate
		newpath
		    -.4 -.4  moveto
		    0.8 0   rlineto
		    0   0.8 rlineto
		    -.8 0   rlineto
		closepath
		gsave .75 setgray fill grestore stroke
	    } ifelse
	} ifelse
    grestore
} bind def

%	 #]wterr: 
%	 #[metamark:

/metamark {
    %
    % color x y (string) metamark --> --
    %
    % Arbitrairy mark in "color" stone
    %
    gsave
	/marker exch def
	/ycoor  exch def
	/xcoor  exch def
	/color  exch def
	xcoor ycoor color 0 eq { ws } { bs } ifelse
	xcoor ycoor translate
	mF
	marker stringwidth pop 2 div neg 0 translate
	color 1 eq { 1 setgray } if
	0 0 moveto marker show
    grestore
} bind def

%	 #]metamark: 
%  #]stone signs: 
%  #[field signs:
%	 #[fs:

/fs {
    %
    % string x y fs --> --
    %
    % Grid point indicator
    %
    gsave
	newpath
	    translate
	    0 0 wR 0 360 arc
	    1 setgray
	    fill
	0 setgray fF centerstrn
    grestore
} bind def

%	 #]fs: 
%	 #[arrow:

/arrow {
    %
    % angle x y arrow --> --
    %
    % Put an arrow from (x,y) in direction determined by angle
    %
    gsave
	translate
	0.5 setgray 0 0 hR 0 360 arc fill
	rotate
	newpath
	     0.0   0.25  moveto
	    -0.1   0.25  lineto
	     0.0   0.48  lineto
	     0.1   0.25  lineto
	closepath 0.5 setgray
	gsave stroke grestore
	fill
    grestore
} bind def

%	 #]arrow: 
%	 #[nl:

/nl {
    %
    % string x y nl --> --
    %
    % Numbered liberty --- Put Number next to a marked grid point
    %
    gsave
	translate
	newpath
	     0.0  -0.25  moveto
	    -0.25  0.0   lineto
	     0.0   0.25  lineto
	     0.25  0.0   lineto
	closepath 0.5 setgray fill
	.3 .3 translate
	.6 dup scale
	0 setgray fF centerstrn
    grestore
} bind def

%	 #]nl: 
%	 #[no:

/no {
    %
    % string x y no --> --
    %
    % Put Number next to grid point
    %
    gsave
	translate
	% 0.5 setgray 0 0 hR 0 360 arc fill
	.3 .3 translate
	.6 dup scale
	0 setgray fF centerstrn
    grestore
} bind def

%	 #]no: 
%	 #[ds:

/ds {
    %
    % string x y ds --> --
    %
    % Destructive Grid point indicator
    %
    gsave
	translate
	0 setgray fF centerstrn
    grestore
} bind def

%	 #]ds: 
%  #]field signs: 

end

Liberty begin
/cache false def
/axis  false def
19 10.20 boardinit
/bdx  2 def
/bdy  0 def
/bdw 15 def
/bdh  5 def
/rgx  0 def
/rgy  0 def
/rgw 19 def
/rgh 19 def
board
2 18 bs
4 18 ws
6 18 bs
8 18 ws
9 18 bs
10 18 ws
(c) 11 18 fs
12 18 bs
13 18 bs
14 18 ws
15 18 bs
16 18 bs
2 17 bs
3 17 ws
4 17 ws
5 17 bs
(a) 6 17 fs
7 17 bs
8 17 ws
9 17 bs
10 17 ws
11 17 ws
12 17 bs
13 17 ws
(b) 14 17 fs
15 17 ws
16 17 bs
2 16 bs
3 16 bs
4 16 ws
5 16 ws
6 16 ws
7 16 ws
8 16 ws
9 16 bs
10 16 ws
12 16 ws
13 16 ws
14 16 ws
15 16 ws
16 16 bs
3 15 bs
4 15 bs
5 15 bs
6 15 bs
7 15 bs
8 15 bs
9 15 bs
11 15 ws
12 15 ws
13 15 bs
14 15 bs
15 15 bs
16 15 bs
10 14 bs
11 14 bs
12 14 bs
13 14 bs
end
%%Trailer
userdict /end-hook known{end-hook}if
%%EOF

%%EndDocument
 @endspecial 3309 7865 a Ff(Figure)d(8.)78 b Fe(Ko)54
b(and)h(Gote.)1281 8309 y Fm(Figure)k(8)g(sho)-5 b(ws)60
b(a)f(k)-5 b(o)59 b(on)g(the)g(righ)-5 b(t)60 b(and)e(a)h(gote)h(on)f
(the)g(left.)81 b(In)59 b(the)h(gote,)f(if)h(Blac)-5
b(k)1070 8537 y(pla)g(ys)47 b(at)g(a)g(she)f(kills)k(the)c(White)i
(group)d(for)h(23)h(p)5 b(oin)-5 b(ts;)51 b(if)c(White)h(pla)-5
b(ys)47 b(at)g(a)f(he)h(sa)-5 b(v)g(es)47 b(the)1070
8766 y(group)f(for)h(a)g(lo)5 b(cal)49 b(score)f(of)f
Fi(\000)p Fm(8.)73 b(The)47 b(gote)h(has)f(a)h(mast)g(v)-10
b(alue)48 b(of)f(7)5638 8696 y Fk(1)p 5638 8725 71 8
v 5638 8826 a(2)5776 8766 y Fm(and)g(a)g(temp)5 b(erature)1070
8994 y(of)66 b(15)1475 8925 y Fk(1)p 1475 8954 V 1475
9055 a(2)1566 8994 y Fm(.)101 b(If)66 b(Blac)-5 b(k)68
b(tak)-5 b(es)67 b(the)f(k)-5 b(o)66 b(at)h Fj(b)f Fm(and)g(then)g
(connects)g(1)h(p)5 b(oin)-5 b(t)66 b(ab)5 b(o)-5 b(v)g(e)66
b Fj(b)p Fm(,)i(she)f(kills)1070 9223 y(the)54 b(White)g(group)f(for)h
(28)g(p)5 b(oin)-5 b(ts;)55 b(if)g(White)g(pla)-5 b(ys)54
b(at)g Fj(c)g Fm(to)h(tak)-5 b(e)54 b(the)g(3)g(Blac)-5
b(k)55 b(stones,)g(he)1070 9451 y(gets)k(8)f(p)5 b(oin)-5
b(ts.)79 b(The)58 b(k)-5 b(o)58 b(has)h(a)f(mast)i(v)-10
b(alue)59 b(of)f(4)g(and)g(a)h(temp)5 b(erature)58 b(of)g(12.)1281
9679 y(Figure)67 b(9)h(illustrates)j(the)c(un)-5 b(usual)68
b(thermographs)e(that)i(can)f(o)5 b(ccur)68 b(with)g(sums)g(in-)1070
9908 y(cluding)h(k)-5 b(os.)107 b(This)69 b(is)h(the)e(thermograph)g
(of)g(the)g(sum)h(of)f(the)g(gote)h(and)e(k)-5 b(o)68
b(in)h(Figure)1070 10136 y(8,)g(when)d(neither)i(pla)-5
b(y)g(er)67 b(has)g(a)g(k)-5 b(o)67 b(threat)g(The)g(gote)g(is)h
(hotter)f(than)g(the)g(k)-5 b(o,)69 b(so)e(that)1070
10365 y(when)j Fj(t)g(>)f Fm(12,)k(eac)-5 b(h)71 b(pla)-5
b(y)g(er)71 b(will)i(prefer)d(the)h(gote)g(to)g(the)g(k)-5
b(o,)73 b(and)d(the)h(thermograph)1070 10593 y(lo)5 b(oks)78
b(lik)-5 b(e)80 b(the)e(standard)f(gote)i(thermograph.)135
b(But)79 b(when)e Fj(t)82 b(<)f Fm(12,)h(b)5 b(oth)78
b(pla)-5 b(ys)78 b(are)p eop
%%Page: 94 7
94 6 bop 1070 577 a Fg(94)2140 b(WILLIAM)65 b(L.)g(SPIGHT)2758
3885 y @beginspecial -1 @llx -1 @lly 205.997101 @urx
256.996399 @ury 1552.478027 @rwi 1934.972534 @rhi @setspecial
%%BeginDocument: /u/levy/MSRI/Book42/spight/fig09.ps
%!PS-Adobe-2.0 EPSF-2.0 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%Created By:                     GLE v3.5 R0.23                  %%
%%            visit www.uark.edu/misc/vlabella/gle/gle.html %%
%%                          for more information            %%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%CreationDate: Fri Apr  6 09:44:15 2001
%%SourceFile:   graph09.gle
%%BoundingBox: -1 -1 206 257 
%%EndComments 
%%EndProlog 
gsave 
 
/f {findfont exch scalefont setfont} bind def 
/s {show} bind def 
/ps {true charpath} bind def 
/l {lineto} bind def 
/m {newpath moveto} bind def 
matrix currentmatrix /originmat exch def 
/umatrix {originmat matrix concatmatrix setmatrix} def 
 
 [72 0 0 72 0 0] umatrix 
  [28.3465 0 0 28.3465 0 0] umatrix 
 [] 0 setdash 
0.02 setlinewidth 
0 0 0 setrgbcolor 
0 0 m 
0 0 m 
0 0 m 
0 0 m 
1.08 1.35 m 
0 0 0 setrgbcolor 
[] 0 setdash 
1 setlinecap 
1.08 1.35 m 
6.12 1.35 l 
stroke 
0 0 0 setrgbcolor 
0.02 setlinewidth 
[] 0 setdash 
0 setlinecap 
0 0 0 setrgbcolor 
[] 0 setdash 
6.12 1.35 m 
6.12 1.35 m 
6.12 1.3 l 
stroke 
5.805 1.35 m 
5.805 1.35 m 
5.805 1.3 l 
stroke 
5.49 1.35 m 
5.49 1.35 m 
5.49 1.3 l 
stroke 
5.175 1.35 m 
5.175 1.35 m 
5.175 1.3 l 
stroke 
4.86 1.35 m 
4.86 1.35 m 
4.86 1.3 l 
stroke 
4.545 1.35 m 
4.545 1.35 m 
4.545 1.3 l 
stroke 
4.23 1.35 m 
4.23 1.35 m 
4.23 1.3 l 
stroke 
3.915 1.35 m 
3.915 1.35 m 
3.915 1.3 l 
stroke 
3.6 1.35 m 
3.6 1.35 m 
3.6 1.3 l 
stroke 
3.285 1.35 m 
3.285 1.35 m 
3.285 1.3 l 
stroke 
2.97 1.35 m 
2.97 1.35 m 
2.97 1.3 l 
stroke 
2.655 1.35 m 
2.655 1.35 m 
2.655 1.3 l 
stroke 
2.34 1.35 m 
2.34 1.35 m 
2.34 1.3 l 
stroke 
2.025 1.35 m 
2.025 1.35 m 
2.025 1.3 l 
stroke 
1.71 1.35 m 
1.71 1.35 m 
1.71 1.3 l 
stroke 
1.395 1.35 m 
1.395 1.35 m 
1.395 1.3 l 
stroke 
1.08 1.35 m 
1.08 1.35 m 
1.08 1.3 l 
stroke 
0 0 0 setrgbcolor 
[] 0 setdash 
6.12 1.35 m 
6.12 1.35 m 
6.12 1.25 l 
stroke 
5.49 1.35 m 
5.49 1.35 m 
5.49 1.25 l 
stroke 
4.86 1.35 m 
4.86 1.35 m 
4.86 1.25 l 
stroke 
4.23 1.35 m 
4.23 1.35 m 
4.23 1.25 l 
stroke 
3.6 1.35 m 
3.6 1.35 m 
3.6 1.25 l 
stroke 
2.97 1.35 m 
2.97 1.35 m 
2.97 1.25 l 
stroke 
2.34 1.35 m 
2.34 1.35 m 
2.34 1.25 l 
stroke 
1.71 1.35 m 
1.71 1.35 m 
1.71 1.25 l 
stroke 
1.08 1.35 m 
1.08 1.35 m 
1.08 1.25 l 
stroke 
0 0 0 setrgbcolor 
0.02 setlinewidth 
[] 0 setdash 
0 0 0 setrgbcolor 
[] 0 setdash 
6.12 0.77 m 
6.0194 0.77 m 
6.0194 0.77 m 
 0.400000 /Times-Roman f (6) s 6.12 0.77 m 
5.49 0.77 m 
5.391 0.77 m 
5.391 0.77 m 
(8) s 5.49 0.77 m 
4.86 0.77 m 
4.6426 0.77 m 
4.6426 0.77 m 
(1) s 4.8426 0.77 m 
(0) s 4.86 0.77 m 
4.23 0.77 m 
4.0128 0.77 m 
4.0128 0.77 m 
(1) s 4.2128 0.77 m 
(2) s 4.23 0.77 m 
3.6 0.77 m 
3.3834 0.77 m 
3.3834 0.77 m 
(1) s 3.5834 0.77 m 
(4) s 3.6 0.77 m 
2.97 0.77 m 
2.7542 0.77 m 
2.7542 0.77 m 
(1) s 2.9542 0.77 m 
(6) s 2.97 0.77 m 
2.34 0.77 m 
2.1294 0.77 m 
2.1294 0.77 m 
(1) s 2.3294 0.77 m 
(8) s 2.34 0.77 m 
1.71 0.77 m 
1.5088 0.77 m 
1.5088 0.77 m 
(2) s 1.7088 0.77 m 
(0) s 1.71 0.77 m 
1.08 0.77 m 
0.879 0.77 m 
0.879 0.77 m 
(2) s 1.079 0.77 m 
(2) s 1.08 0.77 m 
1.08 1.35 m 
0 0 0 setrgbcolor 
[] 0 setdash 
1 setlinecap 
1.08 1.35 m 
1.08 7.65 l 
stroke 
0 0 0 setrgbcolor 
0.02 setlinewidth 
[] 0 setdash 
0 setlinecap 
0 0 0 setrgbcolor 
[] 0 setdash 
1.08 1.35 m 
1.08 1.35 m 
1.03 1.35 l 
stroke 
1.08 1.665 m 
1.08 1.665 m 
1.03 1.665 l 
stroke 
1.08 1.98 m 
1.08 1.98 m 
1.03 1.98 l 
stroke 
1.08 2.295 m 
1.08 2.295 m 
1.03 2.295 l 
stroke 
1.08 2.61 m 
1.08 2.61 m 
1.03 2.61 l 
stroke 
1.08 2.925 m 
1.08 2.925 m 
1.03 2.925 l 
stroke 
1.08 3.24 m 
1.08 3.24 m 
1.03 3.24 l 
stroke 
1.08 3.555 m 
1.08 3.555 m 
1.03 3.555 l 
stroke 
1.08 3.87 m 
1.08 3.87 m 
1.03 3.87 l 
stroke 
1.08 4.185 m 
1.08 4.185 m 
1.03 4.185 l 
stroke 
1.08 4.5 m 
1.08 4.5 m 
1.03 4.5 l 
stroke 
1.08 4.815 m 
1.08 4.815 m 
1.03 4.815 l 
stroke 
1.08 5.13 m 
1.08 5.13 m 
1.03 5.13 l 
stroke 
1.08 5.445 m 
1.08 5.445 m 
1.03 5.445 l 
stroke 
1.08 5.76 m 
1.08 5.76 m 
1.03 5.76 l 
stroke 
1.08 6.075 m 
1.08 6.075 m 
1.03 6.075 l 
stroke 
1.08 6.39 m 
1.08 6.39 m 
1.03 6.39 l 
stroke 
1.08 6.705 m 
1.08 6.705 m 
1.03 6.705 l 
stroke 
1.08 7.02 m 
1.08 7.02 m 
1.03 7.02 l 
stroke 
1.08 7.335 m 
1.08 7.335 m 
1.03 7.335 l 
stroke 
1.08 7.65 m 
1.08 7.65 m 
1.03 7.65 l 
stroke 
0 0 0 setrgbcolor 
[] 0 setdash 
1.08 1.35 m 
1.08 1.35 m 
0.98 1.35 l 
stroke 
1.08 1.98 m 
1.08 1.98 m 
0.98 1.98 l 
stroke 
1.08 2.61 m 
1.08 2.61 m 
0.98 2.61 l 
stroke 
1.08 3.24 m 
1.08 3.24 m 
0.98 3.24 l 
stroke 
1.08 3.87 m 
1.08 3.87 m 
0.98 3.87 l 
stroke 
1.08 4.5 m 
1.08 4.5 m 
0.98 4.5 l 
stroke 
1.08 5.13 m 
1.08 5.13 m 
0.98 5.13 l 
stroke 
1.08 5.76 m 
1.08 5.76 m 
0.98 5.76 l 
stroke 
1.08 6.39 m 
1.08 6.39 m 
0.98 6.39 l 
stroke 
1.08 7.02 m 
1.08 7.02 m 
0.98 7.02 l 
stroke 
1.08 7.65 m 
1.08 7.65 m 
0.98 7.65 l 
stroke 
0 0 0 setrgbcolor 
0.02 setlinewidth 
[] 0 setdash 
0 0 0 setrgbcolor 
[] 0 setdash 
0.78 1.35 m 
0.5896 1.2176 m 
0.5896 1.2176 m 
(0) s 0.78 1.35 m 
0.78 1.98 m 
0.59 1.8448 m 
0.59 1.8448 m 
(2) s 0.78 1.98 m 
0.78 2.61 m 
0.5912 2.4748 m 
0.5912 2.4748 m 
(4) s 0.78 2.61 m 
0.78 3.24 m 
0.5928 3.1064 m 
0.5928 3.1064 m 
(6) s 0.78 3.24 m 
0.78 3.87 m 
0.6032 3.7376 m 
0.6032 3.7376 m 
(8) s 0.78 3.87 m 
0.78 4.5 m 
0.3896 4.3676 m 
0.3896 4.3676 m 
(1) s 0.5896 4.3676 m 
(0) s 0.78 4.5 m 
0.78 5.13 m 
0.39 4.9948 m 
0.39 4.9948 m 
(1) s 0.59 4.9948 m 
(2) s 0.78 5.13 m 
0.78 5.76 m 
0.3912 5.6248 m 
0.3912 5.6248 m 
(1) s 0.5912 5.6248 m 
(4) s 0.78 5.76 m 
0.78 6.39 m 
0.3928 6.2564 m 
0.3928 6.2564 m 
(1) s 0.5928 6.2564 m 
(6) s 0.78 6.39 m 
0.78 7.02 m 
0.4032 6.8876 m 
0.4032 6.8876 m 
(1) s 0.6032 6.8876 m 
(8) s 0.78 7.02 m 
0.78 7.65 m 
0.3896 7.5176 m 
0.3896 7.5176 m 
(2) s 0.5896 7.5176 m 
(0) s 0.78 7.65 m 
1.08 7.65 m 
6.12 1.35 m 
[] 0 setdash 
0.02 setlinewidth 
[] 0 setdash 
0 0 1 setrgbcolor 
0.05 setlinewidth 
1.71 1.35 m 
1.71 1.35 m 
3.285 2.925 l 
3.285 5.13 l 
4.3875 6.2325 l 
stroke 
[] 0 setdash 
0.02 setlinewidth 
[] 0 setdash 
1 0 0 setrgbcolor 
0.05 setlinewidth 
3.285 1.35 m 
3.285 1.35 m 
3.285 2.925 l 
5.49 5.13 l 
4.3875 6.2325 l 
stroke 
[] 0 setdash 
0.02 setlinewidth 
[] 0 setdash 
0 0 0 setrgbcolor 
0.05 setlinewidth 
4.3875 6.2325 m 
4.3875 6.2325 m 
4.3875 7.1775 l 
stroke 
0 0 0 setrgbcolor 
0.02 setlinewidth 
[] 0 setdash 
0 0 m 
0 0 0 setrgbcolor 
0.02 setlinewidth 
[] 0 setdash 
0 0 0 setrgbcolor 
0.02 setlinewidth 
[] 0 setdash 
0 0 m 
0.02 setlinewidth 
4.3875 7.1775 m 
4.2825 7.08657 m 
1 setlinejoin 
 newpath 4.2825 7.08657 moveto 
4.2825 7.08657 moveto 
4.4925 7.08657 l 
4.3875 7.26843 l 
4.2825 7.08657 l 
gsave 
0 0 0 setrgbcolor 
fill 
0 0 0 setrgbcolor 
grestore 
0 setlinejoin 
0.02 setlinewidth 
0 0 0 setrgbcolor 
4.3875 7.1775 m 
0 0 0 setrgbcolor 
0.02 setlinewidth 
[] 0 setdash 
0 0 m 
0 0 m 
0 0 m 
0 0 0 setrgbcolor 
0.02 setlinewidth 
[] 0 setdash 
showpage 
grestore 
%%Trailer 

%%EndDocument
 @endspecial 3026 3867 a Ff(Figure)56 b(9.)78 b Fe(Sum)55
b(of)f(Ko)g(plus)g(Gote.)1070 4232 y Fm(viable,)k(and)e(their)h(in)-5
b(teraction)59 b(pro)5 b(duces)56 b(a)g(curious)h(lo)5
b(opbac)-5 b(k)57 b(and)f(osculation.)78 b(When)1070
4460 y(5)57 b Fj(<)h(t)g(<)g Fm(12,)64 b(Blac)-5 b(k)65
b(to)g(mo)-5 b(v)g(e)64 b(will)i(pla)-5 b(y)64 b(in)h(the)f(gote,)h
(allo)-5 b(wing)66 b(White)e(to)g(win)h(the)f(k)-5 b(o.)1070
4688 y(That)67 b(exc)-5 b(hange)67 b(pro)5 b(duces)67
b(the)h(v)-5 b(ertical)70 b(segmen)-5 b(t)69 b(of)e(the)h(Left)g(w)-5
b(all.)107 b(White)69 b(to)f(mo)-5 b(v)g(e)1070 4917
y(will)74 b(also)e(pla)-5 b(y)72 b(in)h(the)e(gote,)k(allo)-5
b(wing)74 b(Blac)-5 b(k)73 b(to)f(tak)-5 b(e)71 b(and)g(win)h(the)g(k)
-5 b(o)72 b(while)h(White)1070 5145 y(mak)-5 b(es)48
b(a)e(pla)-5 b(y)48 b(elsewhere.)75 b(That)47 b(exc)-5
b(hange)46 b(pro)5 b(duces)46 b(the)h(bac)-5 b(kw)g(ard)46
b(lo)5 b(op)47 b(in)h(the)f(Righ)-5 b(t)1070 5374 y(w)g(all.)91
b(Belo)-5 b(w)63 b(the)g(osculation)h(p)5 b(oin)-5 b(t,)63
b(when)f Fj(t)55 b(<)g Fm(5,)63 b(eac)-5 b(h)63 b(pla)-5
b(y)g(er)62 b(will)j(prefer)d(to)g(pla)-5 b(y)63 b(in)1070
5602 y(the)58 b(co)5 b(oler)59 b(comp)5 b(onen)-5 b(t,)58
b(the)h(k)-5 b(o.)2164 6112 y Fl(The)74 b(Jiang{Rui)g(En)-6
b(vironmen)g(tal)75 b(Go)e(Game)1281 6481 y Fm(On)54
b(April)i(21,)f(1998,)g(Jiang)h(Zh)-5 b(ujiu)55 b(and)f(Rui)i(Nai)f(W)
-15 b(ei,)57 b(9-dan)c(professional)j(pla)-5 b(y)g(ers,)1070
6710 y(pla)g(y)g(ed)82 b(the)h(\014rst)g(en)-5 b(vironmen)g(tal)83
b(go)g(game.)150 b(Jiang)83 b(pla)-5 b(y)g(ed)82 b(Blac)-5
b(k)84 b(and)e(Rui)h(pla)-5 b(y)g(ed)1070 6938 y(White.)78
b(Jiang)59 b(w)-5 b(on)58 b(b)-5 b(y)2772 6869 y Fk(1)p
2772 6898 71 8 v 2772 6999 a(2)2922 6938 y Fm(p)5 b(oin)-5
b(t.)78 b(The)58 b(en)-5 b(vironmen)g(t)58 b(for)g(en)-5
b(vironmen)g(tal)60 b(go)e(is)h(a)g(stac)-5 b(k)1070
7167 y(of)65 b(coup)5 b(ons.)96 b(Instead)66 b(of)e(making)i(a)f(pla)-5
b(y)65 b(on)g(the)g(b)5 b(oard,)65 b(a)g(pla)-5 b(y)g(er)66
b(ma)-5 b(y)65 b(tak)-5 b(e)65 b(the)g(top)1070 7395
y(coup)5 b(on.)74 b(This)54 b(coup)5 b(on)51 b(is)i(w)-5
b(orth)53 b(t)g(p)5 b(oin)-5 b(ts,)54 b(the)e(am)-5 b(bien)g(t)54
b(temp)5 b(erature.)76 b(F)-15 b(or)52 b(this)i(game)1070
7623 y(the)59 b(v)-10 b(alues)60 b(of)f(the)h(coup)5
b(ons)58 b(ranged)g(from)h(20)g(to)4547 7554 y Fk(1)p
4547 7583 V 4547 7684 a(2)4698 7623 y Fm(in)4924 7554
y Fk(1)p 4924 7583 V 4924 7684 a(2)5075 7623 y Fm(p)5
b(oin)-5 b(t)60 b(decremen)-5 b(ts.)81 b(T)-15 b(o)59
b(o\013set)1070 7852 y(the)49 b(adv)-10 b(an)-5 b(tage)48
b(of)h(pla)-5 b(ying)50 b(\014rst,)g(White)g(receiv)-5
b(ed)50 b(comp)5 b(ensation)49 b(\(k)-5 b(omi\))51 b(of)e(9)6527
7783 y Fk(1)p 6527 7812 V 6527 7912 a(2)6667 7852 y Fm(p)5
b(oin)-5 b(ts.)1070 8080 y(\(In)70 b(theory)f(the)h(k)-5
b(omi)71 b(should)f(b)5 b(e)69 b(10)h(p)5 b(oin)-5 b(ts,)73
b(half)d(the)g(am)-5 b(bien)g(t)70 b(temp)5 b(erature,)73
b(but)c(a)1070 8309 y(non-in)-5 b(tegral)63 b(k)-5 b(omi)65
b(is)f(customary)g(to)g(a)-5 b(v)g(oid)63 b(ties.\))95
b(F)-15 b(or)63 b(go)g(regions)h(of)f(ev)-5 b(en)63 b(mo)5
b(derate)1070 8537 y(size,)76 b(exhaustiv)-5 b(e)71 b(searc)-5
b(h)72 b(is)g(not)f(p)5 b(ossible,)76 b(ev)-5 b(en)71
b(with)h(computer)g(assistance,)k(and)70 b(w)-5 b(e)1070
8766 y(cannot)62 b(absolutely)i(guaran)-5 b(tee)62 b(all)j(of)d(our)g
(results.)92 b(Ho)-5 b(w)g(ev)g(er,)64 b(with)f(the)g(collab)5
b(oration)1070 8994 y(of)68 b(t)-5 b(w)g(o)69 b(of)f(the)h(b)5
b(est)68 b(go)h(pla)-5 b(y)g(ers)69 b(in)g(the)f(w)-5
b(orld,)71 b(w)-5 b(e)69 b(feel)g(con\014den)-5 b(t)68
b(that)h(w)-5 b(e)68 b(kno)-5 b(w)68 b(the)1070 9223
y(main)59 b(lines)h(of)f(ortho)5 b(do)-5 b(x)57 b(pla)-5
b(y)59 b(from)f(this)i(p)5 b(oin)-5 b(t)59 b(on.)1281
9451 y(Figure)65 b(10)g(sho)-5 b(ws)66 b(a)g(p)5 b(osition)66
b(from)g(the)f(game)h(indicating)h(mark)-5 b(ed)65 b(territories)j(and)
1070 9679 y(the)82 b(temp)5 b(eratures)82 b(of)g(some)h(regions.)149
b(\(The)82 b(temp)5 b(eratures)82 b(assume)h(ortho)5
b(do)-5 b(x)81 b(pla)-5 b(y)1070 9908 y(with)51 b(White)g(to)g(pla)-5
b(y)50 b(in)h(this)h(p)5 b(osition.\))76 b(The)50 b(hottest)i(region)e
(is)i(the)f(South)-5 b(w)g(est)50 b(corner,)1070 10136
y(extending)56 b(in)-5 b(to)57 b(the)f(cen)-5 b(tral)57
b(South)f(region.)77 b(The)56 b(top)g(coup)5 b(on)55
b(is)i(no)-5 b(w)56 b(w)-5 b(orth)56 b(4)g(p)5 b(oin)-5
b(ts,)1070 10365 y(and)72 b(this)i(is)g(a)f(double)f(sen)-5
b(te)74 b(at)f(that)g(temp)5 b(erature.)121 b(W)-15 b(e)73
b(do)g(not)f(need)h(to)g(kno)-5 b(w)72 b(the)1070 10593
y(lo)5 b(cal)55 b(temp)5 b(erature)54 b(precisely)-15
b(,)57 b(only)d(that)g(it)h(is)g(greater)f(than)g(4.)76
b(It)55 b(is)g(appro)-5 b(ximately)55 b(5.)p eop
%%Page: 95 8
95 7 bop 1926 577 a Fg(GO)65 b(THERMOGRAPHY:)f(THE)g(4/21/98)e(JIANG{R)
l(UI)h(ENDGAME)706 b(95)1393 6291 y @beginspecial 0 @llx
0 @lly 309.995636 @urx 309.995636 @ury 3099.956299 @rwi
3099.956299 @rhi @setspecial
%%BeginDocument: /u/levy/MSRI/Book42/spight/fig10.ps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: dvipsk 5.58f Copyright 1986, 1994 Radical Eye Software
%%Title: 589718.dvi
%%BoundingBox: 0 0 310 310
%  #[info:
%									%
%									%
%	     _								%
%	    / \\  /'\\ -_-_  ,._-_  /'\\     _-_  -_-_	 _-_,		%
%	   || || || || || \\  ||   || ||    || \\ || \\ ||_.		%
%	   || || || || || ||  ||   || ||    ||/	  || ||	 ~ ||		%
%	   \\_-| \\,/  ||-'   \\,  \\,/	 <> \\,/  ||-'	,-_-		%
%	    /  \       |/			  |/			%
%	   '----`      '			  '			%
%									%
%		  Copyright (c) 1993  Jan van der Steen			%
%	       Centre for Mathematics and Computer Science		%
%		       Amsterdam, the Netherlands			%
%									%
%-----------------------------------------------------------------------%
%   You are not allowed to use this software in commercial software.	%
%   You are allowed to use this software in free software under the	%
%   condition that you maintain this integral message in the source.	%
%-----------------------------------------------------------------------%
% File	  : gopro.eps							%
% Purpose : Implement PostScript procedures to draw Go games		%
% Version : 1.28							%
% Modified: 07 Apr 1995 18:10:54					%
% Author  : Jan van der Steen (jansteen@cwi.nl)				%
%  #]info: 

/Liberty 100 dict def
Liberty begin

%  #[init:
%
% Default fonts for various applications
%
/bFont /Helvetica-Bold def	% Black numbers
/wFont /Helvetica      def	% White numbers
/fFont /Helvetica      def	% Grid markers
/mFont /Helvetica      def	% Metamarkers

/bF { bFont findfont yP scalefont setfont } bind def /bB -24 def /bH 752 def
/wF { wFont findfont yP scalefont setfont } bind def /wB -23 def /wH 733 def
/fF { fFont findfont yP scalefont setfont } bind def
/mF { mFont findfont yP scalefont setfont } bind def

%
% Abbreviations
%
/W 0 def			% White color
/B 1 def			% Black color

%
% The following sizes are in square units
%
/gW	.01   def	% Width of grid line
/bW	.10   def	% Width of border line
/wW	.02   def	% Width of a white stone
/bR	.48   def	% Radius of a black stone
/wR	.48   def	% Radius of a white stone
/bM   .16   def   % Radius of a black mark
/wM   .16   def   % Radius of a white mark
/hR	.10   def	% Radius of a hoshi point
/xP	.60   def	% Maximum width  of strings (number,indicator)
/yP	.80   def	% Maximum height of strings (number,indicator)
/axis	true  def	% Do we print coordinates too
/cache	true  def	% Do we use the stone cache

%
% The stone cache
%
cache {
    /EMPTY	 0 def
    /BLACK	-1 def
    /WHITE	-2 def
} if
%  #]init: 
%  #[tools:
%	 #[snap:

/snap {
    %
    % x y snap x" y"
    %
    % Make x and y snap on output device grid
    %
    transform round exch round exch itransform
} bind def

%	 #]snap: 
%	 #[centerstrn:

/centerstrn {
    %
    % string centerstrn --> --
    %
    % Print "string" balanced around (0,0) and make sure
    % it will fit in a "yP" x "yP" bounding box.
    %
    dup stringwidth pop
    %
    % Does stringwidth exceed allowed maximum
    %
    dup yP gt { dup yP exch div 1 scale } if

    %
    % Center the string
    %
    2 div neg yP .20 sub 2 div neg moveto show
} bind def

%	 #]centerstrn: 
%  #]tools: 
%  #[boardinit:

/boardinit {
    %
    % boardsize (9, 13, 19, ...) realsize (in cm) boardinit --> ---
    %
    /realsize  exch def
    /boardsize exch def

    %
    % Initialise the hoshipoints
    %
    /hoshipos
	boardsize 19 eq {6} {
	boardsize 13 eq {3} {
	boardsize  9 eq {2}
			{0}		% Nothing appropriate
		ifelse
	    } ifelse
	} ifelse
    def

    %
    % Initialise the coordinate system (square = unity)
    %
    realsize boardsize div 2.54 div 72 mul dup scale

    %
    % Get and load the caption font
    %
    % /Times-Roman findfont .5 scalefont setfont

    % .5 axis {1}{0} ifelse add dup translate
    % axis {1}{0} ifelse dup translate

    %
    % Initialise clipping to whole board, and region to NIL
    %
    /llbdx 0 def/llbdy llbdx boardsize 1 sub add def
    /urbdy 0 def/urbdx urbdy boardsize 1 sub add def
    /llrgx 0 def
    /urrgx 0 def
    /llrgy 0 def
    /urrgy 0 def

    %
    % Clean the current path
    %
    newpath
} bind def

%  #]boardinit: 
%  #[cache:
%	 #[cacheinit:

/cacheinit {
    %
    % For the stone cache
    %
    cache {
	/stonecache boardsize dup mul array def
	0 1 boardsize dup mul 1 sub {
	    stonecache exch EMPTY put
	} for
    } if
} bind def

%	 #]cacheinit: 
%	 #[cachedump:

/cachedump {
    0 1 360 {
	dup stonecache exch get
	dup EMPTY eq {
	    pop pop
	}{
	    BLACK eq {
		dup
		boardsize  mod boardsize 2 idiv sub exch
		boardsize idiv boardsize 2 idiv sub bs
	    }{
		dup
		boardsize  mod boardsize 2 idiv sub exch
		boardsize idiv boardsize 2 idiv sub ws
	    } ifelse
	} ifelse    
    } for
} bind def

%	 #]cachedump: 
%	 #[cachedelete:

/cachedelete {
    /y exch def
    /x exch def
    stonecache
	x boardsize 2 idiv add
	y boardsize 2 idiv add boardsize mul add
	EMPTY
    put
} bind def

%	 #]cachedelete: 
%	 #[cd:

/cd {
    %
    % Delete an entry from the cache (stone has been hit)
    % x y cd
    %
    cache { cachedelete }{ pop pop } ifelse
} bind def

%	 #]cd: 
%  #]cache: 
%  #[caption:

/caption {
    gsave
	0 -1 translate
	0 0 moveto show
    grestore
} bind def

%  #]caption: 
%  #[transboard:

/row  0 def
/col  0 def
/rmax 3 def	% 3 rows	(based on h = 146 diagrams)
/cmax 2 def	% 2 columns	(based on w = 146 diagrams)
/lm   2 def	% Left margin

/init {
    lm lm translate
    0 boardsize 2 add rmax 1 sub mul translate
} bind def

true {
    /transboard { 0 0 translate } bind def
}{
    /transboard {
	col boardsize 2 add mul neg
	row boardsize 2 add mul translate
	row rmax 1 sub lt { /row row 1 add def }{
	    /row 0 def
	    col cmax 1 sub lt { /col col 1 add def }{
		showpage restore save
	    } ifelse
	} ifelse
	col boardsize 2 add mul
	row boardsize 2 add mul neg translate
    } bind def
} ifelse

%  #]transboard: 
%  #[board:
%	 #[hoshidump:

/hoshidump {
    gsave
    boardsize 2 idiv dup translate
    0 setgray
    newpath	    0                   0               hR 0 360 arc fill
    newpath	    hoshipos            hoshipos        hR 0 360 arc fill
    newpath	    hoshipos            hoshipos neg    hR 0 360 arc fill
    newpath	    hoshipos neg        hoshipos        hR 0 360 arc fill
    newpath	    hoshipos neg        hoshipos neg    hR 0 360 arc fill
    boardsize 19 eq {
	newpath	        0               hoshipos        hR 0 360 arc fill
	newpath	        hoshipos        0               hR 0 360 arc fill
	newpath	        0               hoshipos neg    hR 0 360 arc fill
	newpath	        hoshipos neg    0               hR 0 360 arc fill
    } if
    grestore
} bind def

%	 #]hoshidump: 
%	 #[coordump:

/X-AXIS [
    (A)(B)(C)(D)(E)(F)(G)(H)(J)(K)(L)(M)(N)(O)(P)(Q)(R)(S)(T)
] def
/Y-AXIS [
    (01)(02)(03)(04)(05)(06)(07)(08)(09)(10)(11)(12)(13)(14)(15)(16)(17)(18)(19)
] def

/coordump {
    %
    % Surround the board with coordinates
    %
    fF
    newpath
    0 bdh moveto	% upper edge
    1 1 boardsize {
	1 sub X-AXIS exch get
	gsave currentpoint translate centerstrn grestore
	1 0 rmoveto
    } for
    newpath
    0 -1 moveto		% lower edge
    1 1 boardsize {
	1 sub X-AXIS exch get
	gsave currentpoint translate centerstrn grestore
	1 0 rmoveto
    } for
    newpath
    -1 0 moveto		% left edge
    1 1 boardsize {
	1 sub Y-AXIS exch get
	gsave currentpoint translate centerstrn grestore
	0 1 rmoveto
    } for
    newpath
    bdw 0 moveto	% right edge
    1 1 boardsize {
	1 sub Y-AXIS exch get
	gsave currentpoint translate centerstrn grestore
	0 1 rmoveto
    } for
    newpath
} bind def

%  #]coordump: 
%	 #[board:

/board {
    transboard					% Translate into position

    %
    % Clip region
    %
    % Example 1: Bottom slice
    % /bdx  0 def	% SGF coordinates (topdown, leftright)
    % /bdy  8 def	% SGF coordinates (topdown, leftright)
    % /bdw 19 def
    % /bdh 11 def
    %
    % Example 2: Top slice
    % /bdx  0 def
    % /bdy  0 def
    % /bdw 19 def
    % /bdh 10 def
    %
    /psclipx bdx def
    /psclipy boardsize bdy bdh add sub def
    /psclipw bdw def
    /pscliph bdh def

    axis {
	%
	% Add space for the coordinates
	%
	/psclipw psclipw 2 add def	% left/right side
	/pscliph pscliph 2 add def	% top/bottom side
    } if

    newpath
	0           0        moveto
	psclipw     0       rlineto
	0           pscliph rlineto
	psclipw neg 0       rlineto
    closepath
    gsave 1 setgray fill grestore clip
    newpath
    %
    % Translate to relative origin
    %
    psclipx .5 sub neg
    psclipy .5 sub neg translate

    axis {1}{0} ifelse dup translate

    %
    % Region
    %
    gsave
	llrgx urrgx ne llrgy urrgy ne or {
	    newpath
	    llrgx .5 sub llrgy .5 add moveto
	    llrgx .5 sub urrgy .5 sub lineto
	    urrgx .5 add urrgy .5 sub lineto
	    urrgx .5 add llrgy .5 add lineto
	    closepath
	    .75 setgray
	    % 255 255 div
	    % 175 255 div
	    % 125 255 div setrgbcolor
	    gsave gW setlinewidth stroke grestore fill
	    newpath
	} if
    grestore

    %
    % Horizontals
    %
    newpath
    1 1 boardsize 2 sub {
	0 exch snap moveto
	boardsize 1 sub 0 rlineto
    } for
    %
    % Verticals
    %
    1 1 boardsize 2 sub {
	0 snap moveto
	0 boardsize 1 sub rlineto
    } for
    gW setlinewidth stroke

    %
    % Borders
    %
    newpath
    0			0			moveto
    0			boardsize 1 sub		rlineto
    boardsize 1 sub	0			rlineto
    0			boardsize 1 sub neg	rlineto
    closepath
    bW setlinewidth stroke

    hoshidump					% Print the hoshi points
    cache { cachedump } if			% Print the cache contents
    axis  { coordump  } if			% Print the coordinates
    % grestore
} bind def

%	 #]board: 
%  #]board: 
%  #[stones:
%	 #[wst:

/wst {
    %
    % Numbered white stone
    %
    % [[s0 K0][...][sn Kn]] ox w x y wst --> --
    %
    %	x,y 	[0..boardsize-1]
    %	ox,w	[1/1000 unit]
    %
    gsave
	/y  exch def
	/x  exch def
	/h  wH   yP mul 1000 div def
	/w  exch yP mul 1000 div def
	/oy wB   yP mul 1000 div def
	/ox exch yP mul 1000 div def
	cache {
	    stonecache
		x boardsize 2 idiv add
		y boardsize 2 idiv add boardsize mul add
		WHITE
	    put
	} if
	x y translate
	0 0 ws
	0 setgray wF

	w xP gt { xP w div }{1} ifelse
	h yP gt { yP h div }{1} ifelse scale
	w 2 div ox add neg
	h 2 div oy add neg translate
	0 0 moveto
	1 1 counttomark 2 sub 2 idiv { pop neg yP mul 1000 div 0 rmoveto show } for
	pop % "mark" itself
    grestore
} bind def

%	 #]wst: 
%	 #[bst:

/bst {
    %
    % Numbered black stone
    %
    % [[s0 K0][...][sn Kn]] ox w x y bst --> --
    %
    %	x,y 	[0..boardsize-1]
    %	ox,w	[1/1000 unit]
    %
    %
    gsave
	/y  exch def
	/x  exch def
	/h  bH   yP mul 1000 div def
	/w  exch yP mul 1000 div def
	/oy bB   yP mul 1000 div def
	/ox exch yP mul 1000 div def
	cache {
	    stonecache
		x boardsize 2 idiv add
		y boardsize 2 idiv add boardsize mul add
		BLACK
	    put
	} if
	x y translate
	0 0 bs
	1 setgray bF

	w xP gt { xP w div }{1} ifelse
	h yP gt { yP h div }{1} ifelse scale
	w 2 div ox add neg
	h 2 div oy add neg translate
	0 0 moveto
	1 1 counttomark 2 sub 2 idiv { pop neg yP mul 1000 div 0 rmoveto show } for
	pop % "mark" itself
    grestore
} bind def

%	 #]bst: 
%	 #[ws:

/ws {
    %
    % x y ws --> --
    %
    % Unnumbered white stone
    %
    newpath
    wR 0 360 arc
    gsave
	1 setgray fill
    grestore
    wW setlinewidth
    0 setgray stroke
} bind def

%	 #]ws: 
%	 #[bs:

/bs {
    %
    % x y ws --> --
    %
    % Unnumbered black stone
    %
    newpath
    bR 0 360 arc
    0 setgray fill
} bind def

%	 #]bs: 
%  #]stones: 
%  #[stone signs:
%	 #[ps:

/ps {
    %
    % color x y ps --> --
    %
    % Plus sign in "color" stone
    %
    gsave
	/ycoor exch def
	/xcoor exch def
	/color exch def
	xcoor ycoor color 0 eq { ws } { bs } ifelse
	newpath
	    xcoor ycoor translate
	    .06 setlinewidth
	    color setgray
	    -.2 0  moveto
	     .2 0  lineto
	    0  -.2 moveto
	    0   .2 lineto
	stroke
    grestore
} bind def

%	 #]ps: 
%	 #[ms:

/ms {
    %
    % color x y ms --> --
    %
    % Minus sign in "color" stone
    %
    gsave
	/ycoor exch def
	/xcoor exch def
	/color exch def
	xcoor ycoor color 0 eq { ws } { bs } ifelse
	newpath
	    xcoor ycoor translate
	    .06 setlinewidth
	    color setgray
	    -.2 0 moveto
	     .2 0 lineto
	stroke
    grestore
} bind def

%	 #]ms: 
%	 #[square_e:

/square_e {
    %
    % color x y square_e --> --
    %
    % Empty square in "color" stone
    %
    gsave
	/ycoor exch def
	/xcoor exch def
	/color exch def
	xcoor ycoor color 0 eq { ws } { bs } ifelse
	newpath
	    xcoor ycoor translate
	    .04 setlinewidth
	    color setgray
	    -.2353   -.2353   moveto
	    -.2353    .2353   lineto
	     .2353    .2353   lineto
	     .2353   -.2353   lineto
	closepath
	stroke
    grestore
} bind def

%	 #]square_e: 
%	 #[square_f:

/square_f {
    %
    % color x y square_f --> --
    %
    % Filled square in "color" stone
    %
    gsave
	/ycoor exch def
	/xcoor exch def
	/color exch def
	xcoor ycoor color 0 eq { ws } { bs } ifelse
	newpath
	    xcoor ycoor translate
	    .04 setlinewidth
	    color setgray
	    -.2353   -.2353   moveto
	    -.2353    .2353   lineto
	     .2353    .2353   lineto
	     .2353   -.2353   lineto
	closepath
	fill
    grestore
} bind def

%	 #]square_f: 
%	 #[triang_e:

/triang_e {
    %
    % color x y triang_e --> --
    %
    % Empty triangle in "color" stone
    %
    gsave
	/ycoor exch def
	/xcoor exch def
	/color exch def
	xcoor ycoor color 0 eq { ws } { bs } ifelse
	newpath
	    xcoor ycoor translate
	    .04 setlinewidth
	    color setgray
	    -.2353   -.175   moveto
	     .4706   0       rlineto
	    -.2353    .500   rlineto
	closepath
	stroke
    grestore
} bind def

%	 #]triang_e: 
%	 #[triang_f:

/triang_f {
    %
    % color x y triang_f --> --
    %
    % Filled triangle in "color" stone
    %
    gsave
	/ycoor exch def
	/xcoor exch def
	/color exch def
	xcoor ycoor color 0 eq { ws } { bs } ifelse
	newpath
	    xcoor ycoor translate
	    .04 setlinewidth
	    color setgray
	    -.2353   -.175   moveto
	     .4706   0       rlineto
	    -.2353    .500   rlineto
	closepath
	fill
    grestore
} bind def

%	 #]triang_f: 
%	 #[shade:

/shade {
    %
    % color x y shade --> --
    %
    % Give the board some color at (x,y)
    %
    gsave
	translate		% To x y
	newpath
	    -.5 -.5 moveto
	    0 1 rlineto
	    1 0 rlineto
	    0 -1 rlineto
	closepath
	100 div setgray fill		% with color

	%
	% Restore grid
	%
	gW setlinewidth
	newpath -.5 0 moveto 1 0 rlineto stroke
	newpath 0 -.5 moveto 0 1 rlineto stroke
    grestore
} bind def

%	 #]shade: 
%	 #[bterr:

/bterr {
    %
    % x y bterr --> --
    %
    % Black territory indicator
    %
    gsave
	false {
	    %
	    % white stone filled 60% black
	    %
	    wR 0 360 arc
	    gsave
		.40 setgray fill
	    grestore
	    wW setlinewidth
	    0 setgray stroke
	}{
	    false {
		%
		% The character 'b'
		%
		gsave
		    2 copy wR 3 mul 4 div 0 360 arc 1 setgray fill
		grestore
		translate fF (b) centerstrn
	    }{
		%
		% A small black square
		%
		translate
		newpath
		    -.4 -.4  moveto
		    0.8 0   rlineto
		    0   0.8 rlineto
		    -.8 0   rlineto
		closepath
		gsave .25 setgray fill grestore stroke
	    } ifelse
	} ifelse
    grestore
} bind def

%	 #]bterr: 
%	 #[wterr:

/wterr {
    %
    % x y wterr --> --
    %
    % White territory indicator
    %
    gsave
	false {
	    %
	    % White stone filled 10% black
	    %
	    wR 0 360 arc
	    gsave
		.90 setgray fill
	    grestore
	    wW setlinewidth
	    0 setgray stroke
	}{
	    false {
		%
		% The character 'w'
		%
		gsave
		    2 copy wR 3 mul 4 div 0 360 arc 1 setgray fill
		grestore
		translate fF (w) centerstrn
	    }{
		%
		% A small white square
		%
		translate
		newpath
		    -.4 -.4  moveto
		    0.8 0   rlineto
		    0   0.8 rlineto
		    -.8 0   rlineto
		closepath
		gsave .75 setgray fill grestore stroke
	    } ifelse
	} ifelse
    grestore
} bind def

%	 #]wterr: 
%      #[bt:
/bt {
    %
    % x y bt --> --
    %
    % black mark
    %
    newpath
    bM 0 360 arc
    0 setgray fill
} bind def

%      #]bt:
%	 #[wt:

/wt {
    %
    % x y wt --> --
    %
    % White mark
    %
    newpath
    wM 0 360 arc
    gsave
	1 setgray fill
    grestore
    wW setlinewidth
    0 setgray stroke
} bind def

%	 #]wt: 
%      #[btd:
/btd {
    %
    % x y btd --> --
    %
    % Double black mark
    %
    gsave
    translate
    newpath 
    -0.2 0 bM 0 360 arc
    0 setgray fill
    0.2 0 bM 0 360 arc
    0 setgray fill
    grestore
} bind def

%      #]btd:
%      #[wtd:
/wtd {
    %
    % x y wtd --> --
    %
    % Double white mark
    %
    gsave
    translate
    newpath 
    -0.2 0 bM 0 360 arc
    gsave
	1 setgray fill
    grestore
    wW setlinewidth
    0 setgray stroke
    0.2 0 bM 0 360 arc
    gsave
	1 setgray fill
    grestore
    wW setlinewidth
    0 setgray stroke
    grestore
} bind def

%      #]wtd:
%      #[btde:
/btde {
    %
    % x y btde --> --
    %
    % Double black mark minus 1/8
    %
    gsave
    translate
    newpath 
    -0.2 0 bM 0 360 arc
    0 setgray fill
    gsave
    newpath 0.2 0 moveto
    0.2 0 bM 135 90 arc
    closepath
    0 setgray fill
    grestore
    grestore
} bind def

%      #]btde:
%      #[wtde:
/wtde {
    %
    % x y wtde --> --
    %
    % Double white mark minus 1/8
    %
    gsave
    translate
    newpath 
    -0.2 0 bM 0 360 arc
    gsave
	1 setgray fill
    grestore
    wW setlinewidth
    0 setgray stroke
    gsave
    newpath 0.2 0 moveto
    0.2 0 bM 135 90 arc
    closepath
    gsave
	1 setgray fill
    grestore
    wW setlinewidth
    0 setgray stroke
    grestore
    grestore
} bind def

%      #]wtde:
%      #[bth:
/bth {
    %
    % x y bt --> --
    %
    % Half black mark
    %
    newpath
    bM 270 90 arc
    0 setgray fill
} bind def

%      #]bth:
%	 #[wth:

/wth {
    %
    % x y wth --> --
    %
    % Half white mark
    %
    newpath 
    wM 270 90 arc
    closepath
    gsave
	1 setgray fill
    grestore
    wW setlinewidth
    0 setgray stroke
} bind def

%	 #]wth: 
%      #[btt:
/btt {
    %
    % x y bt --> --
    %
    % One third black mark
    %
    gsave
    translate
    newpath 0 0 moveto
    0 0 bM 330 90 arc
    closepath
    0 setgray fill
    grestore
} bind def

%      #]btt:
%	 #[wtt:

/wtt {
    %
    % x y wtt --> --
    %
    % One third white mark
    %
    gsave
    translate
    newpath 0 0 moveto
    0 0 wM 330 90 arc
    closepath
    gsave
    1 setgray fill
    grestore
    wW setlinewidth
    0 setgray stroke
    grestore
} bind def

%	 #]wtt
%      #[bt2t:
/bt2t {
    %
    % x y bt --> --
    %
    % One third black mark
    %
    gsave
    translate
    newpath 0 0 moveto
    0 0 bM 210 90 arc
    closepath
    0 setgray fill
    grestore
} bind def

%      #]bt2t:
%	 #[wt2t:

/wt2t {
    %
    % x y wt2t --> --
    %
    % Two thirds white mark
    %
    gsave
    translate
    newpath 0 0 moveto
    0 0 wM 210 90 arc
    closepath
    gsave
    1 setgray fill
    grestore
    wW setlinewidth
    0 setgray stroke
    grestore
} bind def

%	 #]wt2t
%      #[bte:
/bte {
    %
    % x y bte --> --
    %
    % One eighth black mark
    %
    gsave
    translate
    newpath 0 0 moveto
    0 0 bM 45 90 arc
    closepath
    0 setgray fill
    grestore
} bind def

%      #]bte:
%	 #[wte:

/wte {
    %
    % x y wte --> --
    %
    % One eighth white mark
    %
    gsave
    translate
    newpath 0 0 moveto
    0 0 wM 45 90 arc
    closepath
    gsave
    1 setgray fill
    grestore
    wW setlinewidth
    0 setgray stroke
    grestore
} bind def

%	 #]wte
%	 #[clrpt:

/clrpt {
    %
    % x y clrpt --> --
    %
    % Make space for black mark
    %
    newpath
    wR 2 div 0 360 arc
    gsave
	1 setgray fill
    grestore
} bind def

%	 #]clrpt: 
%	 #[metamark:

/metamark {
    %
    % color x y (string) metamark --> --
    %
    % Arbitrairy mark in "color" stone
    %
    gsave
	/marker exch def
	/ycoor  exch def
	/xcoor  exch def
	/color  exch def
	xcoor ycoor color 0 eq { ws } { bs } ifelse
	xcoor ycoor translate
	mF
	marker stringwidth pop 2 div neg 0 translate
	color 1 eq { 1 setgray } if
	0 0 moveto marker show
    grestore
} bind def

%	 #]metamark: 
%  #]stone signs: 
%  #[field signs:
%	 #[fs:

/fs {
    %
    % string x y fs --> --
    %
    % Grid point indicator
    %
    gsave
	newpath
	    translate
	    0 0 wR 0 360 arc
	    1 setgray
	    fill
	0 setgray fF centerstrn
    grestore
} bind def

%	 #]fs: 
%	 #[arrow:

/arrow {
    %
    % angle x y arrow --> --
    %
    % Put an arrow from (x,y) in direction determined by angle
    %
    gsave
	translate
	0.5 setgray 0 0 hR 0 360 arc fill
	rotate
	newpath
	     0.0   0.25  moveto
	    -0.1   0.25  lineto
	     0.0   0.48  lineto
	     0.1   0.25  lineto
	closepath 0.5 setgray
	gsave stroke grestore
	fill
    grestore
} bind def

%	 #]arrow: 
%	 #[nl:

/nl {
    %
    % string x y nl --> --
    %
    % Numbered liberty --- Put Number next to a marked grid point
    %
    gsave
	translate
	newpath
	     0.0  -0.25  moveto
	    -0.25  0.0   lineto
	     0.0   0.25  lineto
	     0.25  0.0   lineto
	closepath 0.5 setgray fill
	.3 .3 translate
	.6 dup scale
	0 setgray fF centerstrn
    grestore
} bind def

%	 #]nl: 
%	 #[no:

/no {
    %
    % string x y no --> --
    %
    % Put Number next to grid point
    %
    gsave
	translate
	% 0.5 setgray 0 0 hR 0 360 arc fill
	.3 .3 translate
	.6 dup scale
	0 setgray fF centerstrn
    grestore
} bind def

%	 #]no: 
%	 #[ds:

/ds {
    %
    % string x y ds --> --
    %
    % Destructive Grid point indicator
    %
    gsave
	translate
	0 setgray fF centerstrn
    grestore
} bind def

%	 #]ds: 
%  #]field signs: 

end

Liberty begin
/cache false def
/axis  true def
19 10.20 boardinit
/bdx  0 def
/bdy  0 def
/bdw 19 def
/bdh 19 def
/rgx  0 def
/rgy  0 def
/rgw 19 def
/rgh 19 def
board
1 18 bs
2 18 bt
3 18 bt
4 18 bt
5 18 bs
6 18 bs
7 18 ws
8 18 wt
9 18 wt
10 18 wt
13 18 clrpt
13 18 btt
17 18 wt
18 18 wt
0 17 ws
1 17 bs
2 17 bt
3 17 bs
4 17 bt
5 17 bs
6 17 ws
7 17 ws
8 17 ws
9 17 ws
(3.42) 11 17 fs
14 17 bs
15 17 ws
17 17 wt
18 17 wt
0 16 ws
1 16 bs
2 16 bs
3 16 bs
4 16 bs
5 16 ws
6 16 wt
7 16 ws
8 16 bs
12 16 bs
13 16 bs
14 16 ws
15 16 ws
16 16 wt
17 16 wt
18 16 wt
1 15 ws
2 15 ws
3 15 ws
4 15 ws
5 15 ws
6 15 ws
7 15 ws
9 15 bs
10 15 bs
11 15 ws
11 15 btde
12 15 bs
13 15 bt
14 15 bs
15 15 ws
16 15 wt
17 15 wt
18 15 wt
(1.08) 1 14 fs
6 14 bs
8 14 bs
9 14 bs
10 14 ws
11 14 bs
12 14 bs
13 14 bs
14 14 bs
15 14 ws
16 14 wt
17 14 bs
17 14 wtd
18 14 wt
2 13 bs
4 13 bs
5 13 bs
6 13 bs
8 13 bs
9 13 ws
10 13 ws
11 13 bs
12 13 bt
13 13 bs
15 13 ws
16 13 ws
17 13 ws
18 13 wt
0 12 clrpt
0 12 bth
1 12 bs
4 12 bs
5 12 ws
8 12 ws
9 12 bs
9 12 wtd
10 12 ws
11 12 ws
12 12 bs
13 12 bs
14 12 ws
15 12 ws
16 12 bs
16 12 wtd
17 12 bs
17 12 wtd
18 12 wt
1 11 bs
2 11 ws
3 11 ws
4 11 bs
5 11 ws
6 11 bs
8 11 ws
10 11 ws
11 11 ws
12 11 bs
13 11 bs
14 11 bs
15 11 ws
16 11 bs
16 11 wtd
17 11 ws
18 11 wt
1 10 ws
2 10 ws
3 10 bs
3 10 wtd
4 10 ws
5 10 ws
7 10 bs
8 10 bs
9 10 ws
10 10 ws
11 10 bs
12 10 bs
13 10 bs
14 10 ws
15 10 ws
16 10 bs
16 10 wtd
17 10 ws
18 10 wt
1 9 bs
1 9 wt
2 9 ws
3 9 bs
3 9 wtd
4 9 wt
5 9 ws
7 9 bs
8 9 ws
9 9 ws
10 9 bs
11 9 bs
12 9 ws
12 9 btt
13 9 bs
14 9 bs
15 9 bs
16 9 ws
17 9 ws
18 9 clrpt
18 9 wte
0 8 wt
1 8 ws
2 8 bs
2 8 wtd
3 8 bs
3 8 wtd
4 8 wt
5 8 ws
6 8 bs
7 8 bs
8 8 bs
9 8 ws
10 8 ws
11 8 ws
13 8 ws
14 8 bs
15 8 ws
16 8 ws
(3.5) 17 8 fs
0 7 wt
1 7 ws
2 7 ws
3 7 ws
5 7 ws
6 7 ws
7 7 ws
8 7 bs
9 7 bs
10 7 ws
11 7 ws
12 7 ws
13 7 ws
14 7 ws
15 7 bs
16 7 bs
17 7 bs
1 6 bs
(3) 2 6 fs
4 6 ws
5 6 bs
(1.08) 8 6 fs
10 6 bs
11 6 bs
12 6 ws
14 6 bs
15 6 bs
18 6 clrpt
18 6 btt
0 5 wt
1 5 ws
2 5 bs
3 5 bs
5 5 bs
6 5 ws
7 5 ws
8 5 bs
10 5 bs
11 5 ws
12 5 ws
14 5 bs
15 5 ws
15 5 btd
16 5 ws
16 5 btd
17 5 bs
18 5 bs
0 4 wt
1 4 ws
2 4 ws
3 4 bs
6 4 bs
7 4 bs
8 4 bt
10 4 bs
11 4 ws
12 4 ws
13 4 ws
14 4 ws
15 4 bs
16 4 ws
16 4 btd
17 4 ws
17 4 btd
18 4 bt
0 3 wt
1 3 wt
2 3 ws
3 3 ws
(~5) 4 3 fs
5 3 bs
6 3 bt
7 3 bt
8 3 bs
(1) 9 3 fs
10 3 ws
11 3 ws
12 3 bs
(1) 13 3 fs
14 3 bs
15 3 bs
16 3 bs
17 3 ws
17 3 btd
18 3 bt
0 2 wt
1 2 wt
2 2 bs
2 2 wtd
3 2 wt
4 2 ws
5 2 ws
6 2 bs
8 2 bs
9 2 ws
10 2 wt
11 2 ws
12 2 bs
14 2 bt
15 2 bs
16 2 bs
17 2 bs
18 2 ws
18 2 btd
0 1 wt
1 1 wt
2 1 wt
3 1 wt
4 1 ws
6 1 ws
6 1 bt2t
7 1 bs
8 1 ws
9 1 ws
10 1 ws
11 1 wt
12 1 ws
13 1 bs
14 1 bs
15 1 bt
16 1 bs
17 1 ws
17 1 btd
18 1 bt
0 0 wt
1 0 wt
2 0 wt
3 0 wt
5 0 ws
6 0 bs
7 0 bs
8 0 bs
10 0 wt
11 0 ws
13 0 ws
(1) 14 0 fs
15 0 bt
16 0 bt
17 0 bt
18 0 bt
end
%%Trailer
userdict /end-hook known{end-hook}if
%%EOF

%%EndDocument
 @endspecial 2718 6625 a Ff(Figure)56 b(10.)78 b Fe(T)-14
b(errito)-5 b(ries)54 b(and)g(T)-14 b(emp)5 b(eratures.)1070
6989 y Fm(If)62 b(White)g(pla)-5 b(ys)62 b(at)g(E04,)f(she)h(threatens)
g(to)f(cut)h(o\013)f(the)h(area)f(just)h(ab)5 b(o)-5
b(v)g(e)60 b(that)i(w)-5 b(est)63 b(of)1070 7218 y(the)j(E)g(co)5
b(ordinate,)68 b(whic)-5 b(h)66 b(is)h(fairly)g(large.)101
b(That)66 b(threat)g(is)i(w)-5 b(orth)66 b(6)g(p)5 b(oin)-5
b(ts)66 b(or)g(so.)101 b(If)1070 7446 y(Blac)-5 b(k)57
b(pla)-5 b(ys)57 b(there,)f(he)g(threatens)h(to)f(cut)h(at)f(D03.)77
b(This)57 b(cut)f(do)5 b(es)56 b(not)h(win)f(the)h(cut)f(o\013)1070
7675 y(stones,)68 b(but)e(it)h(allo)-5 b(ws)68 b(a)e(sizable)i
(incursion)e(in)-5 b(to)67 b(the)f(corner.)100 b(The)66
b(cut)g(is)h(also)g(hotter)1070 7903 y(than)58 b(4)g(p)5
b(oin)-5 b(ts.)79 b(The)58 b(next)h(hottest)g(pla)-5
b(y)-15 b(,)59 b(w)-5 b(orth)59 b(3)4604 7834 y Fk(1)p
4604 7863 71 8 v 4604 7964 a(2)4753 7903 y Fm(p)5 b(oin)-5
b(ts,)59 b(is)h(in)f(the)g(East.)78 b(The)58 b(next)1070
8132 y(hottest)51 b(pla)-5 b(y)-15 b(,)53 b(a)e(White)g(sen)-5
b(te)51 b(in)g(the)g(North,)h(is)g(w)-5 b(orth)50 b(3)5023
8062 y Fk(5)p 4988 8091 141 8 v 4988 8192 a(12)5149 8132
y Fm(.)75 b(Then)50 b(Blac)-5 b(k)52 b(has)f(a)f(3)h(p)5
b(oin)-5 b(t)1070 8360 y(sen)g(te)65 b(at)f(C07)h(in)f(the)h(South)-5
b(w)g(est.)95 b(Next)65 b(there)f(are)g(2)h(pla)-5 b(ys)65
b(w)-5 b(orth)64 b(1)6006 8291 y Fk(1)p 5971 8320 V 5971
8421 a(12)6196 8360 y Fm(p)5 b(oin)-5 b(ts)65 b(in)g(the)1070
8588 y(North)-5 b(w)g(est)64 b(and)f(Cen)-5 b(ter,)66
b(whic)-5 b(h)64 b(are)g(related.)95 b(Finally)66 b(there)e(are)g(some)
g(1)g(p)5 b(oin)-5 b(t)65 b(pla)-5 b(ys)1070 8817 y(in)59
b(the)f(South.)3411 9318 y Fl(Ortho)6 b(do)-6 b(x)74
b(Pla)-6 b(y)1281 9679 y Fm(No)h(w)80 b(let's)i(tak)-5
b(e)81 b(a)f(lo)5 b(ok)81 b(at)g(what)f(w)-5 b(e)81 b(b)5
b(eliev)-5 b(e)82 b(to)e(b)5 b(e)80 b(ortho)5 b(do)-5
b(x)80 b(pla)-5 b(y)-15 b(.)144 b(There)80 b(are)1070
9908 y(sev)-5 b(eral)50 b(ortho)5 b(do)-5 b(x)47 b(v)-10
b(ariations)51 b(whic)-5 b(h)49 b(all)h(pro)5 b(duce)48
b(the)h(same)g(result:)75 b(White)49 b(wins)h(b)-5 b(y)48
b(2)7094 9839 y Fk(1)p 7094 9868 71 8 v 7094 9969 a(2)1070
10136 y Fm(p)5 b(oin)-5 b(ts.)81 b(White)60 b(actually)h(lost)g(the)e
(game)h(b)-5 b(y)4235 10067 y Fk(1)p 4235 10096 V 4235
10197 a(2)4386 10136 y Fm(p)5 b(oin)-5 b(t.)81 b(Considering)60
b(that)g(the)f(am)-5 b(bien)g(t)1070 10365 y(temp)5 b(erature)68
b(w)-5 b(as)68 b(only)g(4,)h(White)g(to)5 b(ok)67 b(a)h(sizable)h(loss)
g(of)f(3)f(p)5 b(oin)-5 b(ts)69 b(v)-5 b(ersus)67 b(ortho)5
b(do)-5 b(x)1070 10593 y(pla)g(y)-15 b(.)p eop
%%Page: 96 9
96 8 bop 1070 577 a Fg(96)2140 b(WILLIAM)65 b(L.)g(SPIGHT)1012
5733 y @beginspecial 0 @llx 0 @lly 289.995941 @urx 289.995941
@ury 2783.960693 @rwi 2783.960693 @rhi @setspecial
%%BeginDocument: /u/levy/MSRI/Book42/spight/fig11.ps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: dvipsk 5.58f Copyright 1986, 1994 Radical Eye Software
%%Title: 589718.dvi
%%BoundingBox: 0 0 290 290
%  #[info:
%									%
%									%
%	     _								%
%	    / \\  /'\\ -_-_  ,._-_  /'\\     _-_  -_-_	 _-_,		%
%	   || || || || || \\  ||   || ||    || \\ || \\ ||_.		%
%	   || || || || || ||  ||   || ||    ||/	  || ||	 ~ ||		%
%	   \\_-| \\,/  ||-'   \\,  \\,/	 <> \\,/  ||-'	,-_-		%
%	    /  \       |/			  |/			%
%	   '----`      '			  '			%
%									%
%		  Copyright (c) 1993  Jan van der Steen			%
%	       Centre for Mathematics and Computer Science		%
%		       Amsterdam, the Netherlands			%
%									%
%-----------------------------------------------------------------------%
%   You are not allowed to use this software in commercial software.	%
%   You are allowed to use this software in free software under the	%
%   condition that you maintain this integral message in the source.	%
%-----------------------------------------------------------------------%
% File	  : gopro.eps							%
% Purpose : Implement PostScript procedures to draw Go games		%
% Version : 1.28							%
% Modified: 07 Apr 1995 18:10:54					%
% Author  : Jan van der Steen (jansteen@cwi.nl)				%
%  #]info: 

/Liberty 100 dict def
Liberty begin

%  #[init:
%
% Default fonts for various applications
%
/bFont /Helvetica-Bold def	% Black numbers
/wFont /Helvetica      def	% White numbers
/fFont /Helvetica      def	% Grid markers
/mFont /Helvetica      def	% Metamarkers

/bF { bFont findfont yP scalefont setfont } bind def /bB -24 def /bH 752 def
/wF { wFont findfont yP scalefont setfont } bind def /wB -23 def /wH 733 def
/fF { fFont findfont yP scalefont setfont } bind def
/mF { mFont findfont yP scalefont setfont } bind def

%
% Abbreviations
%
/W 0 def			% White color
/B 1 def			% Black color

%
% The following sizes are in square units
%
/gW	.01   def	% Width of grid line
/bW	.10   def	% Width of border line
/wW	.02   def	% Width of a white stone
/bR	.48   def	% Radius of a black stone
/wR	.48   def	% Radius of a white stone
/bM   .16   def   % Radius of a black mark
/wM   .16   def   % Radius of a white mark
/hR	.10   def	% Radius of a hoshi point
/xP	.60   def	% Maximum width  of strings (number,indicator)
/yP	.80   def	% Maximum height of strings (number,indicator)
/axis	true  def	% Do we print coordinates too
/cache	true  def	% Do we use the stone cache

%
% The stone cache
%
cache {
    /EMPTY	 0 def
    /BLACK	-1 def
    /WHITE	-2 def
} if
%  #]init: 
%  #[tools:
%	 #[snap:

/snap {
    %
    % x y snap x" y"
    %
    % Make x and y snap on output device grid
    %
    transform round exch round exch itransform
} bind def

%	 #]snap: 
%	 #[centerstrn:

/centerstrn {
    %
    % string centerstrn --> --
    %
    % Print "string" balanced around (0,0) and make sure
    % it will fit in a "yP" x "yP" bounding box.
    %
    dup stringwidth pop
    %
    % Does stringwidth exceed allowed maximum
    %
    dup yP gt { dup yP exch div 1 scale } if

    %
    % Center the string
    %
    2 div neg yP .20 sub 2 div neg moveto show
} bind def

%	 #]centerstrn: 
%  #]tools: 
%  #[boardinit:

/boardinit {
    %
    % boardsize (9, 13, 19, ...) realsize (in cm) boardinit --> ---
    %
    /realsize  exch def
    /boardsize exch def

    %
    % Initialise the hoshipoints
    %
    /hoshipos
	boardsize 19 eq {6} {
	boardsize 13 eq {3} {
	boardsize  9 eq {2}
			{0}		% Nothing appropriate
		ifelse
	    } ifelse
	} ifelse
    def

    %
    % Initialise the coordinate system (square = unity)
    %
    realsize boardsize div 2.54 div 72 mul dup scale

    %
    % Get and load the caption font
    %
    % /Times-Roman findfont .5 scalefont setfont

    % .5 axis {1}{0} ifelse add dup translate
    % axis {1}{0} ifelse dup translate

    %
    % Initialise clipping to whole board, and region to NIL
    %
    /llbdx 0 def/llbdy llbdx boardsize 1 sub add def
    /urbdy 0 def/urbdx urbdy boardsize 1 sub add def
    /llrgx 0 def
    /urrgx 0 def
    /llrgy 0 def
    /urrgy 0 def

    %
    % Clean the current path
    %
    newpath
} bind def

%  #]boardinit: 
%  #[cache:
%	 #[cacheinit:

/cacheinit {
    %
    % For the stone cache
    %
    cache {
	/stonecache boardsize dup mul array def
	0 1 boardsize dup mul 1 sub {
	    stonecache exch EMPTY put
	} for
    } if
} bind def

%	 #]cacheinit: 
%	 #[cachedump:

/cachedump {
    0 1 360 {
	dup stonecache exch get
	dup EMPTY eq {
	    pop pop
	}{
	    BLACK eq {
		dup
		boardsize  mod boardsize 2 idiv sub exch
		boardsize idiv boardsize 2 idiv sub bs
	    }{
		dup
		boardsize  mod boardsize 2 idiv sub exch
		boardsize idiv boardsize 2 idiv sub ws
	    } ifelse
	} ifelse    
    } for
} bind def

%	 #]cachedump: 
%	 #[cachedelete:

/cachedelete {
    /y exch def
    /x exch def
    stonecache
	x boardsize 2 idiv add
	y boardsize 2 idiv add boardsize mul add
	EMPTY
    put
} bind def

%	 #]cachedelete: 
%	 #[cd:

/cd {
    %
    % Delete an entry from the cache (stone has been hit)
    % x y cd
    %
    cache { cachedelete }{ pop pop } ifelse
} bind def

%	 #]cd: 
%  #]cache: 
%  #[caption:

/caption {
    gsave
	0 -1 translate
	0 0 moveto show
    grestore
} bind def

%  #]caption: 
%  #[transboard:

/row  0 def
/col  0 def
/rmax 3 def	% 3 rows	(based on h = 146 diagrams)
/cmax 2 def	% 2 columns	(based on w = 146 diagrams)
/lm   2 def	% Left margin

/init {
    lm lm translate
    0 boardsize 2 add rmax 1 sub mul translate
} bind def

true {
    /transboard { 0 0 translate } bind def
}{
    /transboard {
	col boardsize 2 add mul neg
	row boardsize 2 add mul translate
	row rmax 1 sub lt { /row row 1 add def }{
	    /row 0 def
	    col cmax 1 sub lt { /col col 1 add def }{
		showpage restore save
	    } ifelse
	} ifelse
	col boardsize 2 add mul
	row boardsize 2 add mul neg translate
    } bind def
} ifelse

%  #]transboard: 
%  #[board:
%	 #[hoshidump:

/hoshidump {
    gsave
    boardsize 2 idiv dup translate
    0 setgray
    newpath	    0                   0               hR 0 360 arc fill
    newpath	    hoshipos            hoshipos        hR 0 360 arc fill
    newpath	    hoshipos            hoshipos neg    hR 0 360 arc fill
    newpath	    hoshipos neg        hoshipos        hR 0 360 arc fill
    newpath	    hoshipos neg        hoshipos neg    hR 0 360 arc fill
    boardsize 19 eq {
	newpath	        0               hoshipos        hR 0 360 arc fill
	newpath	        hoshipos        0               hR 0 360 arc fill
	newpath	        0               hoshipos neg    hR 0 360 arc fill
	newpath	        hoshipos neg    0               hR 0 360 arc fill
    } if
    grestore
} bind def

%	 #]hoshidump: 
%	 #[coordump:

/X-AXIS [
    (A)(B)(C)(D)(E)(F)(G)(H)(J)(K)(L)(M)(N)(O)(P)(Q)(R)(S)(T)
] def
/Y-AXIS [
    (1)(2)(3)(4)(5)(6)(7)(8)(9)(10)(11)(12)(13)(14)(15)(16)(17)(18)(19)
] def

/coordump {
    %
    % Surround the board with coordinates
    %
    fF
    newpath
    0 bdh moveto	% upper edge
    1 1 boardsize {
	1 sub X-AXIS exch get
	gsave currentpoint translate centerstrn grestore
	1 0 rmoveto
    } for
    newpath
    0 -1 moveto		% lower edge
    1 1 boardsize {
	1 sub X-AXIS exch get
	gsave currentpoint translate centerstrn grestore
	1 0 rmoveto
    } for
    newpath
    -1 0 moveto		% left edge
    1 1 boardsize {
	1 sub Y-AXIS exch get
	gsave currentpoint translate centerstrn grestore
	0 1 rmoveto
    } for
    newpath
    bdw 0 moveto	% right edge
    1 1 boardsize {
	1 sub Y-AXIS exch get
	gsave currentpoint translate centerstrn grestore
	0 1 rmoveto
    } for
    newpath
} bind def

%  #]coordump: 
%	 #[board:

/board {
    transboard					% Translate into position

    %
    % Clip region
    %
    % Example 1: Bottom slice
    % /bdx  0 def	% SGF coordinates (topdown, leftright)
    % /bdy  8 def	% SGF coordinates (topdown, leftright)
    % /bdw 19 def
    % /bdh 11 def
    %
    % Example 2: Top slice
    % /bdx  0 def
    % /bdy  0 def
    % /bdw 19 def
    % /bdh 10 def
    %
    /psclipx bdx def
    /psclipy boardsize bdy bdh add sub def
    /psclipw bdw def
    /pscliph bdh def

    axis {
	%
	% Add space for the coordinates
	%
	/psclipw psclipw 2 add def	% left/right side
	/pscliph pscliph 2 add def	% top/bottom side
    } if

    newpath
	0           0        moveto
	psclipw     0       rlineto
	0           pscliph rlineto
	psclipw neg 0       rlineto
    closepath
    gsave 1 setgray fill grestore clip
    newpath
    %
    % Translate to relative origin
    %
    psclipx .5 sub neg
    psclipy .5 sub neg translate

    axis {1}{0} ifelse dup translate

    %
    % Region
    %
    gsave
	llrgx urrgx ne llrgy urrgy ne or {
	    newpath
	    llrgx .5 sub llrgy .5 add moveto
	    llrgx .5 sub urrgy .5 sub lineto
	    urrgx .5 add urrgy .5 sub lineto
	    urrgx .5 add llrgy .5 add lineto
	    closepath
	    .75 setgray
	    % 255 255 div
	    % 175 255 div
	    % 125 255 div setrgbcolor
	    gsave gW setlinewidth stroke grestore fill
	    newpath
	} if
    grestore

    %
    % Horizontals
    %
    newpath
    1 1 boardsize 2 sub {
	0 exch snap moveto
	boardsize 1 sub 0 rlineto
    } for
    %
    % Verticals
    %
    1 1 boardsize 2 sub {
	0 snap moveto
	0 boardsize 1 sub rlineto
    } for
    gW setlinewidth stroke

    %
    % Borders
    %
    newpath
    0			0			moveto
    0			boardsize 1 sub		rlineto
    boardsize 1 sub	0			rlineto
    0			boardsize 1 sub neg	rlineto
    closepath
    bW setlinewidth stroke

    hoshidump					% Print the hoshi points
    cache { cachedump } if			% Print the cache contents
    axis  { coordump  } if			% Print the coordinates
    % grestore
} bind def

%	 #]board: 
%  #]board: 
%  #[stones:
%	 #[wst:

/wst {
    %
    % Numbered white stone
    %
    % [[s0 K0][...][sn Kn]] ox w x y wst --> --
    %
    %	x,y 	[0..boardsize-1]
    %	ox,w	[1/1000 unit]
    %
    gsave
	/y  exch def
	/x  exch def
	/h  wH   yP mul 1000 div def
	/w  exch yP mul 1000 div def
	/oy wB   yP mul 1000 div def
	/ox exch yP mul 1000 div def
	cache {
	    stonecache
		x boardsize 2 idiv add
		y boardsize 2 idiv add boardsize mul add
		WHITE
	    put
	} if
	x y translate
	0 0 ws
	0 setgray wF

	w xP gt { xP w div }{1} ifelse
	h yP gt { yP h div }{1} ifelse scale
	w 2 div ox add neg
	h 2 div oy add neg translate
	0 0 moveto
	1 1 counttomark 2 sub 2 idiv { pop neg yP mul 1000 div 0 rmoveto show } for
	pop % "mark" itself
    grestore
} bind def

%	 #]wst: 
%	 #[bst:

/bst {
    %
    % Numbered black stone
    %
    % [[s0 K0][...][sn Kn]] ox w x y bst --> --
    %
    %	x,y 	[0..boardsize-1]
    %	ox,w	[1/1000 unit]
    %
    %
    gsave
	/y  exch def
	/x  exch def
	/h  bH   yP mul 1000 div def
	/w  exch yP mul 1000 div def
	/oy bB   yP mul 1000 div def
	/ox exch yP mul 1000 div def
	cache {
	    stonecache
		x boardsize 2 idiv add
		y boardsize 2 idiv add boardsize mul add
		BLACK
	    put
	} if
	x y translate
	0 0 bs
	1 setgray bF

	w xP gt { xP w div }{1} ifelse
	h yP gt { yP h div }{1} ifelse scale
	w 2 div ox add neg
	h 2 div oy add neg translate
	0 0 moveto
	1 1 counttomark 2 sub 2 idiv { pop neg yP mul 1000 div 0 rmoveto show } for
	pop % "mark" itself
    grestore
} bind def

%	 #]bst: 
%	 #[ws:

/ws {
    %
    % x y ws --> --
    %
    % Unnumbered white stone
    %
    newpath
    wR 0 360 arc
    gsave
	1 setgray fill
    grestore
    wW setlinewidth
    0 setgray stroke
} bind def

%	 #]ws: 
%	 #[bs:

/bs {
    %
    % x y ws --> --
    %
    % Unnumbered black stone
    %
    newpath
    bR 0 360 arc
    0 setgray fill
} bind def

%	 #]bs: 
%  #]stones: 
%  #[stone signs:
%	 #[ps:

/ps {
    %
    % color x y ps --> --
    %
    % Plus sign in "color" stone
    %
    gsave
	/ycoor exch def
	/xcoor exch def
	/color exch def
	xcoor ycoor color 0 eq { ws } { bs } ifelse
	newpath
	    xcoor ycoor translate
	    .06 setlinewidth
	    color setgray
	    -.2 0  moveto
	     .2 0  lineto
	    0  -.2 moveto
	    0   .2 lineto
	stroke
    grestore
} bind def

%	 #]ps: 
%	 #[ms:

/ms {
    %
    % color x y ms --> --
    %
    % Minus sign in "color" stone
    %
    gsave
	/ycoor exch def
	/xcoor exch def
	/color exch def
	xcoor ycoor color 0 eq { ws } { bs } ifelse
	newpath
	    xcoor ycoor translate
	    .06 setlinewidth
	    color setgray
	    -.2 0 moveto
	     .2 0 lineto
	stroke
    grestore
} bind def

%	 #]ms: 
%	 #[square_e:

/square_e {
    %
    % color x y square_e --> --
    %
    % Empty square in "color" stone
    %
    gsave
	/ycoor exch def
	/xcoor exch def
	/color exch def
	xcoor ycoor color 0 eq { ws } { bs } ifelse
	newpath
	    xcoor ycoor translate
	    .04 setlinewidth
	    color setgray
	    -.2353   -.2353   moveto
	    -.2353    .2353   lineto
	     .2353    .2353   lineto
	     .2353   -.2353   lineto
	closepath
	stroke
    grestore
} bind def

%	 #]square_e: 
%	 #[square_f:

/square_f {
    %
    % color x y square_f --> --
    %
    % Filled square in "color" stone
    %
    gsave
	/ycoor exch def
	/xcoor exch def
	/color exch def
	xcoor ycoor color 0 eq { ws } { bs } ifelse
	newpath
	    xcoor ycoor translate
	    .04 setlinewidth
	    color setgray
	    -.2353   -.2353   moveto
	    -.2353    .2353   lineto
	     .2353    .2353   lineto
	     .2353   -.2353   lineto
	closepath
	fill
    grestore
} bind def

%	 #]square_f: 
%	 #[triang_e:

/triang_e {
    %
    % color x y triang_e --> --
    %
    % Empty triangle in "color" stone
    %
    gsave
	/ycoor exch def
	/xcoor exch def
	/color exch def
	xcoor ycoor color 0 eq { ws } { bs } ifelse
	newpath
	    xcoor ycoor translate
	    .04 setlinewidth
	    color setgray
	    -.2353   -.175   moveto
	     .4706   0       rlineto
	    -.2353    .500   rlineto
	closepath
	stroke
    grestore
} bind def

%	 #]triang_e: 
%	 #[triang_f:

/triang_f {
    %
    % color x y triang_f --> --
    %
    % Filled triangle in "color" stone
    %
    gsave
	/ycoor exch def
	/xcoor exch def
	/color exch def
	xcoor ycoor color 0 eq { ws } { bs } ifelse
	newpath
	    xcoor ycoor translate
	    .04 setlinewidth
	    color setgray
	    -.2353   -.175   moveto
	     .4706   0       rlineto
	    -.2353    .500   rlineto
	closepath
	fill
    grestore
} bind def

%	 #]triang_f: 
%	 #[shade:

/shade {
    %
    % color x y shade --> --
    %
    % Give the board some color at (x,y)
    %
    gsave
	translate		% To x y
	newpath
	    -.5 -.5 moveto
	    0 1 rlineto
	    1 0 rlineto
	    0 -1 rlineto
	closepath
	100 div setgray fill		% with color

	%
	% Restore grid
	%
	gW setlinewidth
	newpath -.5 0 moveto 1 0 rlineto stroke
	newpath 0 -.5 moveto 0 1 rlineto stroke
    grestore
} bind def

%	 #]shade: 
%	 #[bterr:

/bterr {
    %
    % x y bterr --> --
    %
    % Black territory indicator
    %
    gsave
	false {
	    %
	    % white stone filled 60% black
	    %
	    wR 0 360 arc
	    gsave
		.40 setgray fill
	    grestore
	    wW setlinewidth
	    0 setgray stroke
	}{
	    false {
		%
		% The character 'b'
		%
		gsave
		    2 copy wR 3 mul 4 div 0 360 arc 1 setgray fill
		grestore
		translate fF (b) centerstrn
	    }{
		%
		% A small black square
		%
		translate
		newpath
		    -.4 -.4  moveto
		    0.8 0   rlineto
		    0   0.8 rlineto
		    -.8 0   rlineto
		closepath
		gsave .25 setgray fill grestore stroke
	    } ifelse
	} ifelse
    grestore
} bind def

%	 #]bterr: 
%	 #[wterr:

/wterr {
    %
    % x y wterr --> --
    %
    % White territory indicator
    %
    gsave
	false {
	    %
	    % White stone filled 10% black
	    %
	    wR 0 360 arc
	    gsave
		.90 setgray fill
	    grestore
	    wW setlinewidth
	    0 setgray stroke
	}{
	    false {
		%
		% The character 'w'
		%
		gsave
		    2 copy wR 3 mul 4 div 0 360 arc 1 setgray fill
		grestore
		translate fF (w) centerstrn
	    }{
		%
		% A small white square
		%
		translate
		newpath
		    -.4 -.4  moveto
		    0.8 0   rlineto
		    0   0.8 rlineto
		    -.8 0   rlineto
		closepath
		gsave .75 setgray fill grestore stroke
	    } ifelse
	} ifelse
    grestore
} bind def

%	 #]wterr: 
%      #[bt:
/bt {
    %
    % x y bt --> --
    %
    % black mark
    %
    newpath
    bM 0 360 arc
    0 setgray fill
} bind def

%      #]bt:
%	 #[wt:

/wt {
    %
    % x y wt --> --
    %
    % White mark
    %
    newpath
    wM 0 360 arc
    gsave
	1 setgray fill
    grestore
    wW setlinewidth
    0 setgray stroke
} bind def

%	 #]ws: 
%      #[bt:
/bth {
    %
    % x y bt --> --
    %
    % Half black mark
    %
    newpath
    bM 270 90 arc
    0 setgray fill
} bind def

%      #]bth:
%	 #[wth:

/wth {
    %
    % x y wth --> --
    %
    % Half white mark
    %
    newpath 
    wM 270 90 arc
    closepath
    gsave
	1 setgray fill
    grestore
    wW setlinewidth
    0 setgray stroke
} bind def

%	 #]wth: 
%      #[btt:
/btt {
    %
    % x y bt --> --
    %
    % One third black mark
    %
    gsave
    translate
    newpath 0 0 moveto
    0 0 bM 330 90 arc
    closepath
    0 setgray fill
    grestore
} bind def

%      #]btt:
%	 #[wtt:

/wtt {
    %
    % x y wtt --> --
    %
    % One third white mark
    %
    gsave
    translate
    newpath 0 0 moveto
    0 0 wM 330 90 arc
    closepath
    gsave
    1 setgray fill
    grestore
    wW setlinewidth
    0 setgray stroke
    grestore
} bind def

%	 #]wtt
%	 #[metamark:

/metamark {
    %
    % color x y (string) metamark --> --
    %
    % Arbitrairy mark in "color" stone
    %
    gsave
	/marker exch def
	/ycoor  exch def
	/xcoor  exch def
	/color  exch def
	xcoor ycoor color 0 eq { ws } { bs } ifelse
	xcoor ycoor translate
	mF
	marker stringwidth pop 2 div neg 0 translate
	color 1 eq { 1 setgray } if
	0 0 moveto marker show
    grestore
} bind def

%	 #]metamark: 
%  #]stone signs: 
%  #[field signs:
%	 #[fs:

/fs {
    %
    % string x y fs --> --
    %
    % Grid point indicator
    %
    gsave
	newpath
	    translate
	    0 0 wR 0 360 arc
	    1 setgray
	    fill
	0 setgray fF centerstrn
    grestore
} bind def

%	 #]fs: 
%	 #[arrow:

/arrow {
    %
    % angle x y arrow --> --
    %
    % Put an arrow from (x,y) in direction determined by angle
    %
    gsave
	translate
	0.5 setgray 0 0 hR 0 360 arc fill
	rotate
	newpath
	     0.0   0.25  moveto
	    -0.1   0.25  lineto
	     0.0   0.48  lineto
	     0.1   0.25  lineto
	closepath 0.5 setgray
	gsave stroke grestore
	fill
    grestore
} bind def

%	 #]arrow: 
%	 #[nl:

/nl {
    %
    % string x y nl --> --
    %
    % Numbered liberty --- Put Number next to a marked grid point
    %
    gsave
	translate
	newpath
	     0.0  -0.25  moveto
	    -0.25  0.0   lineto
	     0.0   0.25  lineto
	     0.25  0.0   lineto
	closepath 0.5 setgray fill
	.3 .3 translate
	.6 dup scale
	0 setgray fF centerstrn
    grestore
} bind def

%	 #]nl: 
%	 #[no:

/no {
    %
    % string x y no --> --
    %
    % Put Number next to grid point
    %
    gsave
	translate
	% 0.5 setgray 0 0 hR 0 360 arc fill
	.3 .3 translate
	.6 dup scale
	0 setgray fF centerstrn
    grestore
} bind def

%	 #]no: 
%	 #[ds:

/ds {
    %
    % string x y ds --> --
    %
    % Destructive Grid point indicator
    %
    gsave
	translate
	0 setgray fF centerstrn
    grestore
} bind def

%	 #]ds: 
%  #]field signs: 

end

Liberty begin
/cache false def
/axis  false def
19 10.20 boardinit
/bdx  0 def
/bdy  0 def
/bdw 19 def
/bdh 19 def
/rgx  0 def
/rgy  0 def
/rgw 19 def
/rgh 19 def
board
1 18 bs
mark (6) 0 
/bB -24 def
/bH 752 def
32 487 4 18 bst
5 18 bs
6 18 bs
7 18 ws
0 17 ws
1 17 bs
3 17 bs
mark (5) 0 
/wB -23 def
/wH 733 def
35 478 4 17 wst
5 17 bs
6 17 ws
7 17 ws
8 17 ws
9 17 ws
mark (9) 0 38 471 11 17 wst
14 17 bs
15 17 ws
0 16 ws
1 16 bs
2 16 bs
3 16 bs
4 16 bs
5 16 ws
7 16 ws
8 16 bs
mark (0) 0 (1) 27 68 1005 11 16 bst
12 16 bs
13 16 bs
14 16 ws
15 16 ws
1 15 ws
2 15 ws
3 15 ws
4 15 ws
5 15 ws
6 15 ws
7 15 ws
9 15 bs
10 15 bs
11 15 ws
12 15 bs
14 15 bs
15 15 ws
6 14 bs
8 14 bs
9 14 bs
10 14 ws
11 14 bs
12 14 bs
13 14 bs
14 14 bs
15 14 ws
17 14 bs
2 13 bs
4 13 bs
5 13 bs
6 13 bs
8 13 bs
9 13 ws
10 13 ws
11 13 bs
13 13 bs
15 13 ws
16 13 ws
17 13 ws
1 12 bs
4 12 bs
5 12 ws
8 12 ws
9 12 bs
10 12 ws
11 12 ws
12 12 bs
13 12 bs
14 12 ws
15 12 ws
16 12 bs
17 12 bs
1 11 bs
2 11 ws
3 11 ws
4 11 bs
5 11 ws
6 11 bs
8 11 ws
10 11 ws
11 11 ws
12 11 bs
13 11 bs
14 11 bs
15 11 ws
16 11 bs
17 11 ws
1 10 ws
2 10 ws
3 10 bs
4 10 ws
5 10 ws
7 10 bs
8 10 bs
9 10 ws
10 10 ws
11 10 bs
12 10 bs
13 10 bs
14 10 ws
15 10 ws
16 10 bs
17 10 ws
1 9 bs
2 9 ws
3 9 bs
5 9 ws
7 9 bs
8 9 ws
9 9 ws
10 9 bs
11 9 bs
12 9 ws
13 9 bs
14 9 bs
15 9 bs
16 9 ws
17 9 ws
(b) 18 9 fs
1 8 ws
2 8 bs
3 8 bs
5 8 ws
6 8 bs
7 8 bs
8 8 bs
9 8 ws
10 8 ws
11 8 ws
13 8 ws
14 8 bs
15 8 ws
16 8 ws
mark (2) 0 (1) 27 68 1003 17 8 bst
1 7 ws
2 7 ws
3 7 ws
5 7 ws
6 7 ws
7 7 ws
8 7 bs
9 7 bs
10 7 ws
11 7 ws
12 7 ws
13 7 ws
14 7 ws
15 7 bs
16 7 bs
17 7 bs
1 6 bs
4 6 ws
5 6 bs
10 6 bs
11 6 bs
12 6 ws
14 6 bs
15 6 bs
1 5 ws
2 5 bs
3 5 bs
mark (2) 0 30 485 4 5 bst
5 5 bs
6 5 ws
7 5 ws
8 5 bs
10 5 bs
11 5 ws
12 5 ws
14 5 bs
15 5 ws
16 5 ws
17 5 bs
18 5 bs
1 4 ws
2 4 ws
3 4 bs
6 4 bs
7 4 bs
10 4 bs
11 4 ws
12 4 ws
13 4 ws
14 4 ws
15 4 bs
16 4 ws
17 4 ws
2 3 ws
3 3 ws
mark (1) 37 102 245 4 3 wst
5 3 bs
8 3 bs
10 3 ws
11 3 ws
12 3 bs
14 3 bs
15 3 bs
16 3 bs
17 3 ws
2 2 bs
4 2 ws
5 2 ws
6 2 bs
mark (8) 0 22 503 7 2 bst
8 2 bs
9 2 ws
11 2 ws
12 2 bs
15 2 bs
16 2 bs
17 2 bs
18 2 ws
4 1 ws
mark (4) 0 24 498 5 1 bst
mark (a) 0 46 474 6 1 wst
7 1 bs
8 1 ws
9 1 ws
10 1 ws
12 1 ws
13 1 bs
14 1 bs
16 1 bs
17 1 ws
mark (5) 0 (1) 37 102 967 4 0 wst
5 0 ws
6 0 bs
7 0 bs
8 0 bs
mark (3) 0 32 474 9 0 wst
11 0 ws
13 0 ws
end
%%Trailer
userdict /end-hook known{end-hook}if
%%EOF

%%EndDocument
 @endspecial 5922 1012 a Fh(W)54 b(7)136 b(=)55 b(k)-5
b(o)55 b(\(a\))5922 1205 y(W)f(11)h(=)g(4)f(pt)h(cpn)5922
1398 y(W)f(13)h(=)g(3)6643 1333 y Fp(1)p 6643 1362 65
7 v 6643 1452 a(2)6783 1398 y Fh(pt)g(cpn)5922 1591 y(B)g(14)106
b(=)55 b(k)-5 b(o)55 b(\(4\))2964 5975 y Ff(Figure)i(11.)78
b Fe(Ortho)5 b(do)-5 b(x)53 b(pla)-5 b(y)55 b(\(1{15\).)1281
6710 y Fm(Figure)63 b(11:)86 b(First)64 b(White)f(pla)-5
b(ys)63 b(the)g(double)g(sen)-5 b(te)63 b(at)g(1.)91
b(After)63 b(B)g(2)g(White)g(should)1070 6938 y(pla)-5
b(y)52 b(W)g(3)g(in)g(the)g(South.)75 b(This)53 b(is)g(lik)-5
b(e)54 b(a)e(double)f(sen)-5 b(te,)54 b(b)5 b(ecause)52
b(the)g(mast)h(is)g(purple)f(at)1070 7167 y(the)d(am)-5
b(bien)g(t)50 b(temp)5 b(erature.)75 b(W)49 b(3)g(threatens)g(to)g(tak)
-5 b(e)50 b(4)f(Blac)-5 b(k)50 b(stones)g(b)-5 b(y)48
b(a)h(second)g(pla)-5 b(y)1070 7395 y(at)60 b(8.)81 b(\(Stones)60
b(whic)-5 b(h)60 b(ma)-5 b(y)59 b(b)5 b(e)60 b(tak)-5
b(en)59 b(at)h(the)g(opp)5 b(onen)-5 b(t's)58 b(next)i(pla)-5
b(y)60 b(are)f(said)i(to)e(b)5 b(e)60 b(in)1070 7623
y(atari.\))78 b(Blac)-5 b(k)57 b(do)5 b(es)56 b(not)f(submit)j(meekly)
-15 b(,)57 b(but)f(tak)-5 b(es)56 b(the)g(k)-5 b(o)56
b(with)g(B)h(4,)f(threatening)g(to)1070 7852 y(in)-5
b(v)-10 b(ade)54 b(White's)g(corner.)75 b(This)55 b(threat)e(is)i(also)
f(hotter)g(than)f(the)h(am)-5 b(bien)g(t)54 b(temp)5
b(erature.)1070 8080 y(Ho)-5 b(w)g(ev)g(er,)78 b(W)c(5)g(threatens)g
(to)h(kill)h(Blac)-5 b(k's)76 b(group)d(in)i(the)g(North)-5
b(w)g(est)74 b(corner.)125 b(Since)1070 8309 y(White)82
b(w)-5 b(ould)82 b(gain)h(a)e(sizable)j(territory)-15
b(,)89 b(Blac)-5 b(k)83 b(replies.)150 b(Then)81 b(W)h(7)g(tak)-5
b(es)82 b(the)g(k)-5 b(o)1070 8537 y(and)76 b(forces)h(Blac)-5
b(k)79 b(to)e(pla)-5 b(y)78 b(B)g(8,)j(sa)-5 b(ving)78
b(his)g(stones)g(b)-5 b(y)77 b(connecting)g(them)h(to)g(living)1070
8766 y(neigh)-5 b(b)5 b(ors.)75 b(Blac)-5 b(k)53 b(has)f(a)g(k)-5
b(o)52 b(threat)g(but)f(nothing)h(that)g(w)-5 b(ould)52
b(b)5 b(e)52 b(bigger)g(than)g(White's)1070 8994 y(taking)71
b(these)g(4)g(stones,)k(b)5 b(ecause)70 b(that)h(capture)g(w)-5
b(ould)71 b(put)f(Blac)-5 b(k's)73 b(whole)e(group)f(in)1070
9223 y(the)e(South)-5 b(w)g(est)69 b(and)e(Cen)-5 b(ter)69
b(in)f(jeopardy)-15 b(.)107 b(If)68 b(White)h(w)-5 b(aits)70
b(to)e(pla)-5 b(y)69 b(at)g(3,)h(Blac)-5 b(k)70 b(can)1070
9451 y(tak)-5 b(e)55 b(the)f(k)-5 b(o)55 b(\014rst.)77
b(Then,)54 b(ev)-5 b(en)54 b(though)g(White)h(can)f(still)k(force)d
(Blac)-5 b(k)55 b(to)g(connect)g(at)g(8,)1070 9679 y(it)60
b(costs)f(an)f(extra)h(k)-5 b(o)58 b(threat)h(to)f(do)g(so.)1281
9908 y(Next,)e(White)h(tak)-5 b(es)56 b(her)g(sen)-5
b(te)56 b(in)h(the)f(North)f(with)i(W)f(9.)77 b(This)56
b(pla)-5 b(y)56 b(has)g(a)g(nominal)1070 10136 y(temp)5
b(erature)59 b(of)g(less)i(than)e(4,)g(but)g(it)h(raises)h(the)e(lo)5
b(cal)61 b(temp)5 b(erature)59 b(to)h(around)e(4)6829
10067 y Fk(1)p 6829 10096 71 8 v 6829 10197 a(3)6920
10136 y Fm(,)h(so)1070 10365 y(Blac)-5 b(k)50 b(replies.)77
b(If)49 b(White)h(omits)h(this)f(pla)-5 b(y)49 b(Blac)-5
b(k)51 b(has)e(the)g(p)5 b(ossibilit)-5 b(y)53 b(of)48
b(making)i(a)f(gain)1070 10593 y(through)i(unortho)5
b(do)-5 b(x)50 b(pla)-5 b(y)-15 b(.)77 b(White)53 b(pla)-5
b(ys)52 b(sen)-5 b(te)53 b(while)h(she)e(still)k(can.)75
b(In)53 b(general,)h(with)p eop
%%Page: 97 10
97 9 bop 1926 577 a Fg(GO)65 b(THERMOGRAPHY:)f(THE)g(4/21/98)e(JIANG{R)
l(UI)h(ENDGAME)706 b(97)1070 998 y Fm(com)-5 b(binatorial)72
b(games,)h(it)f(is)f(a)f(go)5 b(o)g(d)69 b(idea)i(to)f(pla)-5
b(y)71 b(sen)-5 b(te)70 b(early)-15 b(.)114 b(In)70 b(go,)j(it)e(is)g
(usually)1070 1227 y(advisable)59 b(to)g(w)-5 b(ait,)59
b(b)5 b(ecause)59 b(a)f(sen)-5 b(te)59 b(ma)-5 b(y)59
b(b)5 b(e)58 b(used)g(as)h(a)g(k)-5 b(o)58 b(threat.)1281
1455 y(After)c(B)h(10,)f(the)h(mast)g(v)-10 b(alue)55
b(of)f(the)h(game)f(is)4512 1386 y Fk(1)p 4512 1415 71
8 v 4512 1516 a(4)4603 1455 y Fm(.)76 b(Since)55 b(the)g(temp)5
b(erature)54 b(is)i(4,)f(with)1070 1684 y(a)75 b(p)5
b(erfectly)75 b(dense)g(en)-5 b(vironmen)g(t)76 b(the)f(\014nal)h
(result)g(with)g(ortho)5 b(do)-5 b(x)74 b(pla)-5 b(y)75
b(w)-5 b(ould)75 b(b)5 b(e)75 b(2)1070 1912 y(p)5 b(oin)-5
b(ts)73 b(b)5 b(etter)73 b(for)f(White,)k Fi(\000)p Fm(1)3276
1843 y Fk(3)p 3276 1872 V 3276 1973 a(4)3367 1912 y Fm(.)120
b(The)73 b(sparseness)g(of)f(the)h(en)-5 b(vironmen)g(t)73
b(happ)5 b(ens)71 b(to)1070 2141 y(fa)-5 b(v)g(or)58
b(White)h(in)g(this)g(case,)g(b)-5 b(y)3275 2071 y Fk(3)p
3275 2100 V 3275 2201 a(4)3425 2141 y Fm(p)5 b(oin)-5
b(t.)78 b(W)58 b(11)h(tak)-5 b(es)59 b(the)f(4)h(p)5
b(oin)-5 b(t)59 b(coup)5 b(on.)1281 2369 y(No)-5 b(w)63
b(the)h(mast)h(v)-10 b(alue)65 b(is)g Fi(\000)p Fm(3)3318
2300 y Fk(3)p 3317 2329 V 3317 2430 a(4)3409 2369 y Fm(.)94
b(Blac)-5 b(k)65 b(can)e(mak)-5 b(e)65 b(a)e(3)5095 2300
y Fk(1)p 5095 2329 V 5095 2430 a(2)5251 2369 y Fm(p)5
b(oin)-5 b(t)64 b(pla)-5 b(y)64 b(in)g(the)g(East)h(or)1070
2598 y(tak)-5 b(e)46 b(the)g(3)1837 2528 y Fk(1)p 1837
2557 V 1837 2658 a(2)1975 2598 y Fm(p)5 b(oin)-5 b(t)46
b(coup)5 b(on.)72 b(These)47 b(pla)-5 b(ys)46 b(ha)-5
b(v)g(e)46 b(the)g(same)h(temp)5 b(erature.)6132 2529
y Fk(1)6276 2598 y Fm(In)46 b(go)g(terms,)1070 2826 y(they)55
b(are)g(miai.)78 b(Whic)-5 b(hev)g(er)55 b(one)g(Blac)-5
b(k)56 b(c)-5 b(ho)5 b(oses,)56 b(White)g(gets)g(the)f(other.)77
b(Usually)56 b(it)g(is)1070 3054 y(a)65 b(matter)i(of)e(indi\013erence)
g(whic)-5 b(h)66 b(one)f(is)i(c)-5 b(hosen,)67 b(and)d(that)i(is)h(the)
e(case)h(here.)99 b(In)65 b(this)1070 3283 y(v)-10 b(ariation,)56
b(Blac)-5 b(k)57 b(pla)-5 b(ys)55 b(the)g(b)5 b(oard)54
b(pla)-5 b(y)55 b(at)g(12)g(and)f(White)i(tak)-5 b(es)55
b(the)g(coup)5 b(on.)76 b(\(Blac)-5 b(k)1070 3511 y(has)65
b(an)f(alternativ)-5 b(e)67 b(lo)5 b(cal)66 b(pla)-5
b(y)66 b(at)f Fj(b)p Fm(,)i(also)f(w)-5 b(orth)65 b(3)4725
3442 y Fk(1)p 4725 3471 V 4725 3572 a(2)4881 3511 y Fm(p)5
b(oin)-5 b(ts.)98 b(The)65 b(\014nal)g(result)h(is)g(the)1070
3740 y(same)59 b(if)g(Blac)-5 b(k)60 b(pla)-5 b(ys)59
b(there,)f(as)h(w)-5 b(ell.\))1281 3968 y(Next,)50 b(B)e(14)g(tak)-5
b(es)48 b(the)g(k)-5 b(o)48 b(in)g(the)g(South)-5 b(w)g(est)48
b(at)g(4.)75 b(This)48 b(k)-5 b(o)48 b(has)g(a)g(lo)-5
b(w)48 b(temp)5 b(erature,)1070 4197 y(only)68 b(1)1574
4128 y Fk(2)p 1574 4157 V 1574 4257 a(3)1665 4197 y Fm(.)107
b(Despite)70 b(the)f(fact)f(that)g(White)h(is)h(k)-5
b(omaster,)71 b(she)d(meekly)h(replies,)k(b)5 b(ecause)1070
4425 y(Blac)-5 b(k's)71 b(threat)f(to)h(in)-5 b(v)-10
b(ade)70 b(the)g(corner)g(is)h(so)f(large,)j(o)-5 b(v)g(er)70
b(4)g(p)5 b(oin)-5 b(ts,)74 b(that)c(the)g(mast)h(is)1070
4654 y(blue)k(up)g(to)g(that)h(temp)5 b(erature.)128
b(Ev)-5 b(en)75 b(if)g(White)h(\014gh)-5 b(ts)75 b(the)h(k)-5
b(o,)79 b(its)e(temp)5 b(erature)75 b(is)1070 4882 y(so)70
b(lo)-5 b(w)70 b(that)g(she)g(cannot)f(a\013ord)g(to)h(win)g(it)h(y)-5
b(et.)112 b(Blac)-5 b(k)70 b(do)5 b(es)70 b(not)g(need)f(to)h(pla)-5
b(y)70 b(a)f(k)-5 b(o)1070 5110 y(threat,)66 b(but)e(can)h(simply)h
(con)-5 b(tin)g(ue)65 b(with)g(his)h(normal)f(pla)-5
b(y)-15 b(,)67 b(and)c(tak)-5 b(e)65 b(the)g(k)-5 b(o)65
b(bac)-5 b(k)64 b(on)1070 5339 y(his)77 b(next)f(turn.)131
b(Blac)-5 b(k)77 b(can)f(con)-5 b(tin)g(ue)77 b(to)f(force)g(White)h
(to)g(w)-5 b(aste)77 b(k)-5 b(o)76 b(threats)g(in)h(this)1070
5567 y(fashion.)h(Rather)58 b(than)g(do)g(so,)h(she)g(connects)f(at)h
(15.)1281 5796 y(This)74 b(kind)g(of)g(k)-5 b(o,)77 b(in)e(whic)-5
b(h)74 b(one)g(pla)-5 b(y)g(er)74 b(tak)-5 b(es)75 b(the)f(k)-5
b(o,)77 b(forcing)d(the)g(opp)5 b(onen)-5 b(t)73 b(to)1070
6024 y(connect,)90 b(and)84 b(then)g(later)i(the)f(other)f(pla)-5
b(y)g(er)85 b(tak)-5 b(es)85 b(the)f(k)-5 b(o)85 b(bac)-5
b(k,)90 b(forcing)84 b(the)h(\014rst)1070 6253 y(pla)-5
b(y)g(er)54 b(to)g(connect,)h(is)g(not)f(uncommon.)76
b(A)-5 b(t)54 b(\014rst)h(the)f(mast)h(is)g(purple,)f(but)g(after)g
(Blac)-5 b(k)1070 6481 y(connects)61 b(at)h(8,)g(the)f(resulting)i(k)-5
b(o)61 b(carries)h(no)f(further)g(threat)g(for)g(White,)h(only)g(one)f
(for)1070 6710 y(Blac)-5 b(k,)59 b(and)f(its)i(mast)g(is)f(blue.)1281
6938 y(Figure)52 b(12:)75 b(A)-5 b(t)53 b(this)h(p)5
b(oin)-5 b(t)53 b(the)g(mast)g(v)-10 b(alue)54 b(is)f(still)j
Fi(\000)p Fm(3)5090 6869 y Fk(3)p 5090 6898 V 5090 6999
a(4)5181 6938 y Fm(,)e(and)e(the)g(am)-5 b(bien)g(t)54
b(temp)5 b(er-)1070 7167 y(ature)58 b(has)g(dropp)5 b(ed)57
b(to)i(3.)78 b(In)58 b(a)g(p)5 b(erfect)59 b(en)-5 b(vironmen)g(t)58
b(with)i(ortho)5 b(do)-5 b(x)57 b(pla)-5 b(y)59 b(the)f(result)1070
7395 y(w)-5 b(ould)58 b(b)5 b(e)59 b Fi(\000)p Fm(2)2068
7326 y Fk(1)p 2067 7355 V 2067 7456 a(4)2159 7395 y Fm(.)78
b(The)58 b(sparseness)i(of)e(the)h(en)-5 b(vironmen)g(t)59
b(b)5 b(et)-5 b(w)g(een)58 b(temp)5 b(eratures)59 b(3)g(and)1070
7623 y(4)f(has)h(b)5 b(ene\014ted)57 b(White)i(b)-5 b(y)3083
7554 y Fk(1)p 3083 7583 V 3083 7684 a(2)3233 7623 y Fm(p)5
b(oin)-5 b(t.)1281 7852 y(B)75 b(16)f(is)i(a)f(3)f(p)5
b(oin)-5 b(t)75 b(Blac)-5 b(k)76 b(sen)-5 b(te.)127 b(If)75
b(Blac)-5 b(k)76 b(cuts)f(o\013)f(White's)h(South)-5
b(w)g(est)75 b(corner,)1070 8080 y(White)j(will)j(need)c(to)h(protect)g
(it)h(from)f(an)g(inside)h(attac)-5 b(k.)136 b(After)78
b(White's)h(resp)5 b(onse,)1070 8309 y(Blac)-5 b(k)59
b(tak)-5 b(es)58 b(the)f(3)h(p)5 b(oin)-5 b(t)58 b(coup)5
b(on.)76 b(If)58 b(Blac)-5 b(k)58 b(had)f(tak)-5 b(en)58
b(the)f(coup)5 b(on)57 b(without)h(pla)-5 b(ying)1070
8537 y(the)56 b(sen)-5 b(te,)58 b(White)f(could)f(ha)-5
b(v)g(e)56 b(made)h(a)f(rev)-5 b(erse)57 b(sen)-5 b(te)57
b(pla)-5 b(y)57 b(at)g(16)f(and)g(gotten)g(the)h(last)1070
8766 y(3)64 b(p)5 b(oin)-5 b(t)65 b(mo)-5 b(v)g(e.)97
b(In)65 b(the)f(sparse)h(en)-5 b(vironmen)g(t)65 b(of)g(a)f(real)h
(game,)i(it)f(is)f(normally)h(b)5 b(est)65 b(to)1070
8994 y(get)59 b(the)f(last)i(pla)-5 b(y)59 b(b)5 b(efore)58
b(the)g(temp)5 b(erature)59 b(drops.)1281 9223 y(The)h(mast)i(v)-10
b(alue)61 b(is)g(no)-5 b(w)61 b Fi(\000)3238 9153 y Fk(3)p
3237 9182 V 3237 9283 a(4)3328 9223 y Fm(.)85 b(The)60
b(lo)5 b(cal)62 b(temp)5 b(erature)61 b(in)g(the)f(North)g(is)i(2)6560
9153 y Fk(2)p 6560 9182 V 6560 9283 a(3)6651 9223 y Fm(.)84
b(After)1070 9451 y(W)61 b(19)h(Blac)-5 b(k)63 b(resp)5
b(onds)61 b(with)h(B)h(20.)87 b(W)62 b(19)f(is)i(not)f(a)g(protot)-5
b(ypical)63 b(sen)-5 b(te,)63 b(b)5 b(ecause)61 b(the)1070
9679 y(mast)i(is)h(blac)-5 b(k.)89 b(The)62 b(temp)5
b(erature)63 b(of)e(B)i(20)f(is)i(the)e(same)h(as)g(that)f(of)g(W)g
(19,)h(so)g(White)1070 9908 y(cannot)70 b(pla)-5 b(y)70
b(sen)-5 b(te)71 b(early)g(and)f(raise)h(the)f(lo)5 b(cal)72
b(temp)5 b(erature)71 b(to)f(force)g(Blac)-5 b(k's)72
b(reply)-15 b(.)p 1070 10066 1055 8 v 1281 10205 a Fk(1)1351
10259 y Fg(By)48 b(the)h(more)h(common)f(traditional)d(form)j(of)f(go)g
(ev)-8 b(aluation,)48 b(these)h(pla)l(ys)e(are)i(7)g(p)t(oin)l(t)f
(gote.)66 b(The)1070 10426 y(less)45 b(common)h(form,)h(called)e(miai)g
(v)-8 b(aluation,)45 b(corresp)t(onds)h(to)f(temp)t(erature.)68
b(Whenev)l(er)47 b(I)e(refer)h(to)g(the)1070 10593 y(v)-8
b(alue)49 b(of)g(a)g(pla)l(y)-12 b(,)49 b(I)h(am)f(using)g(the)i(miai)e
(v)-8 b(alue.)p eop
%%Page: 98 11
98 10 bop 1070 577 a Fg(98)2140 b(WILLIAM)65 b(L.)g(SPIGHT)1012
5733 y @beginspecial 0 @llx 0 @lly 289.995941 @urx 289.995941
@ury 2783.960693 @rwi 2783.960693 @rhi @setspecial
%%BeginDocument: /u/levy/MSRI/Book42/spight/fig12.ps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: dvipsk 5.58f Copyright 1986, 1994 Radical Eye Software
%%Title: 589718.dvi
%%BoundingBox: 0 0 290 290
%  #[info:
%									%
%									%
%	     _								%
%	    / \\  /'\\ -_-_  ,._-_  /'\\     _-_  -_-_	 _-_,		%
%	   || || || || || \\  ||   || ||    || \\ || \\ ||_.		%
%	   || || || || || ||  ||   || ||    ||/	  || ||	 ~ ||		%
%	   \\_-| \\,/  ||-'   \\,  \\,/	 <> \\,/  ||-'	,-_-		%
%	    /  \       |/			  |/			%
%	   '----`      '			  '			%
%									%
%		  Copyright (c) 1993  Jan van der Steen			%
%	       Centre for Mathematics and Computer Science		%
%		       Amsterdam, the Netherlands			%
%									%
%-----------------------------------------------------------------------%
%   You are not allowed to use this software in commercial software.	%
%   You are allowed to use this software in free software under the	%
%   condition that you maintain this integral message in the source.	%
%-----------------------------------------------------------------------%
% File	  : gopro.eps							%
% Purpose : Implement PostScript procedures to draw Go games		%
% Version : 1.28							%
% Modified: 07 Apr 1995 18:10:54					%
% Author  : Jan van der Steen (jansteen@cwi.nl)				%
%  #]info: 

/Liberty 100 dict def
Liberty begin

%  #[init:
%
% Default fonts for various applications
%
/bFont /Helvetica-Bold def	% Black numbers
/wFont /Helvetica      def	% White numbers
/fFont /Helvetica      def	% Grid markers
/mFont /Helvetica      def	% Metamarkers

/bF { bFont findfont yP scalefont setfont } bind def /bB -24 def /bH 752 def
/wF { wFont findfont yP scalefont setfont } bind def /wB -23 def /wH 733 def
/fF { fFont findfont yP scalefont setfont } bind def
/mF { mFont findfont yP scalefont setfont } bind def

%
% Abbreviations
%
/W 0 def			% White color
/B 1 def			% Black color

%
% The following sizes are in square units
%
/gW	.01   def	% Width of grid line
/bW	.10   def	% Width of border line
/wW	.02   def	% Width of a white stone
/bR	.48   def	% Radius of a black stone
/wR	.48   def	% Radius of a white stone
/hR	.10   def	% Radius of a hoshi point
/xP	.60   def	% Maximum width  of strings (number,indicator)
/yP	.80   def	% Maximum height of strings (number,indicator)
/axis	true  def	% Do we print coordinates too
/cache	true  def	% Do we use the stone cache

%
% The stone cache
%
cache {
    /EMPTY	 0 def
    /BLACK	-1 def
    /WHITE	-2 def
} if
%  #]init: 
%  #[tools:
%	 #[snap:

/snap {
    %
    % x y snap x" y"
    %
    % Make x and y snap on output device grid
    %
    transform round exch round exch itransform
} bind def

%	 #]snap: 
%	 #[centerstrn:

/centerstrn {
    %
    % string centerstrn --> --
    %
    % Print "string" balanced around (0,0) and make sure
    % it will fit in a "yP" x "yP" bounding box.
    %
    dup stringwidth pop
    %
    % Does stringwidth exceed allowed maximum
    %
    dup yP gt { dup yP exch div 1 scale } if

    %
    % Center the string
    %
    2 div neg yP .20 sub 2 div neg moveto show
} bind def

%	 #]centerstrn: 
%  #]tools: 
%  #[boardinit:

/boardinit {
    %
    % boardsize (9, 13, 19, ...) realsize (in cm) boardinit --> ---
    %
    /realsize  exch def
    /boardsize exch def

    %
    % Initialise the hoshipoints
    %
    /hoshipos
	boardsize 19 eq {6} {
	boardsize 13 eq {3} {
	boardsize  9 eq {2}
			{0}		% Nothing appropriate
		ifelse
	    } ifelse
	} ifelse
    def

    %
    % Initialise the coordinate system (square = unity)
    %
    realsize boardsize div 2.54 div 72 mul dup scale

    %
    % Get and load the caption font
    %
    % /Times-Roman findfont .5 scalefont setfont

    % .5 axis {1}{0} ifelse add dup translate
    % axis {1}{0} ifelse dup translate

    %
    % Initialise clipping to whole board, and region to NIL
    %
    /llbdx 0 def/llbdy llbdx boardsize 1 sub add def
    /urbdy 0 def/urbdx urbdy boardsize 1 sub add def
    /llrgx 0 def
    /urrgx 0 def
    /llrgy 0 def
    /urrgy 0 def

    %
    % Clean the current path
    %
    newpath
} bind def

%  #]boardinit: 
%  #[cache:
%	 #[cacheinit:

/cacheinit {
    %
    % For the stone cache
    %
    cache {
	/stonecache boardsize dup mul array def
	0 1 boardsize dup mul 1 sub {
	    stonecache exch EMPTY put
	} for
    } if
} bind def

%	 #]cacheinit: 
%	 #[cachedump:

/cachedump {
    0 1 360 {
	dup stonecache exch get
	dup EMPTY eq {
	    pop pop
	}{
	    BLACK eq {
		dup
		boardsize  mod boardsize 2 idiv sub exch
		boardsize idiv boardsize 2 idiv sub bs
	    }{
		dup
		boardsize  mod boardsize 2 idiv sub exch
		boardsize idiv boardsize 2 idiv sub ws
	    } ifelse
	} ifelse    
    } for
} bind def

%	 #]cachedump: 
%	 #[cachedelete:

/cachedelete {
    /y exch def
    /x exch def
    stonecache
	x boardsize 2 idiv add
	y boardsize 2 idiv add boardsize mul add
	EMPTY
    put
} bind def

%	 #]cachedelete: 
%	 #[cd:

/cd {
    %
    % Delete an entry from the cache (stone has been hit)
    % x y cd
    %
    cache { cachedelete }{ pop pop } ifelse
} bind def

%	 #]cd: 
%  #]cache: 
%  #[caption:

/caption {
    gsave
	0 -1 translate
	0 0 moveto show
    grestore
} bind def

%  #]caption: 
%  #[transboard:

/row  0 def
/col  0 def
/rmax 3 def	% 3 rows	(based on h = 146 diagrams)
/cmax 2 def	% 2 columns	(based on w = 146 diagrams)
/lm   2 def	% Left margin

/init {
    lm lm translate
    0 boardsize 2 add rmax 1 sub mul translate
} bind def

true {
    /transboard { 0 0 translate } bind def
}{
    /transboard {
	col boardsize 2 add mul neg
	row boardsize 2 add mul translate
	row rmax 1 sub lt { /row row 1 add def }{
	    /row 0 def
	    col cmax 1 sub lt { /col col 1 add def }{
		showpage restore save
	    } ifelse
	} ifelse
	col boardsize 2 add mul
	row boardsize 2 add mul neg translate
    } bind def
} ifelse

%  #]transboard: 
%  #[board:
%	 #[hoshidump:

/hoshidump {
    gsave
    boardsize 2 idiv dup translate
    0 setgray
    newpath	    0                   0               hR 0 360 arc fill
    newpath	    hoshipos            hoshipos        hR 0 360 arc fill
    newpath	    hoshipos            hoshipos neg    hR 0 360 arc fill
    newpath	    hoshipos neg        hoshipos        hR 0 360 arc fill
    newpath	    hoshipos neg        hoshipos neg    hR 0 360 arc fill
    boardsize 19 eq {
	newpath	        0               hoshipos        hR 0 360 arc fill
	newpath	        hoshipos        0               hR 0 360 arc fill
	newpath	        0               hoshipos neg    hR 0 360 arc fill
	newpath	        hoshipos neg    0               hR 0 360 arc fill
    } if
    grestore
} bind def

%	 #]hoshidump: 
%	 #[coordump:

/X-AXIS [
    (A)(B)(C)(D)(E)(F)(G)(H)(J)(K)(L)(M)(N)(O)(P)(Q)(R)(S)(T)
] def
/Y-AXIS [
    (1)(2)(3)(4)(5)(6)(7)(8)(9)(10)(11)(12)(13)(14)(15)(16)(17)(18)(19)
] def

/coordump {
    %
    % Surround the board with coordinates
    %
    fF
    newpath
    0 bdh moveto	% upper edge
    1 1 boardsize {
	1 sub X-AXIS exch get
	gsave currentpoint translate centerstrn grestore
	1 0 rmoveto
    } for
    newpath
    0 -1 moveto		% lower edge
    1 1 boardsize {
	1 sub X-AXIS exch get
	gsave currentpoint translate centerstrn grestore
	1 0 rmoveto
    } for
    newpath
    -1 0 moveto		% left edge
    1 1 boardsize {
	1 sub Y-AXIS exch get
	gsave currentpoint translate centerstrn grestore
	0 1 rmoveto
    } for
    newpath
    bdw 0 moveto	% right edge
    1 1 boardsize {
	1 sub Y-AXIS exch get
	gsave currentpoint translate centerstrn grestore
	0 1 rmoveto
    } for
    newpath
} bind def

%  #]coordump: 
%	 #[board:

/board {
    transboard					% Translate into position

    %
    % Clip region
    %
    % Example 1: Bottom slice
    % /bdx  0 def	% SGF coordinates (topdown, leftright)
    % /bdy  8 def	% SGF coordinates (topdown, leftright)
    % /bdw 19 def
    % /bdh 11 def
    %
    % Example 2: Top slice
    % /bdx  0 def
    % /bdy  0 def
    % /bdw 19 def
    % /bdh 10 def
    %
    /psclipx bdx def
    /psclipy boardsize bdy bdh add sub def
    /psclipw bdw def
    /pscliph bdh def

    axis {
	%
	% Add space for the coordinates
	%
	/psclipw psclipw 2 add def	% left/right side
	/pscliph pscliph 2 add def	% top/bottom side
    } if

    newpath
	0           0        moveto
	psclipw     0       rlineto
	0           pscliph rlineto
	psclipw neg 0       rlineto
    closepath
    gsave 1 setgray fill grestore clip
    newpath
    %
    % Translate to relative origin
    %
    psclipx .5 sub neg
    psclipy .5 sub neg translate

    axis {1}{0} ifelse dup translate

    %
    % Region
    %
    gsave
	llrgx urrgx ne llrgy urrgy ne or {
	    newpath
	    llrgx .5 sub llrgy .5 add moveto
	    llrgx .5 sub urrgy .5 sub lineto
	    urrgx .5 add urrgy .5 sub lineto
	    urrgx .5 add llrgy .5 add lineto
	    closepath
	    .75 setgray
	    % 255 255 div
	    % 175 255 div
	    % 125 255 div setrgbcolor
	    gsave gW setlinewidth stroke grestore fill
	    newpath
	} if
    grestore

    %
    % Horizontals
    %
    newpath
    1 1 boardsize 2 sub {
	0 exch snap moveto
	boardsize 1 sub 0 rlineto
    } for
    %
    % Verticals
    %
    1 1 boardsize 2 sub {
	0 snap moveto
	0 boardsize 1 sub rlineto
    } for
    gW setlinewidth stroke

    %
    % Borders
    %
    newpath
    0			0			moveto
    0			boardsize 1 sub		rlineto
    boardsize 1 sub	0			rlineto
    0			boardsize 1 sub neg	rlineto
    closepath
    bW setlinewidth stroke

    hoshidump					% Print the hoshi points
    cache { cachedump } if			% Print the cache contents
    axis  { coordump  } if			% Print the coordinates
    % grestore
} bind def

%	 #]board: 
%  #]board: 
%  #[stones:
%	 #[wst:

/wst {
    %
    % Numbered white stone
    %
    % [[s0 K0][...][sn Kn]] ox w x y wst --> --
    %
    %	x,y 	[0..boardsize-1]
    %	ox,w	[1/1000 unit]
    %
    gsave
	/y  exch def
	/x  exch def
	/h  wH   yP mul 1000 div def
	/w  exch yP mul 1000 div def
	/oy wB   yP mul 1000 div def
	/ox exch yP mul 1000 div def
	cache {
	    stonecache
		x boardsize 2 idiv add
		y boardsize 2 idiv add boardsize mul add
		WHITE
	    put
	} if
	x y translate
	0 0 ws
	0 setgray wF

	w xP gt { xP w div }{1} ifelse
	h yP gt { yP h div }{1} ifelse scale
	w 2 div ox add neg
	h 2 div oy add neg translate
	0 0 moveto
	1 1 counttomark 2 sub 2 idiv { pop neg yP mul 1000 div 0 rmoveto show } for
	pop % "mark" itself
    grestore
} bind def

%	 #]wst: 
%	 #[bst:

/bst {
    %
    % Numbered black stone
    %
    % [[s0 K0][...][sn Kn]] ox w x y bst --> --
    %
    %	x,y 	[0..boardsize-1]
    %	ox,w	[1/1000 unit]
    %
    %
    gsave
	/y  exch def
	/x  exch def
	/h  bH   yP mul 1000 div def
	/w  exch yP mul 1000 div def
	/oy bB   yP mul 1000 div def
	/ox exch yP mul 1000 div def
	cache {
	    stonecache
		x boardsize 2 idiv add
		y boardsize 2 idiv add boardsize mul add
		BLACK
	    put
	} if
	x y translate
	0 0 bs
	1 setgray bF

	w xP gt { xP w div }{1} ifelse
	h yP gt { yP h div }{1} ifelse scale
	w 2 div ox add neg
	h 2 div oy add neg translate
	0 0 moveto
	1 1 counttomark 2 sub 2 idiv { pop neg yP mul 1000 div 0 rmoveto show } for
	pop % "mark" itself
    grestore
} bind def

%	 #]bst: 
%	 #[ws:

/ws {
    %
    % x y ws --> --
    %
    % Unnumbered white stone
    %
    newpath
    wR 0 360 arc
    gsave
	1 setgray fill
    grestore
    wW setlinewidth
    0 setgray stroke
} bind def

%	 #]ws: 
%	 #[bs:

/bs {
    %
    % x y ws --> --
    %
    % Unnumbered black stone
    %
    newpath
    bR 0 360 arc
    0 setgray fill
} bind def

%	 #]bs: 
%  #]stones: 
%  #[stone signs:
%	 #[ps:

/ps {
    %
    % color x y ps --> --
    %
    % Plus sign in "color" stone
    %
    gsave
	/ycoor exch def
	/xcoor exch def
	/color exch def
	xcoor ycoor color 0 eq { ws } { bs } ifelse
	newpath
	    xcoor ycoor translate
	    .06 setlinewidth
	    color setgray
	    -.2 0  moveto
	     .2 0  lineto
	    0  -.2 moveto
	    0   .2 lineto
	stroke
    grestore
} bind def

%	 #]ps: 
%	 #[ms:

/ms {
    %
    % color x y ms --> --
    %
    % Minus sign in "color" stone
    %
    gsave
	/ycoor exch def
	/xcoor exch def
	/color exch def
	xcoor ycoor color 0 eq { ws } { bs } ifelse
	newpath
	    xcoor ycoor translate
	    .06 setlinewidth
	    color setgray
	    -.2 0 moveto
	     .2 0 lineto
	stroke
    grestore
} bind def

%	 #]ms: 
%	 #[square_e:

/square_e {
    %
    % color x y square_e --> --
    %
    % Empty square in "color" stone
    %
    gsave
	/ycoor exch def
	/xcoor exch def
	/color exch def
	xcoor ycoor color 0 eq { ws } { bs } ifelse
	newpath
	    xcoor ycoor translate
	    .04 setlinewidth
	    color setgray
	    -.2353   -.2353   moveto
	    -.2353    .2353   lineto
	     .2353    .2353   lineto
	     .2353   -.2353   lineto
	closepath
	stroke
    grestore
} bind def

%	 #]square_e: 
%	 #[square_f:

/square_f {
    %
    % color x y square_f --> --
    %
    % Filled square in "color" stone
    %
    gsave
	/ycoor exch def
	/xcoor exch def
	/color exch def
	xcoor ycoor color 0 eq { ws } { bs } ifelse
	newpath
	    xcoor ycoor translate
	    .04 setlinewidth
	    color setgray
	    -.2353   -.2353   moveto
	    -.2353    .2353   lineto
	     .2353    .2353   lineto
	     .2353   -.2353   lineto
	closepath
	fill
    grestore
} bind def

%	 #]square_f: 
%	 #[triang_e:

/triang_e {
    %
    % color x y triang_e --> --
    %
    % Empty triangle in "color" stone
    %
    gsave
	/ycoor exch def
	/xcoor exch def
	/color exch def
	xcoor ycoor color 0 eq { ws } { bs } ifelse
	newpath
	    xcoor ycoor translate
	    .04 setlinewidth
	    color setgray
	    -.2353   -.175   moveto
	     .4706   0       rlineto
	    -.2353    .500   rlineto
	closepath
	stroke
    grestore
} bind def

%	 #]triang_e: 
%	 #[triang_f:

/triang_f {
    %
    % color x y triang_f --> --
    %
    % Filled triangle in "color" stone
    %
    gsave
	/ycoor exch def
	/xcoor exch def
	/color exch def
	xcoor ycoor color 0 eq { ws } { bs } ifelse
	newpath
	    xcoor ycoor translate
	    .04 setlinewidth
	    color setgray
	    -.2353   -.175   moveto
	     .4706   0       rlineto
	    -.2353    .500   rlineto
	closepath
	fill
    grestore
} bind def

%	 #]triang_f: 
%	 #[shade:

/shade {
    %
    % color x y shade --> --
    %
    % Give the board some color at (x,y)
    %
    gsave
	translate		% To x y
	newpath
	    -.5 -.5 moveto
	    0 1 rlineto
	    1 0 rlineto
	    0 -1 rlineto
	closepath
	100 div setgray fill		% with color

	%
	% Restore grid
	%
	gW setlinewidth
	newpath -.5 0 moveto 1 0 rlineto stroke
	newpath 0 -.5 moveto 0 1 rlineto stroke
    grestore
} bind def

%	 #]shade: 
%	 #[bterr:

/bterr {
    %
    % x y bterr --> --
    %
    % Black territory indicator
    %
    gsave
	false {
	    %
	    % white stone filled 60% black
	    %
	    wR 0 360 arc
	    gsave
		.40 setgray fill
	    grestore
	    wW setlinewidth
	    0 setgray stroke
	}{
	    false {
		%
		% The character 'b'
		%
		gsave
		    2 copy wR 3 mul 4 div 0 360 arc 1 setgray fill
		grestore
		translate fF (b) centerstrn
	    }{
		%
		% A small black square
		%
		translate
		newpath
		    -.4 -.4  moveto
		    0.8 0   rlineto
		    0   0.8 rlineto
		    -.8 0   rlineto
		closepath
		gsave .25 setgray fill grestore stroke
	    } ifelse
	} ifelse
    grestore
} bind def

%	 #]bterr: 
%	 #[wterr:

/wterr {
    %
    % x y wterr --> --
    %
    % White territory indicator
    %
    gsave
	false {
	    %
	    % White stone filled 10% black
	    %
	    wR 0 360 arc
	    gsave
		.90 setgray fill
	    grestore
	    wW setlinewidth
	    0 setgray stroke
	}{
	    false {
		%
		% The character 'w'
		%
		gsave
		    2 copy wR 3 mul 4 div 0 360 arc 1 setgray fill
		grestore
		translate fF (w) centerstrn
	    }{
		%
		% A small white square
		%
		translate
		newpath
		    -.4 -.4  moveto
		    0.8 0   rlineto
		    0   0.8 rlineto
		    -.8 0   rlineto
		closepath
		gsave .75 setgray fill grestore stroke
	    } ifelse
	} ifelse
    grestore
} bind def

%	 #]wterr: 
%	 #[metamark:

/metamark {
    %
    % color x y (string) metamark --> --
    %
    % Arbitrairy mark in "color" stone
    %
    gsave
	/marker exch def
	/ycoor  exch def
	/xcoor  exch def
	/color  exch def
	xcoor ycoor color 0 eq { ws } { bs } ifelse
	xcoor ycoor translate
	mF
	marker stringwidth pop 2 div neg 0 translate
	color 1 eq { 1 setgray } if
	0 0 moveto marker show
    grestore
} bind def

%	 #]metamark: 
%  #]stone signs: 
%  #[field signs:
%	 #[fs:

/fs {
    %
    % string x y fs --> --
    %
    % Grid point indicator
    %
    gsave
	newpath
	    translate
	    0 0 wR 0 360 arc
	    1 setgray
	    fill
	0 setgray fF centerstrn
    grestore
} bind def

%	 #]fs: 
%	 #[arrow:

/arrow {
    %
    % angle x y arrow --> --
    %
    % Put an arrow from (x,y) in direction determined by angle
    %
    gsave
	translate
	0.5 setgray 0 0 hR 0 360 arc fill
	rotate
	newpath
	     0.0   0.25  moveto
	    -0.1   0.25  lineto
	     0.0   0.48  lineto
	     0.1   0.25  lineto
	closepath 0.5 setgray
	gsave stroke grestore
	fill
    grestore
} bind def

%	 #]arrow: 
%	 #[nl:

/nl {
    %
    % string x y nl --> --
    %
    % Numbered liberty --- Put Number next to a marked grid point
    %
    gsave
	translate
	newpath
	     0.0  -0.25  moveto
	    -0.25  0.0   lineto
	     0.0   0.25  lineto
	     0.25  0.0   lineto
	closepath 0.5 setgray fill
	.3 .3 translate
	.6 dup scale
	0 setgray fF centerstrn
    grestore
} bind def

%	 #]nl: 
%	 #[no:

/no {
    %
    % string x y no --> --
    %
    % Put Number next to grid point
    %
    gsave
	translate
	% 0.5 setgray 0 0 hR 0 360 arc fill
	.3 .3 translate
	.6 dup scale
	0 setgray fF centerstrn
    grestore
} bind def

%	 #]no: 
%	 #[ds:

/ds {
    %
    % string x y ds --> --
    %
    % Destructive Grid point indicator
    %
    gsave
	translate
	0 setgray fF centerstrn
    grestore
} bind def

%	 #]ds: 
%  #]field signs: 

end

Liberty begin
/cache false def
/axis  false def
19 10.20 boardinit
/bdx  0 def
/bdy  0 def
/bdw 19 def
/bdh 19 def
/rgx  0 def
/rgy  0 def
/rgw 19 def
/rgh 19 def
board
1 18 bs
4 18 bs
5 18 bs
6 18 bs
7 18 ws
mark (24) 0 
/bB -24 def
/bH 752 def
30 1048 14 18 bst
mark (22) 0 30 1041 15 18 bst
mark (23) 0 
/wB -23 def
/wH 733 def
34 1028 16 18 wst
0 17 ws
1 17 bs
3 17 bs
5 17 bs
6 17 ws
7 17 ws
8 17 ws
9 17 ws
mark (9) 0 (1) 37 102 963 10 17 wst
11 17 ws
mark (20) 0 30 1043 13 17 bst
14 17 bs
15 17 ws
mark (25) 0 34 1035 16 17 wst
0 16 ws
1 16 bs
2 16 bs
3 16 bs
4 16 bs
5 16 ws
7 16 ws
8 16 bs
11 16 bs
12 16 bs
13 16 bs
14 16 ws
15 16 ws
1 15 ws
2 15 ws
3 15 ws
4 15 ws
5 15 ws
6 15 ws
7 15 ws
9 15 bs
10 15 bs
12 15 bs
14 15 bs
15 15 ws
6 14 bs
8 14 bs
9 14 bs
10 14 ws
11 14 bs
12 14 bs
13 14 bs
14 14 bs
15 14 ws
17 14 bs
2 13 bs
4 13 bs
5 13 bs
6 13 bs
8 13 bs
9 13 ws
10 13 ws
11 13 bs
13 13 bs
15 13 ws
16 13 ws
17 13 ws
1 12 bs
4 12 bs
5 12 ws
8 12 ws
9 12 bs
10 12 ws
11 12 ws
12 12 bs
13 12 bs
14 12 ws
15 12 ws
16 12 bs
17 12 bs
mark (1) 37 (3) 0 32 834 0 11 wst
1 11 bs
2 11 ws
3 11 ws
4 11 bs
5 11 ws
6 11 bs
8 11 ws
10 11 ws
11 11 ws
12 11 bs
13 11 bs
14 11 bs
15 11 ws
16 11 bs
17 11 ws
1 10 ws
2 10 ws
3 10 bs
4 10 ws
5 10 ws
7 10 bs
8 10 bs
9 10 ws
10 10 ws
11 10 bs
12 10 bs
13 10 bs
14 10 ws
15 10 ws
16 10 bs
17 10 ws
1 9 bs
2 9 ws
3 9 bs
5 9 ws
7 9 bs
8 9 ws
9 9 ws
10 9 bs
11 9 bs
12 9 ws
13 9 bs
14 9 bs
15 9 bs
16 9 ws
17 9 ws
mark (26) 0 30 1045 18 9 bst
1 8 ws
2 8 bs
3 8 bs
5 8 ws
6 8 bs
7 8 bs
8 8 bs
9 8 ws
10 8 ws
11 8 ws
13 8 ws
14 8 bs
15 8 ws
16 8 ws
17 8 bs
1 7 ws
2 7 ws
3 7 ws
5 7 ws
6 7 ws
7 7 ws
8 7 bs
9 7 bs
10 7 ws
11 7 ws
12 7 ws
13 7 ws
14 7 ws
15 7 bs
16 7 bs
17 7 bs
mark (7) 0 (1) 37 102 974 0 6 wst
1 6 bs
mark (6) 0 (1) 27 68 1007 2 6 bst
4 6 ws
5 6 bs
mark (29) 0 34 1031 8 6 wst
mark (30) 0 29 1044 9 6 bst
10 6 bs
11 6 bs
12 6 ws
14 6 bs
15 6 bs
1 5 ws
2 5 bs
3 5 bs
4 5 bs
5 5 bs
6 5 ws
7 5 ws
8 5 bs
10 5 bs
11 5 ws
12 5 ws
14 5 bs
15 5 ws
16 5 ws
17 5 bs
18 5 bs
1 4 ws
2 4 ws
3 4 bs
6 4 bs
7 4 bs
10 4 bs
11 4 ws
12 4 ws
13 4 ws
14 4 ws
15 4 bs
16 4 ws
17 4 ws
2 3 ws
3 3 ws
4 3 ws
5 3 bs
8 3 bs
10 3 ws
11 3 ws
12 3 bs
14 3 bs
15 3 bs
16 3 bs
17 3 ws
2 2 bs
4 2 ws
5 2 ws
6 2 bs
7 2 bs
8 2 bs
9 2 ws
11 2 ws
12 2 bs
15 2 bs
16 2 bs
17 2 bs
18 2 ws
4 1 ws
5 1 bs
7 1 bs
8 1 ws
9 1 ws
10 1 ws
12 1 ws
13 1 bs
14 1 bs
16 1 bs
17 1 ws
4 0 ws
5 0 ws
6 0 bs
7 0 bs
8 0 bs
9 0 ws
11 0 ws
13 0 ws
end
%%Trailer
userdict /end-hook known{end-hook}if
%%EOF

%%EndDocument
 @endspecial 5922 1001 a Fh(B)55 b(18)106 b(=)55 b(3)f(pt)h(cpn)5922
1194 y(W)f(21)h(=)g(2)6643 1130 y Fp(1)p 6643 1159 65
7 v 6643 1248 a(2)6783 1194 y Fh(pt)g(cpn)5922 1388 y(W)f(27)h(=)g(2)f
(pt)h(cpn)5922 1581 y(W)f(28)h(=)g(1)6643 1516 y Fp(1)p
6643 1545 V 6643 1635 a(2)6783 1581 y Fh(pt)g(cpn)2924
5975 y Ff(Figure)h(12.)78 b Fe(Ortho)5 b(do)-5 b(x)54
b(pla)-5 b(y)54 b(\(16{31\).)1070 6481 y Fm(Next)75 b(White)h(tak)-5
b(es)76 b(the)f(2)2960 6412 y Fk(1)p 2960 6441 71 8 v
2960 6542 a(2)3127 6481 y Fm(p)5 b(oin)-5 b(t)75 b(coup)5
b(on.)127 b(No)-5 b(w)75 b(B)h(22)f(initiates)j(a)e(sen)-5
b(te)75 b(sequence)1070 6710 y(through)48 b(W)h(25,)i(with)f(temp)5
b(erature)50 b(2)3724 6640 y Fk(1)p 3724 6669 V 3724
6770 a(3)3815 6710 y Fm(.)75 b(Blac)-5 b(k)50 b(threatens)g(a)f(large)h
(in)-5 b(v)-10 b(asion)51 b(of)e(White's)1070 6938 y(corner.)1281
7167 y(The)62 b(mast)h(v)-10 b(alue)63 b(is)h Fi(\000)p
Fm(3)2965 7097 y Fk(1)p 2964 7126 V 2964 7227 a(4)3055
7167 y Fm(,)f(and)f(the)h(am)-5 b(bien)g(t)63 b(temp)5
b(erature)62 b(is)i(2.)89 b(Again)63 b(w)-5 b(e)62 b(ha)-5
b(v)g(e)62 b(a)1070 7395 y(miai)52 b(b)5 b(et)-5 b(w)g(een)50
b(the)g(2)g(p)5 b(oin)-5 b(t)51 b(coup)5 b(on)49 b(and)g(a)h(pla)-5
b(y)50 b(at)h(26)f(in)g(the)g(East.)76 b(And)49 b(again)h(it)h(do)5
b(es)1070 7623 y(not)51 b(seem)i(to)e(matter)i(whic)-5
b(h)51 b(alternativ)-5 b(e)54 b(Blac)-5 b(k)52 b(c)-5
b(ho)5 b(oses.)76 b(Here)51 b(Blac)-5 b(k)53 b(tak)-5
b(es)52 b(the)g(b)5 b(oard)1070 7852 y(pla)-5 b(y)-15
b(.)111 b(After)70 b(White)g(tak)-5 b(es)70 b(the)f(2)h(p)5
b(oin)-5 b(t)70 b(coup)5 b(on)68 b(Blac)-5 b(k)71 b(tak)-5
b(es)70 b(the)f(1)5954 7783 y Fk(1)p 5954 7812 V 5954
7912 a(2)6115 7852 y Fm(p)5 b(oin)-5 b(t)70 b(coup)5
b(on.)1070 8080 y(The)58 b(mast)i(v)-10 b(alue)59 b(is)g(no)-5
b(w)58 b Fi(\000)p Fm(1)3104 8011 y Fk(3)p 3104 8040
V 3104 8141 a(4)3195 8080 y Fm(.)1281 8309 y(White)72
b(has)f(a)h(clev)-5 b(er)72 b(pla)-5 b(y)72 b(at)g(W)f(29)g(in)h(the)g
(cen)-5 b(ter,)75 b(with)d(a)f(temp)5 b(erature)72 b(of)f(1)7010
8240 y Fk(1)p 6975 8269 141 8 v 6975 8369 a(12)7136 8309
y Fm(.)1070 8537 y(Blac)-5 b(k)64 b(m)-5 b(ust)64 b(resp)5
b(ond)62 b(at)i(30)e(or)h(lose)i(his)e(group)f(in)i(the)f(South.)91
b(W)63 b(31)g(no)-5 b(w)62 b(completes)1070 8766 y(the)71
b(pla)-5 b(y)-15 b(.)116 b(If)72 b(White)f(pla)-5 b(ys)72
b(\014rst)f(at)h(31,)h(the)f(temp)5 b(erature)71 b(in)h(the)f(cen)-5
b(ter)71 b(rises)i(to)e(1)7094 8696 y Fk(1)p 7094 8725
71 8 v 7094 8826 a(6)1070 8994 y Fm(\(!\),)j(and)69 b(Blac)-5
b(k)72 b(gets)f(to)g(mak)-5 b(e)71 b(the)g(hotter)f(pla)-5
b(y)71 b(at)g(29.)113 b(These)71 b(pla)-5 b(ys)71 b(are)f(related)i(b)
-5 b(y)1070 9223 y(White's)59 b(threat)g(to)f(cut)h(at)g(41)f(in)h
(Figure)g(13.)1281 9451 y(Figure)71 b(13:)103 b(The)71
b(mast)h(v)-10 b(alue)72 b(is)h(no)-5 b(w)70 b Fi(\000)p
Fm(2)4274 9382 y Fk(5)p 4274 9411 V 4274 9512 a(6)4365
9451 y Fm(,)k(and)d(the)g(am)-5 b(bien)g(t)73 b(temp)5
b(erature)71 b(is)i(1.)1070 9679 y(B)60 b(32)f(threatens)h(an)f
(iterated)i(k)-5 b(o,)59 b(with)i(3)e(steps)i(b)5 b(et)-5
b(w)g(een)59 b(winning)h(and)f(losing,)i(raising)1070
9908 y(the)75 b(lo)5 b(cal)77 b(temp)5 b(erature)76 b(to)g(ab)5
b(out)75 b(1)3701 9839 y Fk(2)p 3701 9868 V 3701 9969
a(5)3792 9908 y Fm(.)129 b(Before)75 b(replying)h(at)g(35,)j(White)d
(in)-5 b(terjects)77 b(a)1070 10136 y(1)f(p)5 b(oin)-5
b(t)76 b(sen)-5 b(te)77 b(at)f(W)f(33,)80 b(whic)-5 b(h)77
b(threatens)f(Blac)-5 b(k's)77 b(group)e(in)h(the)g(corner.)130
b(B)76 b(36)g(is)1070 10365 y(another)52 b(1)g(p)5 b(oin)-5
b(t)53 b(sen)-5 b(te,)54 b(and)e(then)g(B)i(38)e(tak)-5
b(es)53 b(the)g(1)f(p)5 b(oin)-5 b(t)53 b(coup)5 b(on.)75
b(No)-5 b(w)52 b(W)g(39)h(tak)-5 b(es)1070 10593 y(the)1406
10524 y Fk(5)p 1406 10553 V 1406 10654 a(6)1569 10593
y Fm(p)5 b(oin)-5 b(t)72 b(pla)-5 b(y)71 b(in)h(the)f(North.)116
b(The)71 b(mast)i(v)-10 b(alue)72 b(is)g(no)-5 b(w)71
b Fi(\000)p Fm(2)5686 10524 y Fk(2)p 5686 10553 V 5686
10654 a(3)5777 10593 y Fm(,)j(and)d(the)g(am)-5 b(bien)g(t)p
eop
%%Page: 99 12
99 11 bop 1926 577 a Fg(GO)65 b(THERMOGRAPHY:)f(THE)g(4/21/98)e
(JIANG{R)l(UI)h(ENDGAME)706 b(99)1078 5733 y @beginspecial
0 @llx 0 @lly 289.995941 @urx 289.995941 @ury 2783.960693
@rwi 2783.960693 @rhi @setspecial
%%BeginDocument: /u/levy/MSRI/Book42/spight/fig13.ps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: dvipsk 5.58f Copyright 1986, 1994 Radical Eye Software
%%Title: 589718.dvi
%%BoundingBox: 0 0 290 290
%  #[info:
%									%
%									%
%	     _								%
%	    / \\  /'\\ -_-_  ,._-_  /'\\     _-_  -_-_	 _-_,		%
%	   || || || || || \\  ||   || ||    || \\ || \\ ||_.		%
%	   || || || || || ||  ||   || ||    ||/	  || ||	 ~ ||		%
%	   \\_-| \\,/  ||-'   \\,  \\,/	 <> \\,/  ||-'	,-_-		%
%	    /  \       |/			  |/			%
%	   '----`      '			  '			%
%									%
%		  Copyright (c) 1993  Jan van der Steen			%
%	       Centre for Mathematics and Computer Science		%
%		       Amsterdam, the Netherlands			%
%									%
%-----------------------------------------------------------------------%
%   You are not allowed to use this software in commercial software.	%
%   You are allowed to use this software in free software under the	%
%   condition that you maintain this integral message in the source.	%
%-----------------------------------------------------------------------%
% File	  : gopro.eps							%
% Purpose : Implement PostScript procedures to draw Go games		%
% Version : 1.28							%
% Modified: 07 Apr 1995 18:10:54					%
% Author  : Jan van der Steen (jansteen@cwi.nl)				%
%  #]info: 

/Liberty 100 dict def
Liberty begin

%  #[init:
%
% Default fonts for various applications
%
/bFont /Helvetica-Bold def	% Black numbers
/wFont /Helvetica      def	% White numbers
/fFont /Helvetica      def	% Grid markers
/mFont /Helvetica      def	% Metamarkers

/bF { bFont findfont yP scalefont setfont } bind def /bB -24 def /bH 752 def
/wF { wFont findfont yP scalefont setfont } bind def /wB -23 def /wH 733 def
/fF { fFont findfont yP scalefont setfont } bind def
/mF { mFont findfont yP scalefont setfont } bind def

%
% Abbreviations
%
/W 0 def			% White color
/B 1 def			% Black color

%
% The following sizes are in square units
%
/gW	.01   def	% Width of grid line
/bW	.10   def	% Width of border line
/wW	.02   def	% Width of a white stone
/bR	.48   def	% Radius of a black stone
/wR	.48   def	% Radius of a white stone
/hR	.10   def	% Radius of a hoshi point
/xP	.60   def	% Maximum width  of strings (number,indicator)
/yP	.80   def	% Maximum height of strings (number,indicator)
/axis	true  def	% Do we print coordinates too
/cache	true  def	% Do we use the stone cache

%
% The stone cache
%
cache {
    /EMPTY	 0 def
    /BLACK	-1 def
    /WHITE	-2 def
} if
%  #]init: 
%  #[tools:
%	 #[snap:

/snap {
    %
    % x y snap x" y"
    %
    % Make x and y snap on output device grid
    %
    transform round exch round exch itransform
} bind def

%	 #]snap: 
%	 #[centerstrn:

/centerstrn {
    %
    % string centerstrn --> --
    %
    % Print "string" balanced around (0,0) and make sure
    % it will fit in a "yP" x "yP" bounding box.
    %
    dup stringwidth pop
    %
    % Does stringwidth exceed allowed maximum
    %
    dup yP gt { dup yP exch div 1 scale } if

    %
    % Center the string
    %
    2 div neg yP .20 sub 2 div neg moveto show
} bind def

%	 #]centerstrn: 
%  #]tools: 
%  #[boardinit:

/boardinit {
    %
    % boardsize (9, 13, 19, ...) realsize (in cm) boardinit --> ---
    %
    /realsize  exch def
    /boardsize exch def

    %
    % Initialise the hoshipoints
    %
    /hoshipos
	boardsize 19 eq {6} {
	boardsize 13 eq {3} {
	boardsize  9 eq {2}
			{0}		% Nothing appropriate
		ifelse
	    } ifelse
	} ifelse
    def

    %
    % Initialise the coordinate system (square = unity)
    %
    realsize boardsize div 2.54 div 72 mul dup scale

    %
    % Get and load the caption font
    %
    % /Times-Roman findfont .5 scalefont setfont

    % .5 axis {1}{0} ifelse add dup translate
    % axis {1}{0} ifelse dup translate

    %
    % Initialise clipping to whole board, and region to NIL
    %
    /llbdx 0 def/llbdy llbdx boardsize 1 sub add def
    /urbdy 0 def/urbdx urbdy boardsize 1 sub add def
    /llrgx 0 def
    /urrgx 0 def
    /llrgy 0 def
    /urrgy 0 def

    %
    % Clean the current path
    %
    newpath
} bind def

%  #]boardinit: 
%  #[cache:
%	 #[cacheinit:

/cacheinit {
    %
    % For the stone cache
    %
    cache {
	/stonecache boardsize dup mul array def
	0 1 boardsize dup mul 1 sub {
	    stonecache exch EMPTY put
	} for
    } if
} bind def

%	 #]cacheinit: 
%	 #[cachedump:

/cachedump {
    0 1 360 {
	dup stonecache exch get
	dup EMPTY eq {
	    pop pop
	}{
	    BLACK eq {
		dup
		boardsize  mod boardsize 2 idiv sub exch
		boardsize idiv boardsize 2 idiv sub bs
	    }{
		dup
		boardsize  mod boardsize 2 idiv sub exch
		boardsize idiv boardsize 2 idiv sub ws
	    } ifelse
	} ifelse    
    } for
} bind def

%	 #]cachedump: 
%	 #[cachedelete:

/cachedelete {
    /y exch def
    /x exch def
    stonecache
	x boardsize 2 idiv add
	y boardsize 2 idiv add boardsize mul add
	EMPTY
    put
} bind def

%	 #]cachedelete: 
%	 #[cd:

/cd {
    %
    % Delete an entry from the cache (stone has been hit)
    % x y cd
    %
    cache { cachedelete }{ pop pop } ifelse
} bind def

%	 #]cd: 
%  #]cache: 
%  #[caption:

/caption {
    gsave
	0 -1 translate
	0 0 moveto show
    grestore
} bind def

%  #]caption: 
%  #[transboard:

/row  0 def
/col  0 def
/rmax 3 def	% 3 rows	(based on h = 146 diagrams)
/cmax 2 def	% 2 columns	(based on w = 146 diagrams)
/lm   2 def	% Left margin

/init {
    lm lm translate
    0 boardsize 2 add rmax 1 sub mul translate
} bind def

true {
    /transboard { 0 0 translate } bind def
}{
    /transboard {
	col boardsize 2 add mul neg
	row boardsize 2 add mul translate
	row rmax 1 sub lt { /row row 1 add def }{
	    /row 0 def
	    col cmax 1 sub lt { /col col 1 add def }{
		showpage restore save
	    } ifelse
	} ifelse
	col boardsize 2 add mul
	row boardsize 2 add mul neg translate
    } bind def
} ifelse

%  #]transboard: 
%  #[board:
%	 #[hoshidump:

/hoshidump {
    gsave
    boardsize 2 idiv dup translate
    0 setgray
    newpath	    0                   0               hR 0 360 arc fill
    newpath	    hoshipos            hoshipos        hR 0 360 arc fill
    newpath	    hoshipos            hoshipos neg    hR 0 360 arc fill
    newpath	    hoshipos neg        hoshipos        hR 0 360 arc fill
    newpath	    hoshipos neg        hoshipos neg    hR 0 360 arc fill
    boardsize 19 eq {
	newpath	        0               hoshipos        hR 0 360 arc fill
	newpath	        hoshipos        0               hR 0 360 arc fill
	newpath	        0               hoshipos neg    hR 0 360 arc fill
	newpath	        hoshipos neg    0               hR 0 360 arc fill
    } if
    grestore
} bind def

%	 #]hoshidump: 
%	 #[coordump:

/X-AXIS [
    (A)(B)(C)(D)(E)(F)(G)(H)(J)(K)(L)(M)(N)(O)(P)(Q)(R)(S)(T)
] def
/Y-AXIS [
    (1)(2)(3)(4)(5)(6)(7)(8)(9)(10)(11)(12)(13)(14)(15)(16)(17)(18)(19)
] def

/coordump {
    %
    % Surround the board with coordinates
    %
    fF
    newpath
    0 bdh moveto	% upper edge
    1 1 boardsize {
	1 sub X-AXIS exch get
	gsave currentpoint translate centerstrn grestore
	1 0 rmoveto
    } for
    newpath
    0 -1 moveto		% lower edge
    1 1 boardsize {
	1 sub X-AXIS exch get
	gsave currentpoint translate centerstrn grestore
	1 0 rmoveto
    } for
    newpath
    -1 0 moveto		% left edge
    1 1 boardsize {
	1 sub Y-AXIS exch get
	gsave currentpoint translate centerstrn grestore
	0 1 rmoveto
    } for
    newpath
    bdw 0 moveto	% right edge
    1 1 boardsize {
	1 sub Y-AXIS exch get
	gsave currentpoint translate centerstrn grestore
	0 1 rmoveto
    } for
    newpath
} bind def

%  #]coordump: 
%	 #[board:

/board {
    transboard					% Translate into position

    %
    % Clip region
    %
    % Example 1: Bottom slice
    % /bdx  0 def	% SGF coordinates (topdown, leftright)
    % /bdy  8 def	% SGF coordinates (topdown, leftright)
    % /bdw 19 def
    % /bdh 11 def
    %
    % Example 2: Top slice
    % /bdx  0 def
    % /bdy  0 def
    % /bdw 19 def
    % /bdh 10 def
    %
    /psclipx bdx def
    /psclipy boardsize bdy bdh add sub def
    /psclipw bdw def
    /pscliph bdh def

    axis {
	%
	% Add space for the coordinates
	%
	/psclipw psclipw 2 add def	% left/right side
	/pscliph pscliph 2 add def	% top/bottom side
    } if

    newpath
	0           0        moveto
	psclipw     0       rlineto
	0           pscliph rlineto
	psclipw neg 0       rlineto
    closepath
    gsave 1 setgray fill grestore clip
    newpath
    %
    % Translate to relative origin
    %
    psclipx .5 sub neg
    psclipy .5 sub neg translate

    axis {1}{0} ifelse dup translate

    %
    % Region
    %
    gsave
	llrgx urrgx ne llrgy urrgy ne or {
	    newpath
	    llrgx .5 sub llrgy .5 add moveto
	    llrgx .5 sub urrgy .5 sub lineto
	    urrgx .5 add urrgy .5 sub lineto
	    urrgx .5 add llrgy .5 add lineto
	    closepath
	    .75 setgray
	    % 255 255 div
	    % 175 255 div
	    % 125 255 div setrgbcolor
	    gsave gW setlinewidth stroke grestore fill
	    newpath
	} if
    grestore

    %
    % Horizontals
    %
    newpath
    1 1 boardsize 2 sub {
	0 exch snap moveto
	boardsize 1 sub 0 rlineto
    } for
    %
    % Verticals
    %
    1 1 boardsize 2 sub {
	0 snap moveto
	0 boardsize 1 sub rlineto
    } for
    gW setlinewidth stroke

    %
    % Borders
    %
    newpath
    0			0			moveto
    0			boardsize 1 sub		rlineto
    boardsize 1 sub	0			rlineto
    0			boardsize 1 sub neg	rlineto
    closepath
    bW setlinewidth stroke

    hoshidump					% Print the hoshi points
    cache { cachedump } if			% Print the cache contents
    axis  { coordump  } if			% Print the coordinates
    % grestore
} bind def

%	 #]board: 
%  #]board: 
%  #[stones:
%	 #[wst:

/wst {
    %
    % Numbered white stone
    %
    % [[s0 K0][...][sn Kn]] ox w x y wst --> --
    %
    %	x,y 	[0..boardsize-1]
    %	ox,w	[1/1000 unit]
    %
    gsave
	/y  exch def
	/x  exch def
	/h  wH   yP mul 1000 div def
	/w  exch yP mul 1000 div def
	/oy wB   yP mul 1000 div def
	/ox exch yP mul 1000 div def
	cache {
	    stonecache
		x boardsize 2 idiv add
		y boardsize 2 idiv add boardsize mul add
		WHITE
	    put
	} if
	x y translate
	0 0 ws
	0 setgray wF

	w xP gt { xP w div }{1} ifelse
	h yP gt { yP h div }{1} ifelse scale
	w 2 div ox add neg
	h 2 div oy add neg translate
	0 0 moveto
	1 1 counttomark 2 sub 2 idiv { pop neg yP mul 1000 div 0 rmoveto show } for
	pop % "mark" itself
    grestore
} bind def

%	 #]wst: 
%	 #[bst:

/bst {
    %
    % Numbered black stone
    %
    % [[s0 K0][...][sn Kn]] ox w x y bst --> --
    %
    %	x,y 	[0..boardsize-1]
    %	ox,w	[1/1000 unit]
    %
    %
    gsave
	/y  exch def
	/x  exch def
	/h  bH   yP mul 1000 div def
	/w  exch yP mul 1000 div def
	/oy bB   yP mul 1000 div def
	/ox exch yP mul 1000 div def
	cache {
	    stonecache
		x boardsize 2 idiv add
		y boardsize 2 idiv add boardsize mul add
		BLACK
	    put
	} if
	x y translate
	0 0 bs
	1 setgray bF

	w xP gt { xP w div }{1} ifelse
	h yP gt { yP h div }{1} ifelse scale
	w 2 div ox add neg
	h 2 div oy add neg translate
	0 0 moveto
	1 1 counttomark 2 sub 2 idiv { pop neg yP mul 1000 div 0 rmoveto show } for
	pop % "mark" itself
    grestore
} bind def

%	 #]bst: 
%	 #[ws:

/ws {
    %
    % x y ws --> --
    %
    % Unnumbered white stone
    %
    newpath
    wR 0 360 arc
    gsave
	1 setgray fill
    grestore
    wW setlinewidth
    0 setgray stroke
} bind def

%	 #]ws: 
%	 #[bs:

/bs {
    %
    % x y ws --> --
    %
    % Unnumbered black stone
    %
    newpath
    bR 0 360 arc
    0 setgray fill
} bind def

%	 #]bs: 
%  #]stones: 
%  #[stone signs:
%	 #[ps:

/ps {
    %
    % color x y ps --> --
    %
    % Plus sign in "color" stone
    %
    gsave
	/ycoor exch def
	/xcoor exch def
	/color exch def
	xcoor ycoor color 0 eq { ws } { bs } ifelse
	newpath
	    xcoor ycoor translate
	    .06 setlinewidth
	    color setgray
	    -.2 0  moveto
	     .2 0  lineto
	    0  -.2 moveto
	    0   .2 lineto
	stroke
    grestore
} bind def

%	 #]ps: 
%	 #[ms:

/ms {
    %
    % color x y ms --> --
    %
    % Minus sign in "color" stone
    %
    gsave
	/ycoor exch def
	/xcoor exch def
	/color exch def
	xcoor ycoor color 0 eq { ws } { bs } ifelse
	newpath
	    xcoor ycoor translate
	    .06 setlinewidth
	    color setgray
	    -.2 0 moveto
	     .2 0 lineto
	stroke
    grestore
} bind def

%	 #]ms: 
%	 #[square_e:

/square_e {
    %
    % color x y square_e --> --
    %
    % Empty square in "color" stone
    %
    gsave
	/ycoor exch def
	/xcoor exch def
	/color exch def
	xcoor ycoor color 0 eq { ws } { bs } ifelse
	newpath
	    xcoor ycoor translate
	    .04 setlinewidth
	    color setgray
	    -.2353   -.2353   moveto
	    -.2353    .2353   lineto
	     .2353    .2353   lineto
	     .2353   -.2353   lineto
	closepath
	stroke
    grestore
} bind def

%	 #]square_e: 
%	 #[square_f:

/square_f {
    %
    % color x y square_f --> --
    %
    % Filled square in "color" stone
    %
    gsave
	/ycoor exch def
	/xcoor exch def
	/color exch def
	xcoor ycoor color 0 eq { ws } { bs } ifelse
	newpath
	    xcoor ycoor translate
	    .04 setlinewidth
	    color setgray
	    -.2353   -.2353   moveto
	    -.2353    .2353   lineto
	     .2353    .2353   lineto
	     .2353   -.2353   lineto
	closepath
	fill
    grestore
} bind def

%	 #]square_f: 
%	 #[triang_e:

/triang_e {
    %
    % color x y triang_e --> --
    %
    % Empty triangle in "color" stone
    %
    gsave
	/ycoor exch def
	/xcoor exch def
	/color exch def
	xcoor ycoor color 0 eq { ws } { bs } ifelse
	newpath
	    xcoor ycoor translate
	    .04 setlinewidth
	    color setgray
	    -.2353   -.175   moveto
	     .4706   0       rlineto
	    -.2353    .500   rlineto
	closepath
	stroke
    grestore
} bind def

%	 #]triang_e: 
%	 #[triang_f:

/triang_f {
    %
    % color x y triang_f --> --
    %
    % Filled triangle in "color" stone
    %
    gsave
	/ycoor exch def
	/xcoor exch def
	/color exch def
	xcoor ycoor color 0 eq { ws } { bs } ifelse
	newpath
	    xcoor ycoor translate
	    .04 setlinewidth
	    color setgray
	    -.2353   -.175   moveto
	     .4706   0       rlineto
	    -.2353    .500   rlineto
	closepath
	fill
    grestore
} bind def

%	 #]triang_f: 
%	 #[shade:

/shade {
    %
    % color x y shade --> --
    %
    % Give the board some color at (x,y)
    %
    gsave
	translate		% To x y
	newpath
	    -.5 -.5 moveto
	    0 1 rlineto
	    1 0 rlineto
	    0 -1 rlineto
	closepath
	100 div setgray fill		% with color

	%
	% Restore grid
	%
	gW setlinewidth
	newpath -.5 0 moveto 1 0 rlineto stroke
	newpath 0 -.5 moveto 0 1 rlineto stroke
    grestore
} bind def

%	 #]shade: 
%	 #[bterr:

/bterr {
    %
    % x y bterr --> --
    %
    % Black territory indicator
    %
    gsave
	false {
	    %
	    % white stone filled 60% black
	    %
	    wR 0 360 arc
	    gsave
		.40 setgray fill
	    grestore
	    wW setlinewidth
	    0 setgray stroke
	}{
	    false {
		%
		% The character 'b'
		%
		gsave
		    2 copy wR 3 mul 4 div 0 360 arc 1 setgray fill
		grestore
		translate fF (b) centerstrn
	    }{
		%
		% A small black square
		%
		translate
		newpath
		    -.4 -.4  moveto
		    0.8 0   rlineto
		    0   0.8 rlineto
		    -.8 0   rlineto
		closepath
		gsave .25 setgray fill grestore stroke
	    } ifelse
	} ifelse
    grestore
} bind def

%	 #]bterr: 
%	 #[wterr:

/wterr {
    %
    % x y wterr --> --
    %
    % White territory indicator
    %
    gsave
	false {
	    %
	    % White stone filled 10% black
	    %
	    wR 0 360 arc
	    gsave
		.90 setgray fill
	    grestore
	    wW setlinewidth
	    0 setgray stroke
	}{
	    false {
		%
		% The character 'w'
		%
		gsave
		    2 copy wR 3 mul 4 div 0 360 arc 1 setgray fill
		grestore
		translate fF (w) centerstrn
	    }{
		%
		% A small white square
		%
		translate
		newpath
		    -.4 -.4  moveto
		    0.8 0   rlineto
		    0   0.8 rlineto
		    -.8 0   rlineto
		closepath
		gsave .75 setgray fill grestore stroke
	    } ifelse
	} ifelse
    grestore
} bind def

%	 #]wterr: 
%	 #[metamark:

/metamark {
    %
    % color x y (string) metamark --> --
    %
    % Arbitrairy mark in "color" stone
    %
    gsave
	/marker exch def
	/ycoor  exch def
	/xcoor  exch def
	/color  exch def
	xcoor ycoor color 0 eq { ws } { bs } ifelse
	xcoor ycoor translate
	mF
	marker stringwidth pop 2 div neg 0 translate
	color 1 eq { 1 setgray } if
	0 0 moveto marker show
    grestore
} bind def

%	 #]metamark: 
%  #]stone signs: 
%  #[field signs:
%	 #[fs:

/fs {
    %
    % string x y fs --> --
    %
    % Grid point indicator
    %
    gsave
	newpath
	    translate
	    0 0 wR 0 360 arc
	    1 setgray
	    fill
	0 setgray fF centerstrn
    grestore
} bind def

%	 #]fs: 
%	 #[arrow:

/arrow {
    %
    % angle x y arrow --> --
    %
    % Put an arrow from (x,y) in direction determined by angle
    %
    gsave
	translate
	0.5 setgray 0 0 hR 0 360 arc fill
	rotate
	newpath
	     0.0   0.25  moveto
	    -0.1   0.25  lineto
	     0.0   0.48  lineto
	     0.1   0.25  lineto
	closepath 0.5 setgray
	gsave stroke grestore
	fill
    grestore
} bind def

%	 #]arrow: 
%	 #[nl:

/nl {
    %
    % string x y nl --> --
    %
    % Numbered liberty --- Put Number next to a marked grid point
    %
    gsave
	translate
	newpath
	     0.0  -0.25  moveto
	    -0.25  0.0   lineto
	     0.0   0.25  lineto
	     0.25  0.0   lineto
	closepath 0.5 setgray fill
	.3 .3 translate
	.6 dup scale
	0 setgray fF centerstrn
    grestore
} bind def

%	 #]nl: 
%	 #[no:

/no {
    %
    % string x y no --> --
    %
    % Put Number next to grid point
    %
    gsave
	translate
	% 0.5 setgray 0 0 hR 0 360 arc fill
	.3 .3 translate
	.6 dup scale
	0 setgray fF centerstrn
    grestore
} bind def

%	 #]no: 
%	 #[ds:

/ds {
    %
    % string x y ds --> --
    %
    % Destructive Grid point indicator
    %
    gsave
	translate
	0 setgray fF centerstrn
    grestore
} bind def

%	 #]ds: 
%  #]field signs: 

end

Liberty begin
/cache false def
/axis  false def
19 10.20 boardinit
/bdx  0 def
/bdy  0 def
/bdw 19 def
/bdh 19 def
/rgx  0 def
/rgy  0 def
/rgw 19 def
/rgh 19 def
board
1 18 bs
4 18 bs
5 18 bs
6 18 bs
7 18 ws
mark (39) 0 
/wB -23 def
/wH 733 def
32 1033 12 18 wst
14 18 bs
15 18 bs
16 18 ws
0 17 ws
1 17 bs
3 17 bs
5 17 bs
6 17 ws
7 17 ws
8 17 ws
9 17 ws
10 17 ws
11 17 ws
mark (40) 0 
/bB -24 def
/bH 752 def
24 1049 12 17 bst
13 17 bs
14 17 bs
15 17 ws
16 17 ws
0 16 ws
1 16 bs
2 16 bs
3 16 bs
4 16 bs
5 16 ws
7 16 ws
8 16 bs
mark (47) 0 28 1048 10 16 wst
11 16 bs
12 16 bs
13 16 bs
14 16 ws
15 16 ws
1 15 ws
2 15 ws
3 15 ws
4 15 ws
5 15 ws
6 15 ws
7 15 ws
9 15 bs
10 15 bs
12 15 bs
14 15 bs
15 15 ws
6 14 bs
mark (45) 0 28 1041 7 14 wst
8 14 bs
9 14 bs
10 14 ws
11 14 bs
12 14 bs
13 14 bs
14 14 bs
15 14 ws
17 14 bs
2 13 bs
4 13 bs
5 13 bs
6 13 bs
mark (46) 0 24 1051 7 13 bst
8 13 bs
9 13 ws
10 13 ws
11 13 bs
13 13 bs
15 13 ws
16 13 ws
17 13 ws
1 12 bs
4 12 bs
5 12 ws
mark (42) 0 24 1047 6 12 bst
8 12 ws
9 12 bs
10 12 ws
11 12 ws
12 12 bs
13 12 bs
14 12 ws
15 12 ws
16 12 bs
17 12 bs
0 11 ws
1 11 bs
2 11 ws
3 11 ws
4 11 bs
5 11 ws
6 11 bs
mark (1) 37 (4) 0 28 838 7 11 wst
8 11 ws
10 11 ws
11 11 ws
12 11 bs
13 11 bs
14 11 bs
15 11 ws
16 11 bs
17 11 ws
1 10 ws
2 10 ws
3 10 bs
4 10 ws
5 10 ws
mark (43) 0 28 1034 6 10 wst
7 10 bs
8 10 bs
9 10 ws
10 10 ws
11 10 bs
12 10 bs
13 10 bs
14 10 ws
15 10 ws
16 10 bs
17 10 ws
1 9 bs
2 9 ws
3 9 bs
5 9 ws
7 9 bs
8 9 ws
9 9 ws
10 9 bs
11 9 bs
12 9 ws
13 9 bs
14 9 bs
15 9 bs
16 9 ws
17 9 ws
18 9 bs
1 8 ws
2 8 bs
3 8 bs
5 8 ws
6 8 bs
7 8 bs
8 8 bs
9 8 ws
10 8 ws
11 8 ws
mark (49) 0 28 1037 12 8 wst
13 8 ws
14 8 bs
15 8 ws
16 8 ws
17 8 bs
1 7 ws
2 7 ws
3 7 ws
mark (37) 0 32 1044 4 7 wst
5 7 ws
6 7 ws
7 7 ws
8 7 bs
9 7 bs
10 7 ws
11 7 ws
12 7 ws
13 7 ws
14 7 ws
15 7 bs
16 7 bs
17 7 bs
0 6 ws
1 6 bs
2 6 bs
mark (36) 0 29 1046 3 6 bst
4 6 ws
5 6 bs
mark (1) 37 (5) 0 35 831 7 6 wst
8 6 ws
9 6 bs
10 6 bs
11 6 bs
12 6 ws
14 6 bs
15 6 bs
1 5 ws
2 5 bs
3 5 bs
4 5 bs
5 5 bs
6 5 ws
7 5 ws
8 5 bs
10 5 bs
11 5 ws
12 5 ws
14 5 bs
15 5 ws
16 5 ws
17 5 bs
18 5 bs
1 4 ws
2 4 ws
3 4 bs
6 4 bs
7 4 bs
mark (44) 0 24 1054 9 4 bst
10 4 bs
11 4 ws
12 4 ws
13 4 ws
14 4 ws
15 4 bs
16 4 ws
17 4 ws
2 3 ws
3 3 ws
4 3 ws
5 3 bs
8 3 bs
10 3 ws
11 3 ws
12 3 bs
mark (33) 0 32 1030 13 3 wst
14 3 bs
15 3 bs
16 3 bs
17 3 ws
2 2 bs
4 2 ws
5 2 ws
6 2 bs
7 2 bs
8 2 bs
9 2 ws
11 2 ws
12 2 bs
mark (34) 0 29 1049 13 2 bst
15 2 bs
16 2 bs
17 2 bs
18 2 ws
4 1 ws
5 1 bs
mark (50) 0 27 1046 6 1 bst
7 1 bs
8 1 ws
9 1 ws
10 1 ws
12 1 ws
13 1 bs
14 1 bs
16 1 bs
17 1 ws
4 0 ws
5 0 ws
6 0 bs
7 0 bs
8 0 bs
9 0 ws
11 0 ws
mark (35) 0 32 1037 12 0 wst
13 0 ws
mark (32) 0 29 1042 14 0 bst
end
%%Trailer
userdict /end-hook known{end-hook}if
%%EOF

%%EndDocument
 @endspecial 5989 1001 a Fh(B)54 b(38)h(=)f(1)h(pt)g(cpn)5989
1194 y(B)f(48)h(=)6577 1130 y Fp(1)p 6577 1159 65 7 v
6577 1248 a(2)6716 1194 y Fh(pt)g(cpn)2123 5975 y Ff(Figure)i(13.)77
b Fe(Ortho)5 b(do)-5 b(x)54 b(pla)-5 b(y)55 b(\(32{51\))28
b(|)f(one)55 b(p)5 b(oint)53 b(and)h(b)5 b(elo)-5 b(w.)1070
6481 y Fm(temp)5 b(erature)74 b(is)2300 6412 y Fk(1)p
2300 6441 71 8 v 2300 6542 a(2)2391 6481 y Fm(.)123 b(In)74
b(addition)h(to)f(the)4076 6412 y Fk(1)p 4076 6441 V
4076 6542 a(2)4241 6481 y Fm(p)5 b(oin)-5 b(t)74 b(coup)5
b(on)72 b(there)i(are)g(2)f(b)5 b(oard)73 b(pla)-5 b(ys)1070
6710 y(w)g(orth)1594 6640 y Fk(1)p 1594 6669 V 1594 6770
a(2)1686 6710 y Fm(,)58 b(one)h(in)g(the)g(North)f(and)g(one)h(in)g
(the)g(North)f(Cen)-5 b(tral)60 b(section.)80 b(Again,)58
b(it)i(do)5 b(es)1070 6938 y(not)71 b(matter)h(who)f(gets)h(these)g
(pla)-5 b(ys.)117 b(B)72 b(40)f(tak)-5 b(es)72 b(the)f(pla)-5
b(y)72 b(in)g(the)f(North,)j(and)d(then)1070 7167 y(White)60
b(tak)-5 b(es)60 b(the)g(pla)-5 b(y)60 b(in)g(the)g(North)g(Cen)-5
b(tral.)82 b(This)60 b(pla)-5 b(y)60 b(is)h(a)f(gote,)g(but)f(the)h
(mast)h(is)1070 7395 y(red)c(up)f(to)i(a)f(v)-5 b(ery)57
b(high)g(temp)5 b(erature,)58 b(b)5 b(ecause)57 b(White's)h(cut)f(with)
h(W)f(41{43)g(carries)h(a)1070 7623 y(h)-5 b(uge)58 b(threat)g
(\(Figure)h(14\).)1281 7852 y(If)47 b(Blac)-5 b(k)48
b(omits)h(B)f(4,)h(White)e(can)g(pla)-5 b(y)47 b(W)g(5.)74
b(W)46 b(7)h(puts)g(Blac)-5 b(k's)49 b(stones)e(in)h(the)f(cen)-5
b(ter)1070 8080 y(in)63 b(atari)g(and)e(threatens)i(to)g(kill)h(Blac)-5
b(k's)64 b(large)f(group.)88 b(B)63 b(8)f(tak)-5 b(es)63
b(White's)g(stone)g(at)f Fj(a)1070 8309 y Fm(and)49 b(puts)h(the)g(2)f
(neigh)-5 b(b)5 b(oring)50 b(White)g(stones)h(in)f(atari.)76
b(W)49 b(9)h(sa)-5 b(v)g(es)51 b(them)f(and)f(threatens)1070
8537 y(to)74 b(cut)g(o\013)f(Blac)-5 b(k's)75 b(stones)f(on)f(the)h
(left)h(with)f(a)g(pla)-5 b(y)74 b(at)g(10.)123 b(B)74
b(10)f(sa)-5 b(v)g(es)75 b(them,)j(but)1070 8766 y(no)-5
b(w)65 b(W)h(11)f(tak)-5 b(es)67 b(the)f(k)-5 b(o)65
b(at)h Fj(a)p Fm(,)i(renewing)e(the)g(threat)g(against)g(Blac)-5
b(k's)67 b(whole)g(group.)1070 8994 y(If)62 b(Blac)-5
b(k)63 b(connects)f(at)g Fj(b)p Fm(,)h(White)f(tak)-5
b(es)63 b(at)f Fj(c)p Fm(,)g(killing)j(the)d(group.)86
b(Blac)-5 b(k)63 b(cannot)f(a\013ord)1070 9223 y(to)d(\014gh)-5
b(t)58 b(this)h(k)-5 b(o,)59 b(and)e(a)-5 b(v)g(oids)59
b(it)h(with)f(B)g(44.)1281 9451 y(Suc)-5 b(h)39 b(a)h(k)-5
b(o)40 b(is)h(called)g(a)f(hanami)h(k)-5 b(o,)43 b(or)d(\015o)-5
b(w)g(er-viewing)40 b(k)-5 b(o,)43 b(in)e(reference)f(to)g(the)g
(Cherry)1070 9679 y(Blossom)54 b(festiv)-10 b(als)54
b(held)d(eac)-5 b(h)52 b(spring)g(in)g(Japan,)g(when)f(p)5
b(eople)52 b(gather)f(to)h(w)-5 b(atc)g(h)52 b(c)-5 b(herry)1070
9908 y(blossoms)60 b(blo)5 b(om)59 b(and)f(later)h(fall)h(in)f(clouds.)
1281 10136 y(Blac)-5 b(k's)81 b(group)e(is)i(originally)g(aliv)-5
b(e,)87 b(and)79 b(if)h(Blac)-5 b(k)81 b(loses)h(the)e(k)-5
b(o)79 b(he)h(loses)h(a)f(h)-5 b(uge)1070 10365 y(amoun)g(t)51
b(b)-5 b(y)51 b(comparison.)76 b(In)52 b(con)-5 b(trast,)53
b(if)f(White)g(loses)h(the)f(k)-5 b(o)51 b(she)h(loses)h(only)f(a)f
(couple)1070 10593 y(of)64 b(p)5 b(oin)-5 b(ts.)98 b(Blac)-5
b(k)66 b(needs)f(h)-5 b(uge)64 b(k)-5 b(o)65 b(threats)h(to)f(\014gh)-5
b(t)64 b(the)h(k)-5 b(o,)67 b(while)f(White)f(needs)g(only)p
eop
%%Page: 100 13
100 12 bop 1070 577 a Fg(100)2065 b(WILLIAM)65 b(L.)g(SPIGHT)2417
4463 y @beginspecial 0 @llx 75.998932 @lly 201.997162
@urx 290.995911 @ury 1939.172607 @rwi 2063.970947 @rhi
@setspecial
%%BeginDocument: /u/levy/MSRI/Book42/spight/fig14.ps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: dvipsk 5.58f Copyright 1986, 1994 Radical Eye Software
%%Title: 589718.dvi
%%BoundingBox:  0 76 202 291

newpath
0 76 moveto 202 76 lineto 202 291 lineto 0 291 lineto closepath clip

%  #[info:
%									%
%									%
%	     _								%
%	    / \\  /'\\ -_-_  ,._-_  /'\\     _-_  -_-_	 _-_,		%
%	   || || || || || \\  ||   || ||    || \\ || \\ ||_.		%
%	   || || || || || ||  ||   || ||    ||/	  || ||	 ~ ||		%
%	   \\_-| \\,/  ||-'   \\,  \\,/	 <> \\,/  ||-'	,-_-		%
%	    /  \       |/			  |/			%
%	   '----`      '			  '			%
%									%
%		  Copyright (c) 1993  Jan van der Steen			%
%	       Centre for Mathematics and Computer Science		%
%		       Amsterdam, the Netherlands			%
%									%
%-----------------------------------------------------------------------%
%   You are not allowed to use this software in commercial software.	%
%   You are allowed to use this software in free software under the	%
%   condition that you maintain this integral message in the source.	%
%-----------------------------------------------------------------------%
% File	  : gopro.eps							%
% Purpose : Implement PostScript procedures to draw Go games		%
% Version : 1.28							%
% Modified: 07 Apr 1995 18:10:54					%
% Author  : Jan van der Steen (jansteen@cwi.nl)				%
%  #]info: 

/Liberty 100 dict def
Liberty begin

%  #[init:
%
% Default fonts for various applications
%
/bFont /Helvetica-Bold def	% Black numbers
/wFont /Helvetica      def	% White numbers
/fFont /Helvetica      def	% Grid markers
/mFont /Helvetica      def	% Metamarkers

/bF { bFont findfont yP scalefont setfont } bind def /bB -24 def /bH 752 def
/wF { wFont findfont yP scalefont setfont } bind def /wB -23 def /wH 733 def
/fF { fFont findfont yP scalefont setfont } bind def
/mF { mFont findfont yP scalefont setfont } bind def

%
% Abbreviations
%
/W 0 def			% White color
/B 1 def			% Black color

%
% The following sizes are in square units
%
/gW	.01   def	% Width of grid line
/bW	.10   def	% Width of border line
/wW	.02   def	% Width of a white stone
/bR	.48   def	% Radius of a black stone
/wR	.48   def	% Radius of a white stone
/hR	.10   def	% Radius of a hoshi point
/xP	.60   def	% Maximum width  of strings (number,indicator)
/yP	.80   def	% Maximum height of strings (number,indicator)
/axis	true  def	% Do we print coordinates too
/cache	true  def	% Do we use the stone cache

%
% The stone cache
%
cache {
    /EMPTY	 0 def
    /BLACK	-1 def
    /WHITE	-2 def
} if
%  #]init: 
%  #[tools:
%	 #[snap:

/snap {
    %
    % x y snap x" y"
    %
    % Make x and y snap on output device grid
    %
    transform round exch round exch itransform
} bind def

%	 #]snap: 
%	 #[centerstrn:

/centerstrn {
    %
    % string centerstrn --> --
    %
    % Print "string" balanced around (0,0) and make sure
    % it will fit in a "yP" x "yP" bounding box.
    %
    dup stringwidth pop
    %
    % Does stringwidth exceed allowed maximum
    %
    dup yP gt { dup yP exch div 1 scale } if

    %
    % Center the string
    %
    2 div neg yP .20 sub 2 div neg moveto show
} bind def

%	 #]centerstrn: 
%  #]tools: 
%  #[boardinit:

/boardinit {
    %
    % boardsize (9, 13, 19, ...) realsize (in cm) boardinit --> ---
    %
    /realsize  exch def
    /boardsize exch def

    %
    % Initialise the hoshipoints
    %
    /hoshipos
	boardsize 19 eq {6} {
	boardsize 13 eq {3} {
	boardsize  9 eq {2}
			{0}		% Nothing appropriate
		ifelse
	    } ifelse
	} ifelse
    def

    %
    % Initialise the coordinate system (square = unity)
    %
    realsize boardsize div 2.54 div 72 mul dup scale

    %
    % Get and load the caption font
    %
    % /Times-Roman findfont .5 scalefont setfont

    % .5 axis {1}{0} ifelse add dup translate
    % axis {1}{0} ifelse dup translate

    %
    % Initialise clipping to whole board, and region to NIL
    %
    /llbdx 0 def/llbdy llbdx boardsize 1 sub add def
    /urbdy 0 def/urbdx urbdy boardsize 1 sub add def
    /llrgx 0 def
    /urrgx 0 def
    /llrgy 0 def
    /urrgy 0 def

    %
    % Clean the current path
    %
    newpath
} bind def

%  #]boardinit: 
%  #[cache:
%	 #[cacheinit:

/cacheinit {
    %
    % For the stone cache
    %
    cache {
	/stonecache boardsize dup mul array def
	0 1 boardsize dup mul 1 sub {
	    stonecache exch EMPTY put
	} for
    } if
} bind def

%	 #]cacheinit: 
%	 #[cachedump:

/cachedump {
    0 1 360 {
	dup stonecache exch get
	dup EMPTY eq {
	    pop pop
	}{
	    BLACK eq {
		dup
		boardsize  mod boardsize 2 idiv sub exch
		boardsize idiv boardsize 2 idiv sub bs
	    }{
		dup
		boardsize  mod boardsize 2 idiv sub exch
		boardsize idiv boardsize 2 idiv sub ws
	    } ifelse
	} ifelse    
    } for
} bind def

%	 #]cachedump: 
%	 #[cachedelete:

/cachedelete {
    /y exch def
    /x exch def
    stonecache
	x boardsize 2 idiv add
	y boardsize 2 idiv add boardsize mul add
	EMPTY
    put
} bind def

%	 #]cachedelete: 
%	 #[cd:

/cd {
    %
    % Delete an entry from the cache (stone has been hit)
    % x y cd
    %
    cache { cachedelete }{ pop pop } ifelse
} bind def

%	 #]cd: 
%  #]cache: 
%  #[caption:

/caption {
    gsave
	0 -1 translate
	0 0 moveto show
    grestore
} bind def

%  #]caption: 
%  #[transboard:

/row  0 def
/col  0 def
/rmax 3 def	% 3 rows	(based on h = 146 diagrams)
/cmax 2 def	% 2 columns	(based on w = 146 diagrams)
/lm   2 def	% Left margin

/init {
    lm lm translate
    0 boardsize 2 add rmax 1 sub mul translate
} bind def

true {
    /transboard { 0 0 translate } bind def
}{
    /transboard {
	col boardsize 2 add mul neg
	row boardsize 2 add mul translate
	row rmax 1 sub lt { /row row 1 add def }{
	    /row 0 def
	    col cmax 1 sub lt { /col col 1 add def }{
		showpage restore save
	    } ifelse
	} ifelse
	col boardsize 2 add mul
	row boardsize 2 add mul neg translate
    } bind def
} ifelse

%  #]transboard: 
%  #[board:
%	 #[hoshidump:

/hoshidump {
    gsave
    boardsize 2 idiv dup translate
    0 setgray
    newpath	    0                   0               hR 0 360 arc fill
    newpath	    hoshipos            hoshipos        hR 0 360 arc fill
    newpath	    hoshipos            hoshipos neg    hR 0 360 arc fill
    newpath	    hoshipos neg        hoshipos        hR 0 360 arc fill
    newpath	    hoshipos neg        hoshipos neg    hR 0 360 arc fill
    boardsize 19 eq {
	newpath	        0               hoshipos        hR 0 360 arc fill
	newpath	        hoshipos        0               hR 0 360 arc fill
	newpath	        0               hoshipos neg    hR 0 360 arc fill
	newpath	        hoshipos neg    0               hR 0 360 arc fill
    } if
    grestore
} bind def

%	 #]hoshidump: 
%	 #[coordump:

/X-AXIS [
    (A)(B)(C)(D)(E)(F)(G)(H)(J)(K)(L)(M)(N)(O)(P)(Q)(R)(S)(T)
] def
/Y-AXIS [
    (1)(2)(3)(4)(5)(6)(7)(8)(9)(10)(11)(12)(13)(14)(15)(16)(17)(18)(19)
] def

/coordump {
    %
    % Surround the board with coordinates
    %
    fF
    newpath
    0 bdh moveto	% upper edge
    1 1 boardsize {
	1 sub X-AXIS exch get
	gsave currentpoint translate centerstrn grestore
	1 0 rmoveto
    } for
    newpath
    0 -1 moveto		% lower edge
    1 1 boardsize {
	1 sub X-AXIS exch get
	gsave currentpoint translate centerstrn grestore
	1 0 rmoveto
    } for
    newpath
    -1 0 moveto		% left edge
    1 1 boardsize {
	1 sub Y-AXIS exch get
	gsave currentpoint translate centerstrn grestore
	0 1 rmoveto
    } for
    newpath
    bdw 0 moveto	% right edge
    1 1 boardsize {
	1 sub Y-AXIS exch get
	gsave currentpoint translate centerstrn grestore
	0 1 rmoveto
    } for
    newpath
} bind def

%  #]coordump: 
%	 #[board:

/board {
    transboard					% Translate into position

    %
    % Clip region
    %
    % Example 1: Bottom slice
    % /bdx  0 def	% SGF coordinates (topdown, leftright)
    % /bdy  8 def	% SGF coordinates (topdown, leftright)
    % /bdw 19 def
    % /bdh 11 def
    %
    % Example 2: Top slice
    % /bdx  0 def
    % /bdy  0 def
    % /bdw 19 def
    % /bdh 10 def
    %
    /psclipx bdx def
    /psclipy boardsize bdy bdh add sub def
    /psclipw bdw def
    /pscliph bdh def

    axis {
	%
	% Add space for the coordinates
	%
	/psclipw psclipw 2 add def	% left/right side
	/pscliph pscliph 2 add def	% top/bottom side
    } if

    newpath
	0           0        moveto
	psclipw     0       rlineto
	0           pscliph rlineto
	psclipw neg 0       rlineto
    closepath
    gsave 1 setgray fill grestore clip
    newpath
    %
    % Translate to relative origin
    %
    psclipx .5 sub neg
    psclipy .5 sub neg translate

    axis {1}{0} ifelse dup translate

    %
    % Region
    %
    gsave
	llrgx urrgx ne llrgy urrgy ne or {
	    newpath
	    llrgx .5 sub llrgy .5 add moveto
	    llrgx .5 sub urrgy .5 sub lineto
	    urrgx .5 add urrgy .5 sub lineto
	    urrgx .5 add llrgy .5 add lineto
	    closepath
	    .75 setgray
	    % 255 255 div
	    % 175 255 div
	    % 125 255 div setrgbcolor
	    gsave gW setlinewidth stroke grestore fill
	    newpath
	} if
    grestore

    %
    % Horizontals
    %
    newpath
    1 1 boardsize 2 sub {
	0 exch snap moveto
	boardsize 1 sub 0 rlineto
    } for
    %
    % Verticals
    %
    1 1 boardsize 2 sub {
	0 snap moveto
	0 boardsize 1 sub rlineto
    } for
    gW setlinewidth stroke

    %
    % Borders
    %
    newpath
    0			0			moveto
    0			boardsize 1 sub		rlineto
    boardsize 1 sub	0			rlineto
    0			boardsize 1 sub neg	rlineto
    closepath
    bW setlinewidth stroke

    hoshidump					% Print the hoshi points
    cache { cachedump } if			% Print the cache contents
    axis  { coordump  } if			% Print the coordinates
    % grestore
} bind def

%	 #]board: 
%  #]board: 
%  #[stones:
%	 #[wst:

/wst {
    %
    % Numbered white stone
    %
    % [[s0 K0][...][sn Kn]] ox w x y wst --> --
    %
    %	x,y 	[0..boardsize-1]
    %	ox,w	[1/1000 unit]
    %
    gsave
	/y  exch def
	/x  exch def
	/h  wH   yP mul 1000 div def
	/w  exch yP mul 1000 div def
	/oy wB   yP mul 1000 div def
	/ox exch yP mul 1000 div def
	cache {
	    stonecache
		x boardsize 2 idiv add
		y boardsize 2 idiv add boardsize mul add
		WHITE
	    put
	} if
	x y translate
	0 0 ws
	0 setgray wF

	w xP gt { xP w div }{1} ifelse
	h yP gt { yP h div }{1} ifelse scale
	w 2 div ox add neg
	h 2 div oy add neg translate
	0 0 moveto
	1 1 counttomark 2 sub 2 idiv { pop neg yP mul 1000 div 0 rmoveto show } for
	pop % "mark" itself
    grestore
} bind def

%	 #]wst: 
%	 #[bst:

/bst {
    %
    % Numbered black stone
    %
    % [[s0 K0][...][sn Kn]] ox w x y bst --> --
    %
    %	x,y 	[0..boardsize-1]
    %	ox,w	[1/1000 unit]
    %
    %
    gsave
	/y  exch def
	/x  exch def
	/h  bH   yP mul 1000 div def
	/w  exch yP mul 1000 div def
	/oy bB   yP mul 1000 div def
	/ox exch yP mul 1000 div def
	cache {
	    stonecache
		x boardsize 2 idiv add
		y boardsize 2 idiv add boardsize mul add
		BLACK
	    put
	} if
	x y translate
	0 0 bs
	1 setgray bF

	w xP gt { xP w div }{1} ifelse
	h yP gt { yP h div }{1} ifelse scale
	w 2 div ox add neg
	h 2 div oy add neg translate
	0 0 moveto
	1 1 counttomark 2 sub 2 idiv { pop neg yP mul 1000 div 0 rmoveto show } for
	pop % "mark" itself
    grestore
} bind def

%	 #]bst: 
%	 #[ws:

/ws {
    %
    % x y ws --> --
    %
    % Unnumbered white stone
    %
    newpath
    wR 0 360 arc
    gsave
	1 setgray fill
    grestore
    wW setlinewidth
    0 setgray stroke
} bind def

%	 #]ws: 
%	 #[bs:

/bs {
    %
    % x y ws --> --
    %
    % Unnumbered black stone
    %
    newpath
    bR 0 360 arc
    0 setgray fill
} bind def

%	 #]bs: 
%  #]stones: 
%  #[stone signs:
%	 #[ps:

/ps {
    %
    % color x y ps --> --
    %
    % Plus sign in "color" stone
    %
    gsave
	/ycoor exch def
	/xcoor exch def
	/color exch def
	xcoor ycoor color 0 eq { ws } { bs } ifelse
	newpath
	    xcoor ycoor translate
	    .06 setlinewidth
	    color setgray
	    -.2 0  moveto
	     .2 0  lineto
	    0  -.2 moveto
	    0   .2 lineto
	stroke
    grestore
} bind def

%	 #]ps: 
%	 #[ms:

/ms {
    %
    % color x y ms --> --
    %
    % Minus sign in "color" stone
    %
    gsave
	/ycoor exch def
	/xcoor exch def
	/color exch def
	xcoor ycoor color 0 eq { ws } { bs } ifelse
	newpath
	    xcoor ycoor translate
	    .06 setlinewidth
	    color setgray
	    -.2 0 moveto
	     .2 0 lineto
	stroke
    grestore
} bind def

%	 #]ms: 
%	 #[square_e:

/square_e {
    %
    % color x y square_e --> --
    %
    % Empty square in "color" stone
    %
    gsave
	/ycoor exch def
	/xcoor exch def
	/color exch def
	xcoor ycoor color 0 eq { ws } { bs } ifelse
	newpath
	    xcoor ycoor translate
	    .04 setlinewidth
	    color setgray
	    -.2353   -.2353   moveto
	    -.2353    .2353   lineto
	     .2353    .2353   lineto
	     .2353   -.2353   lineto
	closepath
	stroke
    grestore
} bind def

%	 #]square_e: 
%	 #[square_f:

/square_f {
    %
    % color x y square_f --> --
    %
    % Filled square in "color" stone
    %
    gsave
	/ycoor exch def
	/xcoor exch def
	/color exch def
	xcoor ycoor color 0 eq { ws } { bs } ifelse
	newpath
	    xcoor ycoor translate
	    .04 setlinewidth
	    color setgray
	    -.2353   -.2353   moveto
	    -.2353    .2353   lineto
	     .2353    .2353   lineto
	     .2353   -.2353   lineto
	closepath
	fill
    grestore
} bind def

%	 #]square_f: 
%	 #[triang_e:

/triang_e {
    %
    % color x y triang_e --> --
    %
    % Empty triangle in "color" stone
    %
    gsave
	/ycoor exch def
	/xcoor exch def
	/color exch def
	xcoor ycoor color 0 eq { ws } { bs } ifelse
	newpath
	    xcoor ycoor translate
	    .04 setlinewidth
	    color setgray
	    -.2353   -.175   moveto
	     .4706   0       rlineto
	    -.2353    .500   rlineto
	closepath
	stroke
    grestore
} bind def

%	 #]triang_e: 
%	 #[triang_f:

/triang_f {
    %
    % color x y triang_f --> --
    %
    % Filled triangle in "color" stone
    %
    gsave
	/ycoor exch def
	/xcoor exch def
	/color exch def
	xcoor ycoor color 0 eq { ws } { bs } ifelse
	newpath
	    xcoor ycoor translate
	    .04 setlinewidth
	    color setgray
	    -.2353   -.175   moveto
	     .4706   0       rlineto
	    -.2353    .500   rlineto
	closepath
	fill
    grestore
} bind def

%	 #]triang_f: 
%	 #[shade:

/shade {
    %
    % color x y shade --> --
    %
    % Give the board some color at (x,y)
    %
    gsave
	translate		% To x y
	newpath
	    -.5 -.5 moveto
	    0 1 rlineto
	    1 0 rlineto
	    0 -1 rlineto
	closepath
	100 div setgray fill		% with color

	%
	% Restore grid
	%
	gW setlinewidth
	newpath -.5 0 moveto 1 0 rlineto stroke
	newpath 0 -.5 moveto 0 1 rlineto stroke
    grestore
} bind def

%	 #]shade: 
%	 #[bterr:

/bterr {
    %
    % x y bterr --> --
    %
    % Black territory indicator
    %
    gsave
	false {
	    %
	    % white stone filled 60% black
	    %
	    wR 0 360 arc
	    gsave
		.40 setgray fill
	    grestore
	    wW setlinewidth
	    0 setgray stroke
	}{
	    false {
		%
		% The character 'b'
		%
		gsave
		    2 copy wR 3 mul 4 div 0 360 arc 1 setgray fill
		grestore
		translate fF (b) centerstrn
	    }{
		%
		% A small black square
		%
		translate
		newpath
		    -.4 -.4  moveto
		    0.8 0   rlineto
		    0   0.8 rlineto
		    -.8 0   rlineto
		closepath
		gsave .25 setgray fill grestore stroke
	    } ifelse
	} ifelse
    grestore
} bind def

%	 #]bterr: 
%	 #[wterr:

/wterr {
    %
    % x y wterr --> --
    %
    % White territory indicator
    %
    gsave
	false {
	    %
	    % White stone filled 10% black
	    %
	    wR 0 360 arc
	    gsave
		.90 setgray fill
	    grestore
	    wW setlinewidth
	    0 setgray stroke
	}{
	    false {
		%
		% The character 'w'
		%
		gsave
		    2 copy wR 3 mul 4 div 0 360 arc 1 setgray fill
		grestore
		translate fF (w) centerstrn
	    }{
		%
		% A small white square
		%
		translate
		newpath
		    -.4 -.4  moveto
		    0.8 0   rlineto
		    0   0.8 rlineto
		    -.8 0   rlineto
		closepath
		gsave .75 setgray fill grestore stroke
	    } ifelse
	} ifelse
    grestore
} bind def

%	 #]wterr: 
%	 #[metamark:

/metamark {
    %
    % color x y (string) metamark --> --
    %
    % Arbitrairy mark in "color" stone
    %
    gsave
	/marker exch def
	/ycoor  exch def
	/xcoor  exch def
	/color  exch def
	xcoor ycoor color 0 eq { ws } { bs } ifelse
	xcoor ycoor translate
	mF
	marker stringwidth pop 2 div neg 0 translate
	color 1 eq { 1 setgray } if
	0 0 moveto marker show
    grestore
} bind def

%	 #]metamark: 
%  #]stone signs: 
%  #[field signs:
%	 #[fs:

/fs {
    %
    % string x y fs --> --
    %
    % Grid point indicator
    %
    gsave
	newpath
	    translate
	    0 0 wR 0 360 arc
	    1 setgray
	    fill
	0 setgray fF centerstrn
    grestore
} bind def

%	 #]fs: 
%	 #[arrow:

/arrow {
    %
    % angle x y arrow --> --
    %
    % Put an arrow from (x,y) in direction determined by angle
    %
    gsave
	translate
	0.5 setgray 0 0 hR 0 360 arc fill
	rotate
	newpath
	     0.0   0.25  moveto
	    -0.1   0.25  lineto
	     0.0   0.48  lineto
	     0.1   0.25  lineto
	closepath 0.5 setgray
	gsave stroke grestore
	fill
    grestore
} bind def

%	 #]arrow: 
%	 #[nl:

/nl {
    %
    % string x y nl --> --
    %
    % Numbered liberty --- Put Number next to a marked grid point
    %
    gsave
	translate
	newpath
	     0.0  -0.25  moveto
	    -0.25  0.0   lineto
	     0.0   0.25  lineto
	     0.25  0.0   lineto
	closepath 0.5 setgray fill
	.3 .3 translate
	.6 dup scale
	0 setgray fF centerstrn
    grestore
} bind def

%	 #]nl: 
%	 #[no:

/no {
    %
    % string x y no --> --
    %
    % Put Number next to grid point
    %
    gsave
	translate
	% 0.5 setgray 0 0 hR 0 360 arc fill
	.3 .3 translate
	.6 dup scale
	0 setgray fF centerstrn
    grestore
} bind def

%	 #]no: 
%	 #[ds:

/ds {
    %
    % string x y ds --> --
    %
    % Destructive Grid point indicator
    %
    gsave
	translate
	0 setgray fF centerstrn
    grestore
} bind def

%	 #]ds: 
%  #]field signs: 

end

Liberty begin
/cache false def
/axis  false def
19 10.20 boardinit
/bdx  0 def
/bdy  5 def
/bdw 13 def
/bdh 19 def
/rgx  0 def
/rgy  0 def
/rgw 19 def
/rgh 19 def
board
2 13 bs
4 13 bs
5 13 bs
6 13 bs
8 13 bs
9 13 ws
10 13 ws
11 13 bs
1 12 bs
4 12 bs
5 12 ws
mark (2) 0 
/bB -24 def
/bH 752 def
30 485 6 12 bst
8 12 ws
9 12 bs
10 12 ws
11 12 ws
12 12 bs
0 11 ws
1 11 bs
2 11 ws
3 11 ws
4 11 bs
5 11 ws
6 11 bs
mark (1) 37 
/wB -23 def
/wH 733 def
102 245 7 11 wst
8 11 ws
10 11 ws
11 11 ws
12 11 bs
1 10 ws
2 10 ws
3 10 bs
4 10 ws
5 10 ws
mark (3) 0 32 474 6 10 wst
7 10 bs
8 10 bs
9 10 ws
10 10 ws
11 10 bs
12 10 bs
1 9 bs
2 9 ws
3 9 bs
5 9 ws
mark (7) 0 46 474 6 9 wst
7 9 bs
8 9 ws
9 9 ws
10 9 bs
11 9 bs
12 9 ws
1 8 ws
2 8 bs
3 8 bs
5 8 ws
6 8 bs
7 8 bs
8 8 bs
9 8 ws
10 8 ws
11 8 ws
1 7 ws
2 7 ws
3 7 ws
4 7 ws
5 7 ws
6 7 ws
7 7 ws
8 7 bs
9 7 bs
10 7 ws
11 7 ws
12 7 ws
0 6 ws
1 6 bs
2 6 bs
3 6 bs
4 6 ws
5 6 bs
mark (9) 0 38 471 6 6 wst
mark (8) 0 22 503 7 6 bst
mark (a) 0 46 474 8 6 wst
9 6 bs
10 6 bs
11 6 bs
12 6 ws
1 5 ws
2 5 bs
3 5 bs
4 5 bs
5 5 bs
6 5 ws
7 5 ws
8 5 bs
(b) 9 5 fs
10 5 bs
11 5 ws
12 5 ws
1 4 ws
2 4 ws
3 4 bs
mark (0) 0 (1) 27 68 1005 5 4 bst
6 4 bs
7 4 bs
(c) 8 4 fs
mark (5) 0 35 478 9 4 wst
10 4 bs
11 4 ws
12 4 ws
2 3 ws
3 3 ws
4 3 ws
5 3 bs
8 3 bs
mark (6) 0 32 487 9 3 bst
10 3 ws
11 3 ws
12 3 bs
2 2 bs
4 2 ws
5 2 ws
6 2 bs
7 2 bs
8 2 bs
9 2 ws
11 2 ws
12 2 bs
4 1 ws
5 1 bs
7 1 bs
8 1 ws
9 1 ws
10 1 ws
12 1 ws
4 0 ws
5 0 ws
6 0 bs
7 0 bs
8 0 bs
9 0 ws
11 0 ws
12 0 ws
end
%%Trailer
userdict /end-hook known{end-hook}if
%%EOF

%%EndDocument
 @endspecial 5838 1003 a Fh(B)54 b(4)188 b(=)54 b(elsewhere)5838
1196 y(W)g(11)h(=)f(k)-5 b(o)55 b(\(a\))3333 4696 y Ff(Figure)i(14.)77
b Fe(Hanami)54 b(k)-5 b(o.)1070 5089 y Fm(small)53 b(ones.)75
b(It)52 b(is)h(di\016cult)g(for)d(Blac)-5 b(k)52 b(to)g(b)5
b(e)50 b(the)h(k)-5 b(omaster)52 b(of)f(White's)h(hanami)f(k)-5
b(o.)75 b(W)-15 b(e)1070 5318 y(are)64 b(just)f(b)5 b(eginning)64
b(the)g(theoretical)i(study)d(of)h(hanami)g(k)-5 b(os,)65
b(and)e(of)h(other)f(k)-5 b(os)64 b(whose)1070 5546 y(structure)58
b(a\013ects)h(the)g(question)g(of)f(whic)-5 b(h)59 b(pla)-5
b(y)g(er)59 b(is)g(k)-5 b(omaster)60 b(for)e(that)g(k)-5
b(o.)1281 5774 y(After)54 b(B)i(48)e(in)i(Figure)e(13)h(the)g(mast)h(v)
-10 b(alue)55 b(is)h Fi(\000)p Fm(2)4724 5705 y Fk(1)p
4724 5734 71 8 v 4724 5835 a(6)4815 5774 y Fm(.)77 b(There)54
b(are)h(3)g(k)-5 b(o)54 b(p)5 b(ositions)57 b(with)1070
6003 y(temp)5 b(erature)2091 5934 y Fk(1)p 2091 5963
V 2091 6063 a(3)2239 6003 y Fm(on)57 b(the)g(b)5 b(oard.)76
b(White)58 b(gets)f(t)-5 b(w)g(o)58 b(of)e(them)i(with)g(W)f(49)f(and)h
(W)f(51)h(and)1070 6231 y(Blac)-5 b(k)57 b(gets)f(one)g(with)g(B)h(50.)
76 b(\(W)56 b(51)g(do)5 b(es)55 b(not)h(lo)5 b(ok)56
b(lik)-5 b(e)57 b(a)f(k)-5 b(o,)56 b(but)f(if)i(Blac)-5
b(k)57 b(pla)-5 b(ys)56 b(\014rst)1070 6460 y(he)72 b(mak)-5
b(es)74 b(one)f(with)g(the)g(same)h(sequence)f(as)g(B)g(8,)j(W)d(9,)j
(B)e(10)e(in)i(Figure)e(14.\))122 b(The)1070 6688 y(result)59
b(is)h(a)f(2)1992 6619 y Fk(1)p 1992 6648 V 1992 6749
a(2)2141 6688 y Fm(p)5 b(oin)-5 b(t)59 b(win)g(for)f(White.)3553
7226 y Fl(Actual)75 b(Pla)-6 b(y)1281 7623 y Fm(Figure)47
b(15:)72 b(White)47 b(tak)-5 b(es)48 b(the)f(4)g(p)5
b(oin)-5 b(t)47 b(coup)5 b(on,)48 b(but)e(that)h(is)i(a)d(costly)j
(mistak)-5 b(e.)75 b(After)1070 7852 y(B)56 b(2)f({)g(W)g(3,)h(White)f
(has)h(lost)g(1)f(p)5 b(oin)-5 b(t)56 b(on)f(the)g(South)g(side)h(b)-5
b(y)55 b(comparison)g(with)h(Figure)1070 8080 y(13.)74
b(Then)49 b(after)h(B)g(4)g({)f(W)h(5,)h(White)f(has)f(lost)i(an)f
(additional)5323 8011 y Fk(5)p 5323 8040 V 5323 8141
a(8)5463 8080 y Fm(p)5 b(oin)-5 b(t)50 b(in)g(the)g(South)-5
b(w)g(est)1070 8309 y(v)g(ersus)77 b(pla)-5 b(ying)78
b(the)f(double)g(sen)-5 b(te)78 b(herself.)134 b(Since)78
b(Blac)-5 b(k)78 b(pla)-5 b(ys)78 b(B)f(2)g(and)g(B)g(4)h(with)1070
8537 y(sen)-5 b(te,)69 b(while)f(White)f(could)f(ha)-5
b(v)g(e)66 b(pla)-5 b(y)g(ed)67 b(with)g(sen)-5 b(te,)69
b(these)e(are)g(di\013erences)f(b)5 b(et)-5 b(w)g(een)1070
8766 y(v)g(ertical)72 b(thermographic)f(lines,)k(whic)-5
b(h)71 b(means)h(that)f(Blac)-5 b(k's)72 b(gains)f(ha)-5
b(v)g(e)70 b(come)i(at)f(no)1070 8994 y(cost.)78 b(\\Pla)-5
b(y)59 b(double)f(sen)-5 b(te)59 b(early)-15 b(.")1281
9223 y(After)57 b(W)g(5)h(the)g(mast)g(v)-10 b(alue)58
b(is)h Fi(\000)p Fm(2)3729 9153 y Fk(1)p 3729 9182 V
3729 9283 a(8)3820 9223 y Fm(,)f(and)e(the)i(am)-5 b(bien)g(t)59
b(temp)5 b(erature)58 b(has)f(dropp)5 b(ed)1070 9451
y(to)68 b(3)1403 9382 y Fk(1)p 1403 9411 V 1403 9512
a(2)1494 9451 y Fm(.)105 b(But)69 b(the)f(top)f(coup)5
b(on)67 b(and)g(the)g(East)h(side)h(are)f(miai,)j(and)c(Blac)-5
b(k)69 b(should)f(pla)-5 b(y)1070 9679 y(his)79 b(rev)-5
b(erse)79 b(sen)-5 b(te)80 b(sequence)e(in)i(the)e(North)h(\(B)g(14)g
({)g(W)f(11,)83 b(B)d(a\),)k(whic)-5 b(h)79 b(is)h(w)-5
b(orth)1070 9908 y(3)1214 9839 y Fk(5)p 1179 9868 141
8 v 1179 9969 a(12)1340 9908 y Fm(.)102 b(Instead,)69
b(B)e(6)g(is)h(w)-5 b(orth)66 b(only)h(2)3716 9839 y
Fk(5)p 3716 9868 71 8 v 3716 9969 a(8)3874 9908 y Fm(p)5
b(oin)-5 b(ts.)103 b(B)67 b(6)g(do)5 b(es)66 b(aim)i(at)f(B)g(10,)h
(whic)-5 b(h)67 b(giv)-5 b(es)1070 10136 y(Blac)g(k)68
b(sev)-5 b(eral)69 b(k)-5 b(o)67 b(threats)h(against)g(White's)g(South)
-5 b(w)g(est)67 b(corner,)i(but)e(with)h(otherwise)1070
10365 y(ortho)5 b(do)-5 b(x)66 b(pla)-5 b(y)-15 b(,)70
b(these)e(threats)g(do)f(not)g(seem)h(to)g(gain)f(an)-5
b(ything,)69 b(nor)e(did)h(Blac)-5 b(k)68 b(gain)1070
10593 y(from)58 b(them)h(in)g(the)g(game.)p eop
%%Page: 101 14
101 13 bop 1926 577 a Fg(GO)65 b(THERMOGRAPHY:)f(THE)g(4/21/98)e
(JIANG{R)l(UI)h(ENDGAME)631 b(101)1038 5733 y @beginspecial
0 @llx 0 @lly 289.995941 @urx 289.995941 @ury 2783.960693
@rwi 2783.960693 @rhi @setspecial
%%BeginDocument: /u/levy/MSRI/Book42/spight/fig15.ps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: dvipsk 5.58f Copyright 1986, 1994 Radical Eye Software
%%Title: 589718.dvi
%%BoundingBox: 0 0 290 290
%  #[info:
%									%
%									%
%	     _								%
%	    / \\  /'\\ -_-_  ,._-_  /'\\     _-_  -_-_	 _-_,		%
%	   || || || || || \\  ||   || ||    || \\ || \\ ||_.		%
%	   || || || || || ||  ||   || ||    ||/	  || ||	 ~ ||		%
%	   \\_-| \\,/  ||-'   \\,  \\,/	 <> \\,/  ||-'	,-_-		%
%	    /  \       |/			  |/			%
%	   '----`      '			  '			%
%									%
%		  Copyright (c) 1993  Jan van der Steen			%
%	       Centre for Mathematics and Computer Science		%
%		       Amsterdam, the Netherlands			%
%									%
%-----------------------------------------------------------------------%
%   You are not allowed to use this software in commercial software.	%
%   You are allowed to use this software in free software under the	%
%   condition that you maintain this integral message in the source.	%
%-----------------------------------------------------------------------%
% File	  : gopro.eps							%
% Purpose : Implement PostScript procedures to draw Go games		%
% Version : 1.28							%
% Modified: 07 Apr 1995 18:10:54					%
% Author  : Jan van der Steen (jansteen@cwi.nl)				%
%  #]info: 

/Liberty 100 dict def
Liberty begin

%  #[init:
%
% Default fonts for various applications
%
/bFont /Helvetica-Bold def	% Black numbers
/wFont /Helvetica      def	% White numbers
/fFont /Helvetica      def	% Grid markers
/mFont /Helvetica      def	% Metamarkers

/bF { bFont findfont yP scalefont setfont } bind def /bB -24 def /bH 752 def
/wF { wFont findfont yP scalefont setfont } bind def /wB -23 def /wH 733 def
/fF { fFont findfont yP scalefont setfont } bind def
/mF { mFont findfont yP scalefont setfont } bind def

%
% Abbreviations
%
/W 0 def			% White color
/B 1 def			% Black color

%
% The following sizes are in square units
%
/gW	.01   def	% Width of grid line
/bW	.10   def	% Width of border line
/wW	.02   def	% Width of a white stone
/bR	.48   def	% Radius of a black stone
/wR	.48   def	% Radius of a white stone
/hR	.10   def	% Radius of a hoshi point
/xP	.60   def	% Maximum width  of strings (number,indicator)
/yP	.80   def	% Maximum height of strings (number,indicator)
/axis	true  def	% Do we print coordinates too
/cache	true  def	% Do we use the stone cache

%
% The stone cache
%
cache {
    /EMPTY	 0 def
    /BLACK	-1 def
    /WHITE	-2 def
} if
%  #]init: 
%  #[tools:
%	 #[snap:

/snap {
    %
    % x y snap x" y"
    %
    % Make x and y snap on output device grid
    %
    transform round exch round exch itransform
} bind def

%	 #]snap: 
%	 #[centerstrn:

/centerstrn {
    %
    % string centerstrn --> --
    %
    % Print "string" balanced around (0,0) and make sure
    % it will fit in a "yP" x "yP" bounding box.
    %
    dup stringwidth pop
    %
    % Does stringwidth exceed allowed maximum
    %
    dup yP gt { dup yP exch div 1 scale } if

    %
    % Center the string
    %
    2 div neg yP .20 sub 2 div neg moveto show
} bind def

%	 #]centerstrn: 
%  #]tools: 
%  #[boardinit:

/boardinit {
    %
    % boardsize (9, 13, 19, ...) realsize (in cm) boardinit --> ---
    %
    /realsize  exch def
    /boardsize exch def

    %
    % Initialise the hoshipoints
    %
    /hoshipos
	boardsize 19 eq {6} {
	boardsize 13 eq {3} {
	boardsize  9 eq {2}
			{0}		% Nothing appropriate
		ifelse
	    } ifelse
	} ifelse
    def

    %
    % Initialise the coordinate system (square = unity)
    %
    realsize boardsize div 2.54 div 72 mul dup scale

    %
    % Get and load the caption font
    %
    % /Times-Roman findfont .5 scalefont setfont

    % .5 axis {1}{0} ifelse add dup translate
    % axis {1}{0} ifelse dup translate

    %
    % Initialise clipping to whole board, and region to NIL
    %
    /llbdx 0 def/llbdy llbdx boardsize 1 sub add def
    /urbdy 0 def/urbdx urbdy boardsize 1 sub add def
    /llrgx 0 def
    /urrgx 0 def
    /llrgy 0 def
    /urrgy 0 def

    %
    % Clean the current path
    %
    newpath
} bind def

%  #]boardinit: 
%  #[cache:
%	 #[cacheinit:

/cacheinit {
    %
    % For the stone cache
    %
    cache {
	/stonecache boardsize dup mul array def
	0 1 boardsize dup mul 1 sub {
	    stonecache exch EMPTY put
	} for
    } if
} bind def

%	 #]cacheinit: 
%	 #[cachedump:

/cachedump {
    0 1 360 {
	dup stonecache exch get
	dup EMPTY eq {
	    pop pop
	}{
	    BLACK eq {
		dup
		boardsize  mod boardsize 2 idiv sub exch
		boardsize idiv boardsize 2 idiv sub bs
	    }{
		dup
		boardsize  mod boardsize 2 idiv sub exch
		boardsize idiv boardsize 2 idiv sub ws
	    } ifelse
	} ifelse    
    } for
} bind def

%	 #]cachedump: 
%	 #[cachedelete:

/cachedelete {
    /y exch def
    /x exch def
    stonecache
	x boardsize 2 idiv add
	y boardsize 2 idiv add boardsize mul add
	EMPTY
    put
} bind def

%	 #]cachedelete: 
%	 #[cd:

/cd {
    %
    % Delete an entry from the cache (stone has been hit)
    % x y cd
    %
    cache { cachedelete }{ pop pop } ifelse
} bind def

%	 #]cd: 
%  #]cache: 
%  #[caption:

/caption {
    gsave
	0 -1 translate
	0 0 moveto show
    grestore
} bind def

%  #]caption: 
%  #[transboard:

/row  0 def
/col  0 def
/rmax 3 def	% 3 rows	(based on h = 146 diagrams)
/cmax 2 def	% 2 columns	(based on w = 146 diagrams)
/lm   2 def	% Left margin

/init {
    lm lm translate
    0 boardsize 2 add rmax 1 sub mul translate
} bind def

true {
    /transboard { 0 0 translate } bind def
}{
    /transboard {
	col boardsize 2 add mul neg
	row boardsize 2 add mul translate
	row rmax 1 sub lt { /row row 1 add def }{
	    /row 0 def
	    col cmax 1 sub lt { /col col 1 add def }{
		showpage restore save
	    } ifelse
	} ifelse
	col boardsize 2 add mul
	row boardsize 2 add mul neg translate
    } bind def
} ifelse

%  #]transboard: 
%  #[board:
%	 #[hoshidump:

/hoshidump {
    gsave
    boardsize 2 idiv dup translate
    0 setgray
    newpath	    0                   0               hR 0 360 arc fill
    newpath	    hoshipos            hoshipos        hR 0 360 arc fill
    newpath	    hoshipos            hoshipos neg    hR 0 360 arc fill
    newpath	    hoshipos neg        hoshipos        hR 0 360 arc fill
    newpath	    hoshipos neg        hoshipos neg    hR 0 360 arc fill
    boardsize 19 eq {
	newpath	        0               hoshipos        hR 0 360 arc fill
	newpath	        hoshipos        0               hR 0 360 arc fill
	newpath	        0               hoshipos neg    hR 0 360 arc fill
	newpath	        hoshipos neg    0               hR 0 360 arc fill
    } if
    grestore
} bind def

%	 #]hoshidump: 
%	 #[coordump:

/X-AXIS [
    (A)(B)(C)(D)(E)(F)(G)(H)(J)(K)(L)(M)(N)(O)(P)(Q)(R)(S)(T)
] def
/Y-AXIS [
    (1)(2)(3)(4)(5)(6)(7)(8)(9)(10)(11)(12)(13)(14)(15)(16)(17)(18)(19)
] def

/coordump {
    %
    % Surround the board with coordinates
    %
    fF
    newpath
    0 bdh moveto	% upper edge
    1 1 boardsize {
	1 sub X-AXIS exch get
	gsave currentpoint translate centerstrn grestore
	1 0 rmoveto
    } for
    newpath
    0 -1 moveto		% lower edge
    1 1 boardsize {
	1 sub X-AXIS exch get
	gsave currentpoint translate centerstrn grestore
	1 0 rmoveto
    } for
    newpath
    -1 0 moveto		% left edge
    1 1 boardsize {
	1 sub Y-AXIS exch get
	gsave currentpoint translate centerstrn grestore
	0 1 rmoveto
    } for
    newpath
    bdw 0 moveto	% right edge
    1 1 boardsize {
	1 sub Y-AXIS exch get
	gsave currentpoint translate centerstrn grestore
	0 1 rmoveto
    } for
    newpath
} bind def

%  #]coordump: 
%	 #[board:

/board {
    transboard					% Translate into position

    %
    % Clip region
    %
    % Example 1: Bottom slice
    % /bdx  0 def	% SGF coordinates (topdown, leftright)
    % /bdy  8 def	% SGF coordinates (topdown, leftright)
    % /bdw 19 def
    % /bdh 11 def
    %
    % Example 2: Top slice
    % /bdx  0 def
    % /bdy  0 def
    % /bdw 19 def
    % /bdh 10 def
    %
    /psclipx bdx def
    /psclipy boardsize bdy bdh add sub def
    /psclipw bdw def
    /pscliph bdh def

    axis {
	%
	% Add space for the coordinates
	%
	/psclipw psclipw 2 add def	% left/right side
	/pscliph pscliph 2 add def	% top/bottom side
    } if

    newpath
	0           0        moveto
	psclipw     0       rlineto
	0           pscliph rlineto
	psclipw neg 0       rlineto
    closepath
    gsave 1 setgray fill grestore clip
    newpath
    %
    % Translate to relative origin
    %
    psclipx .5 sub neg
    psclipy .5 sub neg translate

    axis {1}{0} ifelse dup translate

    %
    % Region
    %
    gsave
	llrgx urrgx ne llrgy urrgy ne or {
	    newpath
	    llrgx .5 sub llrgy .5 add moveto
	    llrgx .5 sub urrgy .5 sub lineto
	    urrgx .5 add urrgy .5 sub lineto
	    urrgx .5 add llrgy .5 add lineto
	    closepath
	    .75 setgray
	    % 255 255 div
	    % 175 255 div
	    % 125 255 div setrgbcolor
	    gsave gW setlinewidth stroke grestore fill
	    newpath
	} if
    grestore

    %
    % Horizontals
    %
    newpath
    1 1 boardsize 2 sub {
	0 exch snap moveto
	boardsize 1 sub 0 rlineto
    } for
    %
    % Verticals
    %
    1 1 boardsize 2 sub {
	0 snap moveto
	0 boardsize 1 sub rlineto
    } for
    gW setlinewidth stroke

    %
    % Borders
    %
    newpath
    0			0			moveto
    0			boardsize 1 sub		rlineto
    boardsize 1 sub	0			rlineto
    0			boardsize 1 sub neg	rlineto
    closepath
    bW setlinewidth stroke

    hoshidump					% Print the hoshi points
    cache { cachedump } if			% Print the cache contents
    axis  { coordump  } if			% Print the coordinates
    % grestore
} bind def

%	 #]board: 
%  #]board: 
%  #[stones:
%	 #[wst:

/wst {
    %
    % Numbered white stone
    %
    % [[s0 K0][...][sn Kn]] ox w x y wst --> --
    %
    %	x,y 	[0..boardsize-1]
    %	ox,w	[1/1000 unit]
    %
    gsave
	/y  exch def
	/x  exch def
	/h  wH   yP mul 1000 div def
	/w  exch yP mul 1000 div def
	/oy wB   yP mul 1000 div def
	/ox exch yP mul 1000 div def
	cache {
	    stonecache
		x boardsize 2 idiv add
		y boardsize 2 idiv add boardsize mul add
		WHITE
	    put
	} if
	x y translate
	0 0 ws
	0 setgray wF

	w xP gt { xP w div }{1} ifelse
	h yP gt { yP h div }{1} ifelse scale
	w 2 div ox add neg
	h 2 div oy add neg translate
	0 0 moveto
	1 1 counttomark 2 sub 2 idiv { pop neg yP mul 1000 div 0 rmoveto show } for
	pop % "mark" itself
    grestore
} bind def

%	 #]wst: 
%	 #[bst:

/bst {
    %
    % Numbered black stone
    %
    % [[s0 K0][...][sn Kn]] ox w x y bst --> --
    %
    %	x,y 	[0..boardsize-1]
    %	ox,w	[1/1000 unit]
    %
    %
    gsave
	/y  exch def
	/x  exch def
	/h  bH   yP mul 1000 div def
	/w  exch yP mul 1000 div def
	/oy bB   yP mul 1000 div def
	/ox exch yP mul 1000 div def
	cache {
	    stonecache
		x boardsize 2 idiv add
		y boardsize 2 idiv add boardsize mul add
		BLACK
	    put
	} if
	x y translate
	0 0 bs
	1 setgray bF

	w xP gt { xP w div }{1} ifelse
	h yP gt { yP h div }{1} ifelse scale
	w 2 div ox add neg
	h 2 div oy add neg translate
	0 0 moveto
	1 1 counttomark 2 sub 2 idiv { pop neg yP mul 1000 div 0 rmoveto show } for
	pop % "mark" itself
    grestore
} bind def

%	 #]bst: 
%	 #[ws:

/ws {
    %
    % x y ws --> --
    %
    % Unnumbered white stone
    %
    newpath
    wR 0 360 arc
    gsave
	1 setgray fill
    grestore
    wW setlinewidth
    0 setgray stroke
} bind def

%	 #]ws: 
%	 #[bs:

/bs {
    %
    % x y ws --> --
    %
    % Unnumbered black stone
    %
    newpath
    bR 0 360 arc
    0 setgray fill
} bind def

%	 #]bs: 
%  #]stones: 
%  #[stone signs:
%	 #[ps:

/ps {
    %
    % color x y ps --> --
    %
    % Plus sign in "color" stone
    %
    gsave
	/ycoor exch def
	/xcoor exch def
	/color exch def
	xcoor ycoor color 0 eq { ws } { bs } ifelse
	newpath
	    xcoor ycoor translate
	    .06 setlinewidth
	    color setgray
	    -.2 0  moveto
	     .2 0  lineto
	    0  -.2 moveto
	    0   .2 lineto
	stroke
    grestore
} bind def

%	 #]ps: 
%	 #[ms:

/ms {
    %
    % color x y ms --> --
    %
    % Minus sign in "color" stone
    %
    gsave
	/ycoor exch def
	/xcoor exch def
	/color exch def
	xcoor ycoor color 0 eq { ws } { bs } ifelse
	newpath
	    xcoor ycoor translate
	    .06 setlinewidth
	    color setgray
	    -.2 0 moveto
	     .2 0 lineto
	stroke
    grestore
} bind def

%	 #]ms: 
%	 #[square_e:

/square_e {
    %
    % color x y square_e --> --
    %
    % Empty square in "color" stone
    %
    gsave
	/ycoor exch def
	/xcoor exch def
	/color exch def
	xcoor ycoor color 0 eq { ws } { bs } ifelse
	newpath
	    xcoor ycoor translate
	    .04 setlinewidth
	    color setgray
	    -.2353   -.2353   moveto
	    -.2353    .2353   lineto
	     .2353    .2353   lineto
	     .2353   -.2353   lineto
	closepath
	stroke
    grestore
} bind def

%	 #]square_e: 
%	 #[square_f:

/square_f {
    %
    % color x y square_f --> --
    %
    % Filled square in "color" stone
    %
    gsave
	/ycoor exch def
	/xcoor exch def
	/color exch def
	xcoor ycoor color 0 eq { ws } { bs } ifelse
	newpath
	    xcoor ycoor translate
	    .04 setlinewidth
	    color setgray
	    -.2353   -.2353   moveto
	    -.2353    .2353   lineto
	     .2353    .2353   lineto
	     .2353   -.2353   lineto
	closepath
	fill
    grestore
} bind def

%	 #]square_f: 
%	 #[triang_e:

/triang_e {
    %
    % color x y triang_e --> --
    %
    % Empty triangle in "color" stone
    %
    gsave
	/ycoor exch def
	/xcoor exch def
	/color exch def
	xcoor ycoor color 0 eq { ws } { bs } ifelse
	newpath
	    xcoor ycoor translate
	    .04 setlinewidth
	    color setgray
	    -.2353   -.175   moveto
	     .4706   0       rlineto
	    -.2353    .500   rlineto
	closepath
	stroke
    grestore
} bind def

%	 #]triang_e: 
%	 #[triang_f:

/triang_f {
    %
    % color x y triang_f --> --
    %
    % Filled triangle in "color" stone
    %
    gsave
	/ycoor exch def
	/xcoor exch def
	/color exch def
	xcoor ycoor color 0 eq { ws } { bs } ifelse
	newpath
	    xcoor ycoor translate
	    .04 setlinewidth
	    color setgray
	    -.2353   -.175   moveto
	     .4706   0       rlineto
	    -.2353    .500   rlineto
	closepath
	fill
    grestore
} bind def

%	 #]triang_f: 
%	 #[shade:

/shade {
    %
    % color x y shade --> --
    %
    % Give the board some color at (x,y)
    %
    gsave
	translate		% To x y
	newpath
	    -.5 -.5 moveto
	    0 1 rlineto
	    1 0 rlineto
	    0 -1 rlineto
	closepath
	100 div setgray fill		% with color

	%
	% Restore grid
	%
	gW setlinewidth
	newpath -.5 0 moveto 1 0 rlineto stroke
	newpath 0 -.5 moveto 0 1 rlineto stroke
    grestore
} bind def

%	 #]shade: 
%	 #[bterr:

/bterr {
    %
    % x y bterr --> --
    %
    % Black territory indicator
    %
    gsave
	false {
	    %
	    % white stone filled 60% black
	    %
	    wR 0 360 arc
	    gsave
		.40 setgray fill
	    grestore
	    wW setlinewidth
	    0 setgray stroke
	}{
	    false {
		%
		% The character 'b'
		%
		gsave
		    2 copy wR 3 mul 4 div 0 360 arc 1 setgray fill
		grestore
		translate fF (b) centerstrn
	    }{
		%
		% A small black square
		%
		translate
		newpath
		    -.4 -.4  moveto
		    0.8 0   rlineto
		    0   0.8 rlineto
		    -.8 0   rlineto
		closepath
		gsave .25 setgray fill grestore stroke
	    } ifelse
	} ifelse
    grestore
} bind def

%	 #]bterr: 
%	 #[wterr:

/wterr {
    %
    % x y wterr --> --
    %
    % White territory indicator
    %
    gsave
	false {
	    %
	    % White stone filled 10% black
	    %
	    wR 0 360 arc
	    gsave
		.90 setgray fill
	    grestore
	    wW setlinewidth
	    0 setgray stroke
	}{
	    false {
		%
		% The character 'w'
		%
		gsave
		    2 copy wR 3 mul 4 div 0 360 arc 1 setgray fill
		grestore
		translate fF (w) centerstrn
	    }{
		%
		% A small white square
		%
		translate
		newpath
		    -.4 -.4  moveto
		    0.8 0   rlineto
		    0   0.8 rlineto
		    -.8 0   rlineto
		closepath
		gsave .75 setgray fill grestore stroke
	    } ifelse
	} ifelse
    grestore
} bind def

%	 #]wterr: 
%	 #[metamark:

/metamark {
    %
    % color x y (string) metamark --> --
    %
    % Arbitrairy mark in "color" stone
    %
    gsave
	/marker exch def
	/ycoor  exch def
	/xcoor  exch def
	/color  exch def
	xcoor ycoor color 0 eq { ws } { bs } ifelse
	xcoor ycoor translate
	mF
	marker stringwidth pop 2 div neg 0 translate
	color 1 eq { 1 setgray } if
	0 0 moveto marker show
    grestore
} bind def

%	 #]metamark: 
%  #]stone signs: 
%  #[field signs:
%	 #[fs:

/fs {
    %
    % string x y fs --> --
    %
    % Grid point indicator
    %
    gsave
	newpath
	    translate
	    0 0 wR 0 360 arc
	    1 setgray
	    fill
	0 setgray fF centerstrn
    grestore
} bind def

%	 #]fs: 
%	 #[arrow:

/arrow {
    %
    % angle x y arrow --> --
    %
    % Put an arrow from (x,y) in direction determined by angle
    %
    gsave
	translate
	0.5 setgray 0 0 hR 0 360 arc fill
	rotate
	newpath
	     0.0   0.25  moveto
	    -0.1   0.25  lineto
	     0.0   0.48  lineto
	     0.1   0.25  lineto
	closepath 0.5 setgray
	gsave stroke grestore
	fill
    grestore
} bind def

%	 #]arrow: 
%	 #[nl:

/nl {
    %
    % string x y nl --> --
    %
    % Numbered liberty --- Put Number next to a marked grid point
    %
    gsave
	translate
	newpath
	     0.0  -0.25  moveto
	    -0.25  0.0   lineto
	     0.0   0.25  lineto
	     0.25  0.0   lineto
	closepath 0.5 setgray fill
	.3 .3 translate
	.6 dup scale
	0 setgray fF centerstrn
    grestore
} bind def

%	 #]nl: 
%	 #[no:

/no {
    %
    % string x y no --> --
    %
    % Put Number next to grid point
    %
    gsave
	translate
	% 0.5 setgray 0 0 hR 0 360 arc fill
	.3 .3 translate
	.6 dup scale
	0 setgray fF centerstrn
    grestore
} bind def

%	 #]no: 
%	 #[ds:

/ds {
    %
    % string x y ds --> --
    %
    % Destructive Grid point indicator
    %
    gsave
	translate
	0 setgray fF centerstrn
    grestore
} bind def

%	 #]ds: 
%  #]field signs: 

end

Liberty begin
/cache false def
/axis  false def
19 10.20 boardinit
/bdx  0 def
/bdy  0 def
/bdw 19 def
/bdh 19 def
/rgx  0 def
/rgy  0 def
/rgw 19 def
/rgh 19 def
board
1 18 bs
5 18 bs
6 18 bs
7 18 ws
mark (2) 0 (1) 27 
/bB -24 def
/bH 752 def
68 1003 13 18 bst
mark (7) 0 (1) 37 
/wB -23 def
/wH 733 def
102 974 15 18 wst
0 17 ws
1 17 bs
3 17 bs
5 17 bs
6 17 ws
7 17 ws
8 17 ws
9 17 ws
mark (1) 74 (1) 37 102 727 10 17 wst
mark (4) 0 (1) 27 68 1010 11 17 bst
14 17 bs
15 17 ws
0 16 ws
1 16 bs
2 16 bs
3 16 bs
4 16 bs
5 16 ws
7 16 ws
8 16 bs
mark (5) 0 (1) 37 102 967 10 16 wst
mark (3) 0 (1) 37 102 960 11 16 wst
12 16 bs
13 16 bs
14 16 ws
15 16 ws
1 15 ws
2 15 ws
3 15 ws
4 15 ws
5 15 ws
6 15 ws
7 15 ws
9 15 bs
10 15 bs
11 15 ws
12 15 bs
14 15 bs
15 15 ws
6 14 bs
8 14 bs
9 14 bs
10 14 ws
11 14 bs
12 14 bs
13 14 bs
14 14 bs
15 14 ws
17 14 bs
2 13 bs
4 13 bs
5 13 bs
6 13 bs
8 13 bs
9 13 ws
10 13 ws
11 13 bs
13 13 bs
15 13 ws
16 13 ws
17 13 ws
1 12 bs
4 12 bs
5 12 ws
8 12 ws
9 12 bs
10 12 ws
11 12 ws
12 12 bs
13 12 bs
14 12 ws
15 12 ws
16 12 bs
17 12 bs
1 11 bs
2 11 ws
3 11 ws
4 11 bs
5 11 ws
6 11 bs
mark (6) 0 (1) 27 68 1007 7 11 bst
8 11 ws
10 11 ws
11 11 ws
12 11 bs
13 11 bs
14 11 bs
15 11 ws
16 11 bs
17 11 ws
1 10 ws
2 10 ws
3 10 bs
4 10 ws
5 10 ws
7 10 bs
8 10 bs
9 10 ws
10 10 ws
11 10 bs
12 10 bs
13 10 bs
14 10 ws
15 10 ws
16 10 bs
17 10 ws
1 9 bs
2 9 ws
3 9 bs
5 9 ws
7 9 bs
8 9 ws
9 9 ws
10 9 bs
11 9 bs
12 9 ws
13 9 bs
14 9 bs
15 9 bs
16 9 ws
17 9 ws
1 8 ws
2 8 bs
3 8 bs
5 8 ws
6 8 bs
7 8 bs
8 8 bs
9 8 ws
10 8 ws
11 8 ws
13 8 ws
14 8 bs
15 8 ws
16 8 ws
mark (0) 0 (1) 27 68 1005 0 7 bst
1 7 ws
2 7 ws
3 7 ws
5 7 ws
6 7 ws
7 7 ws
8 7 bs
9 7 bs
10 7 ws
11 7 ws
12 7 ws
13 7 ws
14 7 ws
15 7 bs
16 7 bs
17 7 bs
1 6 bs
mark (6) 0 32 487 2 6 bst
4 6 ws
5 6 bs
10 6 bs
11 6 bs
12 6 ws
14 6 bs
15 6 bs
1 5 ws
2 5 bs
3 5 bs
mark (7) 0 46 474 4 5 wst
5 5 bs
6 5 ws
7 5 ws
8 5 bs
10 5 bs
11 5 ws
12 5 ws
14 5 bs
15 5 ws
16 5 ws
17 5 bs
18 5 bs
1 4 ws
2 4 ws
3 4 bs
mark (8) 0 22 503 4 4 bst
6 4 bs
7 4 bs
10 4 bs
11 4 ws
12 4 ws
13 4 ws
14 4 ws
15 4 bs
16 4 ws
17 4 ws
2 3 ws
3 3 ws
mark (4) 0 24 498 4 3 bst
5 3 bs
8 3 bs
10 3 ws
11 3 ws
12 3 bs
14 3 bs
15 3 bs
16 3 bs
17 3 ws
2 2 bs
mark (5) 0 35 478 3 2 wst
4 2 ws
5 2 ws
6 2 bs
8 2 bs
9 2 ws
11 2 ws
12 2 bs
15 2 bs
16 2 bs
17 2 bs
18 2 ws
4 1 ws
mark (2) 0 30 485 5 1 bst
6 1 ws
7 1 bs
8 1 ws
9 1 ws
10 1 ws
12 1 ws
13 1 bs
14 1 bs
16 1 bs
17 1 ws
mark (3) 0 32 474 4 0 wst
5 0 ws
6 0 bs
7 0 bs
8 0 bs
11 0 ws
13 0 ws
(a) 13 17 fs
end
%%Trailer
userdict /end-hook known{end-hook}if
%%EOF

%%EndDocument
 @endspecial 5948 1001 a Fh(W)54 b(1)84 b(=)55 b(4)f(pt)h(cpn)5948
1194 y(W)f(9)84 b(=)55 b(3)6617 1130 y Fp(1)p 6617 1159
65 7 v 6617 1248 a(2)6757 1194 y Fh(pt)g(cpn)5948 1388
y(B)g(18)f(=)h(3)f(pt)h(cpn)3064 5975 y Ff(Figure)i(15.)77
b Fe(Actual)54 b(pla)-5 b(y)54 b(\(1{18\).)1281 6444
y Fm(After)h(W)h(9)f(tak)-5 b(es)57 b(the)f(3)2974 6375
y Fk(1)p 2973 6404 71 8 v 2973 6505 a(2)3120 6444 y Fm(p)5
b(oin)-5 b(t)57 b(coup)5 b(on,)54 b(Blac)-5 b(k)57 b(should)f(tak)-5
b(e)56 b(the)g(3)6058 6375 y Fk(1)p 6058 6404 V 6058
6505 a(2)6205 6444 y Fm(p)5 b(oin)-5 b(t)56 b(pla)-5
b(y)56 b(in)1070 6673 y(the)65 b(East.)96 b(B)65 b(10)f(giv)-5
b(es)66 b(Blac)-5 b(k)66 b(sev)-5 b(eral)65 b(k)-5 b(o)65
b(threats)g(in)g(the)f(South)-5 b(w)g(est)65 b(corner)f(to)h(mak)-5
b(e)1070 6901 y(Blac)g(k)55 b(k)-5 b(omaster)55 b(in)g(general,)h(but)e
(B)g(10)h(is)g(w)-5 b(orth)54 b(only)h(2)5042 6832 y
Fk(1)p 5042 6861 V 5042 6962 a(4)5187 6901 y Fm(p)5 b(oin)-5
b(ts,)56 b(plus)6150 6832 y Fk(1)p 6150 6861 V 6150 6962
a(2)6295 6901 y Fm(the)f(v)-10 b(alue)55 b(of)1070 7130
y(the)65 b(threats.)99 b(That)66 b(v)-10 b(alue)66 b(app)5
b(ears)64 b(to)i(b)5 b(e)4119 7061 y Fk(1)p 4119 7090
V 4119 7190 a(6)4276 7130 y Fm(p)g(oin)-5 b(t,)67 b(increasing)f(the)g
(v)-10 b(alue)66 b(of)f(B)h(10)f(to)1070 7358 y(2)1179
7289 y Fk(1)p 1179 7318 V 1179 7419 a(3)1328 7358 y Fm(p)5
b(oin)-5 b(ts.)2637 8994 y @beginspecial 0 @llx 0 @lly
175.997528 @urx 77.998901 @ury 1689.575928 @rwi 748.789307
@rhi @setspecial
%%BeginDocument: /u/levy/MSRI/Book42/spight/fig16.ps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: dvipsk 5.58f Copyright 1986, 1994 Radical Eye Software
%%Title: 589718.dvi
%%BoundingBox: 0 0 176 78

%  #[info:
%									%
%									%
%	     _								%
%	    / \\  /'\\ -_-_  ,._-_  /'\\     _-_  -_-_	 _-_,		%
%	   || || || || || \\  ||   || ||    || \\ || \\ ||_.		%
%	   || || || || || ||  ||   || ||    ||/	  || ||	 ~ ||		%
%	   \\_-| \\,/  ||-'   \\,  \\,/	 <> \\,/  ||-'	,-_-		%
%	    /  \       |/			  |/			%
%	   '----`      '			  '			%
%									%
%		  Copyright (c) 1993  Jan van der Steen			%
%	       Centre for Mathematics and Computer Science		%
%		       Amsterdam, the Netherlands			%
%									%
%-----------------------------------------------------------------------%
%   You are not allowed to use this software in commercial software.	%
%   You are allowed to use this software in free software under the	%
%   condition that you maintain this integral message in the source.	%
%-----------------------------------------------------------------------%
% File	  : gopro.eps							%
% Purpose : Implement PostScript procedures to draw Go games		%
% Version : 1.28							%
% Modified: 07 Apr 1995 18:10:54					%
% Author  : Jan van der Steen (jansteen@cwi.nl)				%
%  #]info: 

/Liberty 100 dict def
Liberty begin

%  #[init:
%
% Default fonts for various applications
%
/bFont /Helvetica-Bold def	% Black numbers
/wFont /Helvetica      def	% White numbers
/fFont /Helvetica      def	% Grid markers
/mFont /Helvetica      def	% Metamarkers

/bF { bFont findfont yP scalefont setfont } bind def /bB -24 def /bH 752 def
/wF { wFont findfont yP scalefont setfont } bind def /wB -23 def /wH 733 def
/fF { fFont findfont yP scalefont setfont } bind def
/mF { mFont findfont yP scalefont setfont } bind def

%
% Abbreviations
%
/W 0 def			% White color
/B 1 def			% Black color

%
% The following sizes are in square units
%
/gW	.01   def	% Width of grid line
/bW	.10   def	% Width of border line
/wW	.02   def	% Width of a white stone
/bR	.48   def	% Radius of a black stone
/wR	.48   def	% Radius of a white stone
/hR	.10   def	% Radius of a hoshi point
/xP	.60   def	% Maximum width  of strings (number,indicator)
/yP	.80   def	% Maximum height of strings (number,indicator)
/axis	true  def	% Do we print coordinates too
/cache	true  def	% Do we use the stone cache

%
% The stone cache
%
cache {
    /EMPTY	 0 def
    /BLACK	-1 def
    /WHITE	-2 def
} if
%  #]init: 
%  #[tools:
%	 #[snap:

/snap {
    %
    % x y snap x" y"
    %
    % Make x and y snap on output device grid
    %
    transform round exch round exch itransform
} bind def

%	 #]snap: 
%	 #[centerstrn:

/centerstrn {
    %
    % string centerstrn --> --
    %
    % Print "string" balanced around (0,0) and make sure
    % it will fit in a "yP" x "yP" bounding box.
    %
    dup stringwidth pop
    %
    % Does stringwidth exceed allowed maximum
    %
    dup yP gt { dup yP exch div 1 scale } if

    %
    % Center the string
    %
    2 div neg yP .20 sub 2 div neg moveto show
} bind def

%	 #]centerstrn: 
%  #]tools: 
%  #[boardinit:

/boardinit {
    %
    % boardsize (9, 13, 19, ...) realsize (in cm) boardinit --> ---
    %
    /realsize  exch def
    /boardsize exch def

    %
    % Initialise the hoshipoints
    %
    /hoshipos
	boardsize 19 eq {6} {
	boardsize 13 eq {3} {
	boardsize  9 eq {2}
			{0}		% Nothing appropriate
		ifelse
	    } ifelse
	} ifelse
    def

    %
    % Initialise the coordinate system (square = unity)
    %
    realsize boardsize div 2.54 div 72 mul dup scale

    %
    % Get and load the caption font
    %
    % /Times-Roman findfont .5 scalefont setfont

    % .5 axis {1}{0} ifelse add dup translate
    % axis {1}{0} ifelse dup translate

    %
    % Initialise clipping to whole board, and region to NIL
    %
    /llbdx 0 def/llbdy llbdx boardsize 1 sub add def
    /urbdy 0 def/urbdx urbdy boardsize 1 sub add def
    /llrgx 0 def
    /urrgx 0 def
    /llrgy 0 def
    /urrgy 0 def

    %
    % Clean the current path
    %
    newpath
} bind def

%  #]boardinit: 
%  #[cache:
%	 #[cacheinit:

/cacheinit {
    %
    % For the stone cache
    %
    cache {
	/stonecache boardsize dup mul array def
	0 1 boardsize dup mul 1 sub {
	    stonecache exch EMPTY put
	} for
    } if
} bind def

%	 #]cacheinit: 
%	 #[cachedump:

/cachedump {
    0 1 360 {
	dup stonecache exch get
	dup EMPTY eq {
	    pop pop
	}{
	    BLACK eq {
		dup
		boardsize  mod boardsize 2 idiv sub exch
		boardsize idiv boardsize 2 idiv sub bs
	    }{
		dup
		boardsize  mod boardsize 2 idiv sub exch
		boardsize idiv boardsize 2 idiv sub ws
	    } ifelse
	} ifelse    
    } for
} bind def

%	 #]cachedump: 
%	 #[cachedelete:

/cachedelete {
    /y exch def
    /x exch def
    stonecache
	x boardsize 2 idiv add
	y boardsize 2 idiv add boardsize mul add
	EMPTY
    put
} bind def

%	 #]cachedelete: 
%	 #[cd:

/cd {
    %
    % Delete an entry from the cache (stone has been hit)
    % x y cd
    %
    cache { cachedelete }{ pop pop } ifelse
} bind def

%	 #]cd: 
%  #]cache: 
%  #[caption:

/caption {
    gsave
	0 -1 translate
	0 0 moveto show
    grestore
} bind def

%  #]caption: 
%  #[transboard:

/row  0 def
/col  0 def
/rmax 3 def	% 3 rows	(based on h = 146 diagrams)
/cmax 2 def	% 2 columns	(based on w = 146 diagrams)
/lm   2 def	% Left margin

/init {
    lm lm translate
    0 boardsize 2 add rmax 1 sub mul translate
} bind def

true {
    /transboard { 0 0 translate } bind def
}{
    /transboard {
	col boardsize 2 add mul neg
	row boardsize 2 add mul translate
	row rmax 1 sub lt { /row row 1 add def }{
	    /row 0 def
	    col cmax 1 sub lt { /col col 1 add def }{
		showpage restore save
	    } ifelse
	} ifelse
	col boardsize 2 add mul
	row boardsize 2 add mul neg translate
    } bind def
} ifelse

%  #]transboard: 
%  #[board:
%	 #[hoshidump:

/hoshidump {
    gsave
    boardsize 2 idiv dup translate
    0 setgray
    newpath	    0                   0               hR 0 360 arc fill
    newpath	    hoshipos            hoshipos        hR 0 360 arc fill
    newpath	    hoshipos            hoshipos neg    hR 0 360 arc fill
    newpath	    hoshipos neg        hoshipos        hR 0 360 arc fill
    newpath	    hoshipos neg        hoshipos neg    hR 0 360 arc fill
    boardsize 19 eq {
	newpath	        0               hoshipos        hR 0 360 arc fill
	newpath	        hoshipos        0               hR 0 360 arc fill
	newpath	        0               hoshipos neg    hR 0 360 arc fill
	newpath	        hoshipos neg    0               hR 0 360 arc fill
    } if
    grestore
} bind def

%	 #]hoshidump: 
%	 #[coordump:

/X-AXIS [
    (A)(B)(C)(D)(E)(F)(G)(H)(J)(K)(L)(M)(N)(O)(P)(Q)(R)(S)(T)
] def
/Y-AXIS [
    (1)(2)(3)(4)(5)(6)(7)(8)(9)(10)(11)(12)(13)(14)(15)(16)(17)(18)(19)
] def

/coordump {
    %
    % Surround the board with coordinates
    %
    fF
    newpath
    0 bdh moveto	% upper edge
    1 1 boardsize {
	1 sub X-AXIS exch get
	gsave currentpoint translate centerstrn grestore
	1 0 rmoveto
    } for
    newpath
    0 -1 moveto		% lower edge
    1 1 boardsize {
	1 sub X-AXIS exch get
	gsave currentpoint translate centerstrn grestore
	1 0 rmoveto
    } for
    newpath
    -1 0 moveto		% left edge
    1 1 boardsize {
	1 sub Y-AXIS exch get
	gsave currentpoint translate centerstrn grestore
	0 1 rmoveto
    } for
    newpath
    bdw 0 moveto	% right edge
    1 1 boardsize {
	1 sub Y-AXIS exch get
	gsave currentpoint translate centerstrn grestore
	0 1 rmoveto
    } for
    newpath
} bind def

%  #]coordump: 
%	 #[board:

/board {
    transboard					% Translate into position

    %
    % Clip region
    %
    % Example 1: Bottom slice
    % /bdx  0 def	% SGF coordinates (topdown, leftright)
    % /bdy  8 def	% SGF coordinates (topdown, leftright)
    % /bdw 19 def
    % /bdh 11 def
    %
    % Example 2: Top slice
    % /bdx  0 def
    % /bdy  0 def
    % /bdw 19 def
    % /bdh 10 def
    %
    /psclipx bdx def
    /psclipy boardsize bdy bdh add sub def
    /psclipw bdw def
    /pscliph bdh def

    axis {
	%
	% Add space for the coordinates
	%
	/psclipw psclipw 2 add def	% left/right side
	/pscliph pscliph 2 add def	% top/bottom side
    } if

    newpath
	0           0        moveto
	psclipw     0       rlineto
	0           pscliph rlineto
	psclipw neg 0       rlineto
    closepath
    gsave 1 setgray fill grestore clip
    newpath
    %
    % Translate to relative origin
    %
    psclipx .5 sub neg
    psclipy .5 sub neg translate

    axis {1}{0} ifelse dup translate

    %
    % Region
    %
    gsave
	llrgx urrgx ne llrgy urrgy ne or {
	    newpath
	    llrgx .5 sub llrgy .5 add moveto
	    llrgx .5 sub urrgy .5 sub lineto
	    urrgx .5 add urrgy .5 sub lineto
	    urrgx .5 add llrgy .5 add lineto
	    closepath
	    .75 setgray
	    % 255 255 div
	    % 175 255 div
	    % 125 255 div setrgbcolor
	    gsave gW setlinewidth stroke grestore fill
	    newpath
	} if
    grestore

    %
    % Horizontals
    %
    newpath
    1 1 boardsize 2 sub {
	0 exch snap moveto
	boardsize 1 sub 0 rlineto
    } for
    %
    % Verticals
    %
    1 1 boardsize 2 sub {
	0 snap moveto
	0 boardsize 1 sub rlineto
    } for
    gW setlinewidth stroke

    %
    % Borders
    %
    newpath
    0			0			moveto
    0			boardsize 1 sub		rlineto
    boardsize 1 sub	0			rlineto
    0			boardsize 1 sub neg	rlineto
    closepath
    bW setlinewidth stroke

    hoshidump					% Print the hoshi points
    cache { cachedump } if			% Print the cache contents
    axis  { coordump  } if			% Print the coordinates
    % grestore
} bind def

%	 #]board: 
%  #]board: 
%  #[stones:
%	 #[wst:

/wst {
    %
    % Numbered white stone
    %
    % [[s0 K0][...][sn Kn]] ox w x y wst --> --
    %
    %	x,y 	[0..boardsize-1]
    %	ox,w	[1/1000 unit]
    %
    gsave
	/y  exch def
	/x  exch def
	/h  wH   yP mul 1000 div def
	/w  exch yP mul 1000 div def
	/oy wB   yP mul 1000 div def
	/ox exch yP mul 1000 div def
	cache {
	    stonecache
		x boardsize 2 idiv add
		y boardsize 2 idiv add boardsize mul add
		WHITE
	    put
	} if
	x y translate
	0 0 ws
	0 setgray wF

	w xP gt { xP w div }{1} ifelse
	h yP gt { yP h div }{1} ifelse scale
	w 2 div ox add neg
	h 2 div oy add neg translate
	0 0 moveto
	1 1 counttomark 2 sub 2 idiv { pop neg yP mul 1000 div 0 rmoveto show } for
	pop % "mark" itself
    grestore
} bind def

%	 #]wst: 
%	 #[bst:

/bst {
    %
    % Numbered black stone
    %
    % [[s0 K0][...][sn Kn]] ox w x y bst --> --
    %
    %	x,y 	[0..boardsize-1]
    %	ox,w	[1/1000 unit]
    %
    %
    gsave
	/y  exch def
	/x  exch def
	/h  bH   yP mul 1000 div def
	/w  exch yP mul 1000 div def
	/oy bB   yP mul 1000 div def
	/ox exch yP mul 1000 div def
	cache {
	    stonecache
		x boardsize 2 idiv add
		y boardsize 2 idiv add boardsize mul add
		BLACK
	    put
	} if
	x y translate
	0 0 bs
	1 setgray bF

	w xP gt { xP w div }{1} ifelse
	h yP gt { yP h div }{1} ifelse scale
	w 2 div ox add neg
	h 2 div oy add neg translate
	0 0 moveto
	1 1 counttomark 2 sub 2 idiv { pop neg yP mul 1000 div 0 rmoveto show } for
	pop % "mark" itself
    grestore
} bind def

%	 #]bst: 
%	 #[ws:

/ws {
    %
    % x y ws --> --
    %
    % Unnumbered white stone
    %
    newpath
    wR 0 360 arc
    gsave
	1 setgray fill
    grestore
    wW setlinewidth
    0 setgray stroke
} bind def

%	 #]ws: 
%	 #[bs:

/bs {
    %
    % x y ws --> --
    %
    % Unnumbered black stone
    %
    newpath
    bR 0 360 arc
    0 setgray fill
} bind def

%	 #]bs: 
%  #]stones: 
%  #[stone signs:
%	 #[ps:

/ps {
    %
    % color x y ps --> --
    %
    % Plus sign in "color" stone
    %
    gsave
	/ycoor exch def
	/xcoor exch def
	/color exch def
	xcoor ycoor color 0 eq { ws } { bs } ifelse
	newpath
	    xcoor ycoor translate
	    .06 setlinewidth
	    color setgray
	    -.2 0  moveto
	     .2 0  lineto
	    0  -.2 moveto
	    0   .2 lineto
	stroke
    grestore
} bind def

%	 #]ps: 
%	 #[ms:

/ms {
    %
    % color x y ms --> --
    %
    % Minus sign in "color" stone
    %
    gsave
	/ycoor exch def
	/xcoor exch def
	/color exch def
	xcoor ycoor color 0 eq { ws } { bs } ifelse
	newpath
	    xcoor ycoor translate
	    .06 setlinewidth
	    color setgray
	    -.2 0 moveto
	     .2 0 lineto
	stroke
    grestore
} bind def

%	 #]ms: 
%	 #[square_e:

/square_e {
    %
    % color x y square_e --> --
    %
    % Empty square in "color" stone
    %
    gsave
	/ycoor exch def
	/xcoor exch def
	/color exch def
	xcoor ycoor color 0 eq { ws } { bs } ifelse
	newpath
	    xcoor ycoor translate
	    .04 setlinewidth
	    color setgray
	    -.2353   -.2353   moveto
	    -.2353    .2353   lineto
	     .2353    .2353   lineto
	     .2353   -.2353   lineto
	closepath
	stroke
    grestore
} bind def

%	 #]square_e: 
%	 #[square_f:

/square_f {
    %
    % color x y square_f --> --
    %
    % Filled square in "color" stone
    %
    gsave
	/ycoor exch def
	/xcoor exch def
	/color exch def
	xcoor ycoor color 0 eq { ws } { bs } ifelse
	newpath
	    xcoor ycoor translate
	    .04 setlinewidth
	    color setgray
	    -.2353   -.2353   moveto
	    -.2353    .2353   lineto
	     .2353    .2353   lineto
	     .2353   -.2353   lineto
	closepath
	fill
    grestore
} bind def

%	 #]square_f: 
%	 #[triang_e:

/triang_e {
    %
    % color x y triang_e --> --
    %
    % Empty triangle in "color" stone
    %
    gsave
	/ycoor exch def
	/xcoor exch def
	/color exch def
	xcoor ycoor color 0 eq { ws } { bs } ifelse
	newpath
	    xcoor ycoor translate
	    .04 setlinewidth
	    color setgray
	    -.2353   -.175   moveto
	     .4706   0       rlineto
	    -.2353    .500   rlineto
	closepath
	stroke
    grestore
} bind def

%	 #]triang_e: 
%	 #[triang_f:

/triang_f {
    %
    % color x y triang_f --> --
    %
    % Filled triangle in "color" stone
    %
    gsave
	/ycoor exch def
	/xcoor exch def
	/color exch def
	xcoor ycoor color 0 eq { ws } { bs } ifelse
	newpath
	    xcoor ycoor translate
	    .04 setlinewidth
	    color setgray
	    -.2353   -.175   moveto
	     .4706   0       rlineto
	    -.2353    .500   rlineto
	closepath
	fill
    grestore
} bind def

%	 #]triang_f: 
%	 #[shade:

/shade {
    %
    % color x y shade --> --
    %
    % Give the board some color at (x,y)
    %
    gsave
	translate		% To x y
	newpath
	    -.5 -.5 moveto
	    0 1 rlineto
	    1 0 rlineto
	    0 -1 rlineto
	closepath
	100 div setgray fill		% with color

	%
	% Restore grid
	%
	gW setlinewidth
	newpath -.5 0 moveto 1 0 rlineto stroke
	newpath 0 -.5 moveto 0 1 rlineto stroke
    grestore
} bind def

%	 #]shade: 
%	 #[bterr:

/bterr {
    %
    % x y bterr --> --
    %
    % Black territory indicator
    %
    gsave
	false {
	    %
	    % white stone filled 60% black
	    %
	    wR 0 360 arc
	    gsave
		.40 setgray fill
	    grestore
	    wW setlinewidth
	    0 setgray stroke
	}{
	    false {
		%
		% The character 'b'
		%
		gsave
		    2 copy wR 3 mul 4 div 0 360 arc 1 setgray fill
		grestore
		translate fF (b) centerstrn
	    }{
		%
		% A small black square
		%
		translate
		newpath
		    -.4 -.4  moveto
		    0.8 0   rlineto
		    0   0.8 rlineto
		    -.8 0   rlineto
		closepath
		gsave .25 setgray fill grestore stroke
	    } ifelse
	} ifelse
    grestore
} bind def

%	 #]bterr: 
%	 #[wterr:

/wterr {
    %
    % x y wterr --> --
    %
    % White territory indicator
    %
    gsave
	false {
	    %
	    % White stone filled 10% black
	    %
	    wR 0 360 arc
	    gsave
		.90 setgray fill
	    grestore
	    wW setlinewidth
	    0 setgray stroke
	}{
	    false {
		%
		% The character 'w'
		%
		gsave
		    2 copy wR 3 mul 4 div 0 360 arc 1 setgray fill
		grestore
		translate fF (w) centerstrn
	    }{
		%
		% A small white square
		%
		translate
		newpath
		    -.4 -.4  moveto
		    0.8 0   rlineto
		    0   0.8 rlineto
		    -.8 0   rlineto
		closepath
		gsave .75 setgray fill grestore stroke
	    } ifelse
	} ifelse
    grestore
} bind def

%	 #]wterr: 
%	 #[metamark:

/metamark {
    %
    % color x y (string) metamark --> --
    %
    % Arbitrairy mark in "color" stone
    %
    gsave
	/marker exch def
	/ycoor  exch def
	/xcoor  exch def
	/color  exch def
	xcoor ycoor color 0 eq { ws } { bs } ifelse
	xcoor ycoor translate
	mF
	marker stringwidth pop 2 div neg 0 translate
	color 1 eq { 1 setgray } if
	0 0 moveto marker show
    grestore
} bind def

%	 #]metamark: 
%  #]stone signs: 
%  #[field signs:
%	 #[fs:

/fs {
    %
    % string x y fs --> --
    %
    % Grid point indicator
    %
    gsave
	newpath
	    translate
	    0 0 wR 0 360 arc
	    1 setgray
	    fill
	0 setgray fF centerstrn
    grestore
} bind def

%	 #]fs: 
%	 #[arrow:

/arrow {
    %
    % angle x y arrow --> --
    %
    % Put an arrow from (x,y) in direction determined by angle
    %
    gsave
	translate
	0.5 setgray 0 0 hR 0 360 arc fill
	rotate
	newpath
	     0.0   0.25  moveto
	    -0.1   0.25  lineto
	     0.0   0.48  lineto
	     0.1   0.25  lineto
	closepath 0.5 setgray
	gsave stroke grestore
	fill
    grestore
} bind def

%	 #]arrow: 
%	 #[nl:

/nl {
    %
    % string x y nl --> --
    %
    % Numbered liberty --- Put Number next to a marked grid point
    %
    gsave
	translate
	newpath
	     0.0  -0.25  moveto
	    -0.25  0.0   lineto
	     0.0   0.25  lineto
	     0.25  0.0   lineto
	closepath 0.5 setgray fill
	.3 .3 translate
	.6 dup scale
	0 setgray fF centerstrn
    grestore
} bind def

%	 #]nl: 
%	 #[no:

/no {
    %
    % string x y no --> --
    %
    % Put Number next to grid point
    %
    gsave
	translate
	% 0.5 setgray 0 0 hR 0 360 arc fill
	.3 .3 translate
	.6 dup scale
	0 setgray fF centerstrn
    grestore
} bind def

%	 #]no: 
%	 #[ds:

/ds {
    %
    % string x y ds --> --
    %
    % Destructive Grid point indicator
    %
    gsave
	translate
	0 setgray fF centerstrn
    grestore
} bind def

%	 #]ds: 
%  #]field signs: 

end

Liberty begin
/cache false def
/axis  false def
19 10.20 boardinit
/bdx  7 def
/bdy  0 def
/bdw 19 def
/bdh  5 def
/rgx  0 def
/rgy  0 def
/rgw 19 def
/rgh 19 def
board
7 18 ws
mark (2) 0 
/bB -24 def
/bH 752 def
30 485 13 18 bst
mark (3) 0 
/wB -23 def
/wH 733 def
32 474 15 18 wst
(a) 16 18 fs
7 17 ws
8 17 ws
9 17 ws
mark (1) 37 102 245 10 17 wst
11 17 ws
14 17 bs
15 17 ws
(b) 16 17 fs
7 16 ws
8 16 bs
11 16 bs
12 16 bs
13 16 bs
14 16 ws
15 16 ws
7 15 ws
9 15 bs
10 15 bs
12 15 bs
14 15 bs
15 15 ws
8 14 bs
9 14 bs
10 14 ws
11 14 bs
12 14 bs
13 14 bs
14 14 bs
15 14 ws
17 14 bs
8 13 bs
9 13 ws
10 13 ws
11 13 bs
13 13 bs
15 13 ws
16 13 ws
17 13 ws
end
%%Trailer
userdict /end-hook known{end-hook}if
%%EOF

%%EndDocument
 @endspecial 3722 9227 a Ff(Figure)57 b(16.)1281 9679
y Fm(After)68 b(B)g(10)g(White)h(should)f(pla)-5 b(y)68
b(her)g(sen)-5 b(te)69 b(in)g(the)f(North,)i(reac)-5
b(hing)68 b(the)g(p)5 b(osition)1070 9908 y(in)70 b(Figure)f(16.)110
b(When)69 b(White)h(is)g(k)-5 b(omaster)70 b(Blac)-5
b(k)71 b(replies)g(to)f(W)f(1)g(at)h(1)f(p)5 b(oin)-5
b(t)70 b(b)5 b(elo)-5 b(w)1070 10136 y(2,)59 b(but)f(since)j(Blac)-5
b(k)60 b(is)g(k)-5 b(omaster,)60 b(B)f(2)g(is)i(ortho)5
b(do)-5 b(x.)78 b(If)59 b(White)h(omits)h(W)d(3,)h(Blac)-5
b(k)61 b(can)1070 10365 y(pla)-5 b(y)60 b(there,)f(and)g(then)g(if)i(W)
e(a,)g(B)h(b)g(mak)-5 b(es)60 b(a)f(large)h(k)-5 b(o.)81
b(The)60 b(mast)g(v)-10 b(alue)60 b(when)f(Blac)-5 b(k)1070
10593 y(is)73 b(k)-5 b(omaster)72 b(is)2238 10524 y Fk(1)p
2238 10553 V 2238 10654 a(6)2401 10593 y Fm(p)5 b(oin)-5
b(t)72 b(greater)g(than)f(when)g(White)i(is)g(k)-5 b(omaster.)118
b(There)72 b(are)f(some)p eop
%%Page: 102 15
102 14 bop 1070 577 a Fg(102)2065 b(WILLIAM)65 b(L.)g(SPIGHT)1070
998 y Fm(small)70 b(k)-5 b(os)67 b(and)g(p)5 b(oten)-5
b(tial)69 b(small)g(k)-5 b(os)68 b(on)f(the)h(b)5 b(oard,)68
b(but)f(it)i(app)5 b(ears)66 b(that)i(Blac)-5 b(k)69
b(can)1070 1227 y(realize)60 b(no)e(gain)h(in)g(their)g(mast)h(v)-10
b(alues)59 b(from)f(b)5 b(eing)59 b(k)-5 b(omaster.)1281
1455 y(Returning)52 b(to)f(Figure)h(15,)h(the)f(fact)f(that)h(Blac)-5
b(k)53 b(is)g(no)-5 b(w)51 b(k)-5 b(omaster)52 b(after)g(B)g(10)g(mak)
-5 b(es)1070 1684 y(a)62 b(pla)-5 b(y)63 b(at)g(14)f(in)i(the)e(North)g
(double)h(sen)-5 b(te.)91 b(White)63 b(should)f(pla)-5
b(y)63 b(W)g(14)f({)g(B)i(13)e(in)h(the)1070 1912 y(North)e(and)g(then)
g(mak)-5 b(e)62 b(the)g(3)3211 1843 y Fk(1)p 3211 1872
71 8 v 3211 1973 a(2)3363 1912 y Fm(p)5 b(oin)-5 b(t)62
b(pla)-5 b(y)62 b(in)g(the)g(East.)87 b(Both)62 b(pla)-5
b(y)g(ers)63 b(o)-5 b(v)g(erlo)5 b(ok)61 b(the)1070 2141
y(pla)-5 b(y)59 b(in)g(the)f(East.)1281 2369 y(B)72 b(12)g(is)h(sen)-5
b(te,)75 b(but)d(ma)-5 b(y)72 b(not)g(b)5 b(e)71 b(b)5
b(est.)119 b(Blac)-5 b(k)73 b(could)f(try)f(the)h(aggressiv)-5
b(e)73 b(B)g(17)e({)1070 2598 y(W)57 b(a,)h(B)g(12,)g(making)g(a)g
(large)g(k)-5 b(o.)78 b(Jiang)58 b(9-dan)e(judged)h(not)h(to)g(mak)-5
b(e)58 b(that)g(pla)-5 b(y)58 b(in)g(the)1070 2826 y(game.)107
b(The)68 b(k)-5 b(o)68 b(\014gh)-5 b(t)68 b(is)i(di\016cult)g(and)d
(has)h(not)h(y)-5 b(et)68 b(b)5 b(een)68 b(analyzed.)107
b(Assuming)69 b(that)1070 3054 y(Blac)-5 b(k)67 b(should)e(not)g(pla)-5
b(y)66 b(at)g(17,)h(his)f(ortho)5 b(do)-5 b(x)65 b(pla)-5
b(y)66 b(is)g(B)g(a,)h(a)f(gote)g(w)-5 b(orth)65 b(3)6510
2985 y Fk(1)p 6510 3014 V 6510 3115 a(6)6667 3054 y Fm(p)5
b(oin)-5 b(ts.)1070 3283 y(In)58 b(that)h(case)g(B)g(12)g(giv)-5
b(es)59 b(up)3165 3214 y Fk(1)p 3165 3243 V 3165 3343
a(3)3315 3283 y Fm(p)5 b(oin)-5 b(t)59 b(v)-5 b(ersus)58
b(the)h(mast)g(v)-10 b(alue.)1012 8514 y @beginspecial
0 @llx 0 @lly 289.995941 @urx 289.995941 @ury 2783.960693
@rwi 2783.960693 @rhi @setspecial
%%BeginDocument: /u/levy/MSRI/Book42/spight/fig17.ps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: dvipsk 5.58f Copyright 1986, 1994 Radical Eye Software
%%Title: 589718.dvi
%%BoundingBox: 0 0 290 290

%  #[info:
%									%
%									%
%	     _								%
%	    / \\  /'\\ -_-_  ,._-_  /'\\     _-_  -_-_	 _-_,		%
%	   || || || || || \\  ||   || ||    || \\ || \\ ||_.		%
%	   || || || || || ||  ||   || ||    ||/	  || ||	 ~ ||		%
%	   \\_-| \\,/  ||-'   \\,  \\,/	 <> \\,/  ||-'	,-_-		%
%	    /  \       |/			  |/			%
%	   '----`      '			  '			%
%									%
%		  Copyright (c) 1993  Jan van der Steen			%
%	       Centre for Mathematics and Computer Science		%
%		       Amsterdam, the Netherlands			%
%									%
%-----------------------------------------------------------------------%
%   You are not allowed to use this software in commercial software.	%
%   You are allowed to use this software in free software under the	%
%   condition that you maintain this integral message in the source.	%
%-----------------------------------------------------------------------%
% File	  : gopro.eps							%
% Purpose : Implement PostScript procedures to draw Go games		%
% Version : 1.28							%
% Modified: 07 Apr 1995 18:10:54					%
% Author  : Jan van der Steen (jansteen@cwi.nl)				%
%  #]info: 

/Liberty 100 dict def
Liberty begin

%  #[init:
%
% Default fonts for various applications
%
/bFont /Helvetica-Bold def	% Black numbers
/wFont /Helvetica      def	% White numbers
/fFont /Helvetica      def	% Grid markers
/mFont /Helvetica      def	% Metamarkers

/bF { bFont findfont yP scalefont setfont } bind def /bB -24 def /bH 752 def
/wF { wFont findfont yP scalefont setfont } bind def /wB -23 def /wH 733 def
/fF { fFont findfont yP scalefont setfont } bind def
/mF { mFont findfont yP scalefont setfont } bind def

%
% Abbreviations
%
/W 0 def			% White color
/B 1 def			% Black color

%
% The following sizes are in square units
%
/gW	.01   def	% Width of grid line
/bW	.10   def	% Width of border line
/wW	.02   def	% Width of a white stone
/bR	.48   def	% Radius of a black stone
/wR	.48   def	% Radius of a white stone
/hR	.10   def	% Radius of a hoshi point
/xP	.60   def	% Maximum width  of strings (number,indicator)
/yP	.80   def	% Maximum height of strings (number,indicator)
/axis	true  def	% Do we print coordinates too
/cache	true  def	% Do we use the stone cache

%
% The stone cache
%
cache {
    /EMPTY	 0 def
    /BLACK	-1 def
    /WHITE	-2 def
} if
%  #]init: 
%  #[tools:
%	 #[snap:

/snap {
    %
    % x y snap x" y"
    %
    % Make x and y snap on output device grid
    %
    transform round exch round exch itransform
} bind def

%	 #]snap: 
%	 #[centerstrn:

/centerstrn {
    %
    % string centerstrn --> --
    %
    % Print "string" balanced around (0,0) and make sure
    % it will fit in a "yP" x "yP" bounding box.
    %
    dup stringwidth pop
    %
    % Does stringwidth exceed allowed maximum
    %
    dup yP gt { dup yP exch div 1 scale } if

    %
    % Center the string
    %
    2 div neg yP .20 sub 2 div neg moveto show
} bind def

%	 #]centerstrn: 
%  #]tools: 
%  #[boardinit:

/boardinit {
    %
    % boardsize (9, 13, 19, ...) realsize (in cm) boardinit --> ---
    %
    /realsize  exch def
    /boardsize exch def

    %
    % Initialise the hoshipoints
    %
    /hoshipos
	boardsize 19 eq {6} {
	boardsize 13 eq {3} {
	boardsize  9 eq {2}
			{0}		% Nothing appropriate
		ifelse
	    } ifelse
	} ifelse
    def

    %
    % Initialise the coordinate system (square = unity)
    %
    realsize boardsize div 2.54 div 72 mul dup scale

    %
    % Get and load the caption font
    %
    % /Times-Roman findfont .5 scalefont setfont

    % .5 axis {1}{0} ifelse add dup translate
    % axis {1}{0} ifelse dup translate

    %
    % Initialise clipping to whole board, and region to NIL
    %
    /llbdx 0 def/llbdy llbdx boardsize 1 sub add def
    /urbdy 0 def/urbdx urbdy boardsize 1 sub add def
    /llrgx 0 def
    /urrgx 0 def
    /llrgy 0 def
    /urrgy 0 def

    %
    % Clean the current path
    %
    newpath
} bind def

%  #]boardinit: 
%  #[cache:
%	 #[cacheinit:

/cacheinit {
    %
    % For the stone cache
    %
    cache {
	/stonecache boardsize dup mul array def
	0 1 boardsize dup mul 1 sub {
	    stonecache exch EMPTY put
	} for
    } if
} bind def

%	 #]cacheinit: 
%	 #[cachedump:

/cachedump {
    0 1 360 {
	dup stonecache exch get
	dup EMPTY eq {
	    pop pop
	}{
	    BLACK eq {
		dup
		boardsize  mod boardsize 2 idiv sub exch
		boardsize idiv boardsize 2 idiv sub bs
	    }{
		dup
		boardsize  mod boardsize 2 idiv sub exch
		boardsize idiv boardsize 2 idiv sub ws
	    } ifelse
	} ifelse    
    } for
} bind def

%	 #]cachedump: 
%	 #[cachedelete:

/cachedelete {
    /y exch def
    /x exch def
    stonecache
	x boardsize 2 idiv add
	y boardsize 2 idiv add boardsize mul add
	EMPTY
    put
} bind def

%	 #]cachedelete: 
%	 #[cd:

/cd {
    %
    % Delete an entry from the cache (stone has been hit)
    % x y cd
    %
    cache { cachedelete }{ pop pop } ifelse
} bind def

%	 #]cd: 
%  #]cache: 
%  #[caption:

/caption {
    gsave
	0 -1 translate
	0 0 moveto show
    grestore
} bind def

%  #]caption: 
%  #[transboard:

/row  0 def
/col  0 def
/rmax 3 def	% 3 rows	(based on h = 146 diagrams)
/cmax 2 def	% 2 columns	(based on w = 146 diagrams)
/lm   2 def	% Left margin

/init {
    lm lm translate
    0 boardsize 2 add rmax 1 sub mul translate
} bind def

true {
    /transboard { 0 0 translate } bind def
}{
    /transboard {
	col boardsize 2 add mul neg
	row boardsize 2 add mul translate
	row rmax 1 sub lt { /row row 1 add def }{
	    /row 0 def
	    col cmax 1 sub lt { /col col 1 add def }{
		showpage restore save
	    } ifelse
	} ifelse
	col boardsize 2 add mul
	row boardsize 2 add mul neg translate
    } bind def
} ifelse

%  #]transboard: 
%  #[board:
%	 #[hoshidump:

/hoshidump {
    gsave
    boardsize 2 idiv dup translate
    0 setgray
    newpath	    0                   0               hR 0 360 arc fill
    newpath	    hoshipos            hoshipos        hR 0 360 arc fill
    newpath	    hoshipos            hoshipos neg    hR 0 360 arc fill
    newpath	    hoshipos neg        hoshipos        hR 0 360 arc fill
    newpath	    hoshipos neg        hoshipos neg    hR 0 360 arc fill
    boardsize 19 eq {
	newpath	        0               hoshipos        hR 0 360 arc fill
	newpath	        hoshipos        0               hR 0 360 arc fill
	newpath	        0               hoshipos neg    hR 0 360 arc fill
	newpath	        hoshipos neg    0               hR 0 360 arc fill
    } if
    grestore
} bind def

%	 #]hoshidump: 
%	 #[coordump:

/X-AXIS [
    (A)(B)(C)(D)(E)(F)(G)(H)(J)(K)(L)(M)(N)(O)(P)(Q)(R)(S)(T)
] def
/Y-AXIS [
    (1)(2)(3)(4)(5)(6)(7)(8)(9)(10)(11)(12)(13)(14)(15)(16)(17)(18)(19)
] def

/coordump {
    %
    % Surround the board with coordinates
    %
    fF
    newpath
    0 bdh moveto	% upper edge
    1 1 boardsize {
	1 sub X-AXIS exch get
	gsave currentpoint translate centerstrn grestore
	1 0 rmoveto
    } for
    newpath
    0 -1 moveto		% lower edge
    1 1 boardsize {
	1 sub X-AXIS exch get
	gsave currentpoint translate centerstrn grestore
	1 0 rmoveto
    } for
    newpath
    -1 0 moveto		% left edge
    1 1 boardsize {
	1 sub Y-AXIS exch get
	gsave currentpoint translate centerstrn grestore
	0 1 rmoveto
    } for
    newpath
    bdw 0 moveto	% right edge
    1 1 boardsize {
	1 sub Y-AXIS exch get
	gsave currentpoint translate centerstrn grestore
	0 1 rmoveto
    } for
    newpath
} bind def

%  #]coordump: 
%	 #[board:

/board {
    transboard					% Translate into position

    %
    % Clip region
    %
    % Example 1: Bottom slice
    % /bdx  0 def	% SGF coordinates (topdown, leftright)
    % /bdy  8 def	% SGF coordinates (topdown, leftright)
    % /bdw 19 def
    % /bdh 11 def
    %
    % Example 2: Top slice
    % /bdx  0 def
    % /bdy  0 def
    % /bdw 19 def
    % /bdh 10 def
    %
    /psclipx bdx def
    /psclipy boardsize bdy bdh add sub def
    /psclipw bdw def
    /pscliph bdh def

    axis {
	%
	% Add space for the coordinates
	%
	/psclipw psclipw 2 add def	% left/right side
	/pscliph pscliph 2 add def	% top/bottom side
    } if

    newpath
	0           0        moveto
	psclipw     0       rlineto
	0           pscliph rlineto
	psclipw neg 0       rlineto
    closepath
    gsave 1 setgray fill grestore clip
    newpath
    %
    % Translate to relative origin
    %
    psclipx .5 sub neg
    psclipy .5 sub neg translate

    axis {1}{0} ifelse dup translate

    %
    % Region
    %
    gsave
	llrgx urrgx ne llrgy urrgy ne or {
	    newpath
	    llrgx .5 sub llrgy .5 add moveto
	    llrgx .5 sub urrgy .5 sub lineto
	    urrgx .5 add urrgy .5 sub lineto
	    urrgx .5 add llrgy .5 add lineto
	    closepath
	    .75 setgray
	    % 255 255 div
	    % 175 255 div
	    % 125 255 div setrgbcolor
	    gsave gW setlinewidth stroke grestore fill
	    newpath
	} if
    grestore

    %
    % Horizontals
    %
    newpath
    1 1 boardsize 2 sub {
	0 exch snap moveto
	boardsize 1 sub 0 rlineto
    } for
    %
    % Verticals
    %
    1 1 boardsize 2 sub {
	0 snap moveto
	0 boardsize 1 sub rlineto
    } for
    gW setlinewidth stroke

    %
    % Borders
    %
    newpath
    0			0			moveto
    0			boardsize 1 sub		rlineto
    boardsize 1 sub	0			rlineto
    0			boardsize 1 sub neg	rlineto
    closepath
    bW setlinewidth stroke

    hoshidump					% Print the hoshi points
    cache { cachedump } if			% Print the cache contents
    axis  { coordump  } if			% Print the coordinates
    % grestore
} bind def

%	 #]board: 
%  #]board: 
%  #[stones:
%	 #[wst:

/wst {
    %
    % Numbered white stone
    %
    % [[s0 K0][...][sn Kn]] ox w x y wst --> --
    %
    %	x,y 	[0..boardsize-1]
    %	ox,w	[1/1000 unit]
    %
    gsave
	/y  exch def
	/x  exch def
	/h  wH   yP mul 1000 div def
	/w  exch yP mul 1000 div def
	/oy wB   yP mul 1000 div def
	/ox exch yP mul 1000 div def
	cache {
	    stonecache
		x boardsize 2 idiv add
		y boardsize 2 idiv add boardsize mul add
		WHITE
	    put
	} if
	x y translate
	0 0 ws
	0 setgray wF

	w xP gt { xP w div }{1} ifelse
	h yP gt { yP h div }{1} ifelse scale
	w 2 div ox add neg
	h 2 div oy add neg translate
	0 0 moveto
	1 1 counttomark 2 sub 2 idiv { pop neg yP mul 1000 div 0 rmoveto show } for
	pop % "mark" itself
    grestore
} bind def

%	 #]wst: 
%	 #[bst:

/bst {
    %
    % Numbered black stone
    %
    % [[s0 K0][...][sn Kn]] ox w x y bst --> --
    %
    %	x,y 	[0..boardsize-1]
    %	ox,w	[1/1000 unit]
    %
    %
    gsave
	/y  exch def
	/x  exch def
	/h  bH   yP mul 1000 div def
	/w  exch yP mul 1000 div def
	/oy bB   yP mul 1000 div def
	/ox exch yP mul 1000 div def
	cache {
	    stonecache
		x boardsize 2 idiv add
		y boardsize 2 idiv add boardsize mul add
		BLACK
	    put
	} if
	x y translate
	0 0 bs
	1 setgray bF

	w xP gt { xP w div }{1} ifelse
	h yP gt { yP h div }{1} ifelse scale
	w 2 div ox add neg
	h 2 div oy add neg translate
	0 0 moveto
	1 1 counttomark 2 sub 2 idiv { pop neg yP mul 1000 div 0 rmoveto show } for
	pop % "mark" itself
    grestore
} bind def

%	 #]bst: 
%	 #[ws:

/ws {
    %
    % x y ws --> --
    %
    % Unnumbered white stone
    %
    newpath
    wR 0 360 arc
    gsave
	1 setgray fill
    grestore
    wW setlinewidth
    0 setgray stroke
} bind def

%	 #]ws: 
%	 #[bs:

/bs {
    %
    % x y ws --> --
    %
    % Unnumbered black stone
    %
    newpath
    bR 0 360 arc
    0 setgray fill
} bind def

%	 #]bs: 
%  #]stones: 
%  #[stone signs:
%	 #[ps:

/ps {
    %
    % color x y ps --> --
    %
    % Plus sign in "color" stone
    %
    gsave
	/ycoor exch def
	/xcoor exch def
	/color exch def
	xcoor ycoor color 0 eq { ws } { bs } ifelse
	newpath
	    xcoor ycoor translate
	    .06 setlinewidth
	    color setgray
	    -.2 0  moveto
	     .2 0  lineto
	    0  -.2 moveto
	    0   .2 lineto
	stroke
    grestore
} bind def

%	 #]ps: 
%	 #[ms:

/ms {
    %
    % color x y ms --> --
    %
    % Minus sign in "color" stone
    %
    gsave
	/ycoor exch def
	/xcoor exch def
	/color exch def
	xcoor ycoor color 0 eq { ws } { bs } ifelse
	newpath
	    xcoor ycoor translate
	    .06 setlinewidth
	    color setgray
	    -.2 0 moveto
	     .2 0 lineto
	stroke
    grestore
} bind def

%	 #]ms: 
%	 #[square_e:

/square_e {
    %
    % color x y square_e --> --
    %
    % Empty square in "color" stone
    %
    gsave
	/ycoor exch def
	/xcoor exch def
	/color exch def
	xcoor ycoor color 0 eq { ws } { bs } ifelse
	newpath
	    xcoor ycoor translate
	    .04 setlinewidth
	    color setgray
	    -.2353   -.2353   moveto
	    -.2353    .2353   lineto
	     .2353    .2353   lineto
	     .2353   -.2353   lineto
	closepath
	stroke
    grestore
} bind def

%	 #]square_e: 
%	 #[square_f:

/square_f {
    %
    % color x y square_f --> --
    %
    % Filled square in "color" stone
    %
    gsave
	/ycoor exch def
	/xcoor exch def
	/color exch def
	xcoor ycoor color 0 eq { ws } { bs } ifelse
	newpath
	    xcoor ycoor translate
	    .04 setlinewidth
	    color setgray
	    -.2353   -.2353   moveto
	    -.2353    .2353   lineto
	     .2353    .2353   lineto
	     .2353   -.2353   lineto
	closepath
	fill
    grestore
} bind def

%	 #]square_f: 
%	 #[triang_e:

/triang_e {
    %
    % color x y triang_e --> --
    %
    % Empty triangle in "color" stone
    %
    gsave
	/ycoor exch def
	/xcoor exch def
	/color exch def
	xcoor ycoor color 0 eq { ws } { bs } ifelse
	newpath
	    xcoor ycoor translate
	    .04 setlinewidth
	    color setgray
	    -.2353   -.175   moveto
	     .4706   0       rlineto
	    -.2353    .500   rlineto
	closepath
	stroke
    grestore
} bind def

%	 #]triang_e: 
%	 #[triang_f:

/triang_f {
    %
    % color x y triang_f --> --
    %
    % Filled triangle in "color" stone
    %
    gsave
	/ycoor exch def
	/xcoor exch def
	/color exch def
	xcoor ycoor color 0 eq { ws } { bs } ifelse
	newpath
	    xcoor ycoor translate
	    .04 setlinewidth
	    color setgray
	    -.2353   -.175   moveto
	     .4706   0       rlineto
	    -.2353    .500   rlineto
	closepath
	fill
    grestore
} bind def

%	 #]triang_f: 
%	 #[shade:

/shade {
    %
    % color x y shade --> --
    %
    % Give the board some color at (x,y)
    %
    gsave
	translate		% To x y
	newpath
	    -.5 -.5 moveto
	    0 1 rlineto
	    1 0 rlineto
	    0 -1 rlineto
	closepath
	100 div setgray fill		% with color

	%
	% Restore grid
	%
	gW setlinewidth
	newpath -.5 0 moveto 1 0 rlineto stroke
	newpath 0 -.5 moveto 0 1 rlineto stroke
    grestore
} bind def

%	 #]shade: 
%	 #[bterr:

/bterr {
    %
    % x y bterr --> --
    %
    % Black territory indicator
    %
    gsave
	false {
	    %
	    % white stone filled 60% black
	    %
	    wR 0 360 arc
	    gsave
		.40 setgray fill
	    grestore
	    wW setlinewidth
	    0 setgray stroke
	}{
	    false {
		%
		% The character 'b'
		%
		gsave
		    2 copy wR 3 mul 4 div 0 360 arc 1 setgray fill
		grestore
		translate fF (b) centerstrn
	    }{
		%
		% A small black square
		%
		translate
		newpath
		    -.4 -.4  moveto
		    0.8 0   rlineto
		    0   0.8 rlineto
		    -.8 0   rlineto
		closepath
		gsave .25 setgray fill grestore stroke
	    } ifelse
	} ifelse
    grestore
} bind def

%	 #]bterr: 
%	 #[wterr:

/wterr {
    %
    % x y wterr --> --
    %
    % White territory indicator
    %
    gsave
	false {
	    %
	    % White stone filled 10% black
	    %
	    wR 0 360 arc
	    gsave
		.90 setgray fill
	    grestore
	    wW setlinewidth
	    0 setgray stroke
	}{
	    false {
		%
		% The character 'w'
		%
		gsave
		    2 copy wR 3 mul 4 div 0 360 arc 1 setgray fill
		grestore
		translate fF (w) centerstrn
	    }{
		%
		% A small white square
		%
		translate
		newpath
		    -.4 -.4  moveto
		    0.8 0   rlineto
		    0   0.8 rlineto
		    -.8 0   rlineto
		closepath
		gsave .75 setgray fill grestore stroke
	    } ifelse
	} ifelse
    grestore
} bind def

%	 #]wterr: 
%	 #[metamark:

/metamark {
    %
    % color x y (string) metamark --> --
    %
    % Arbitrairy mark in "color" stone
    %
    gsave
	/marker exch def
	/ycoor  exch def
	/xcoor  exch def
	/color  exch def
	xcoor ycoor color 0 eq { ws } { bs } ifelse
	xcoor ycoor translate
	mF
	marker stringwidth pop 2 div neg 0 translate
	color 1 eq { 1 setgray } if
	0 0 moveto marker show
    grestore
} bind def

%	 #]metamark: 
%  #]stone signs: 
%  #[field signs:
%	 #[fs:

/fs {
    %
    % string x y fs --> --
    %
    % Grid point indicator
    %
    gsave
	newpath
	    translate
	    0 0 wR 0 360 arc
	    1 setgray
	    fill
	0 setgray fF centerstrn
    grestore
} bind def

%	 #]fs: 
%	 #[arrow:

/arrow {
    %
    % angle x y arrow --> --
    %
    % Put an arrow from (x,y) in direction determined by angle
    %
    gsave
	translate
	0.5 setgray 0 0 hR 0 360 arc fill
	rotate
	newpath
	     0.0   0.25  moveto
	    -0.1   0.25  lineto
	     0.0   0.48  lineto
	     0.1   0.25  lineto
	closepath 0.5 setgray
	gsave stroke grestore
	fill
    grestore
} bind def

%	 #]arrow: 
%	 #[nl:

/nl {
    %
    % string x y nl --> --
    %
    % Numbered liberty --- Put Number next to a marked grid point
    %
    gsave
	translate
	newpath
	     0.0  -0.25  moveto
	    -0.25  0.0   lineto
	     0.0   0.25  lineto
	     0.25  0.0   lineto
	closepath 0.5 setgray fill
	.3 .3 translate
	.6 dup scale
	0 setgray fF centerstrn
    grestore
} bind def

%	 #]nl: 
%	 #[no:

/no {
    %
    % string x y no --> --
    %
    % Put Number next to grid point
    %
    gsave
	translate
	% 0.5 setgray 0 0 hR 0 360 arc fill
	.3 .3 translate
	.6 dup scale
	0 setgray fF centerstrn
    grestore
} bind def

%	 #]no: 
%	 #[ds:

/ds {
    %
    % string x y ds --> --
    %
    % Destructive Grid point indicator
    %
    gsave
	translate
	0 setgray fF centerstrn
    grestore
} bind def

%	 #]ds: 
%  #]field signs: 

end

Liberty begin
/cache false def
/axis  false def
19 10.20 boardinit
/bdx  0 def
/bdy  0 def
/bdw 19 def
/bdh 19 def
/rgx  0 def
/rgy  0 def
/rgw 19 def
/rgh 19 def
board
1 18 bs
5 18 bs
6 18 bs
7 18 ws
mark (1) 37 (2) 0 
/wB -23 def
/wH 733 def
34 832 11 18 wst
mark (26) 0 
/bB -24 def
/bH 752 def
30 1045 12 18 bst
13 18 bs
15 18 ws
0 17 ws
1 17 bs
3 17 bs
5 17 bs
6 17 ws
7 17 ws
8 17 ws
9 17 ws
10 17 ws
11 17 bs
mark (25) 0 34 1035 12 17 wst
14 17 bs
15 17 ws
0 16 ws
1 16 bs
2 16 bs
3 16 bs
4 16 bs
5 16 ws
7 16 ws
8 16 bs
10 16 ws
11 16 ws
12 16 bs
13 16 bs
14 16 ws
15 16 ws
1 15 ws
2 15 ws
3 15 ws
4 15 ws
5 15 ws
6 15 ws
7 15 ws
9 15 bs
10 15 bs
11 15 ws
12 15 bs
14 15 bs
15 15 ws
mark (1) 37 (3) 0 32 834 1 14 wst
6 14 bs
8 14 bs
9 14 bs
10 14 ws
11 14 bs
12 14 bs
13 14 bs
14 14 bs
15 14 ws
17 14 bs
2 13 bs
4 13 bs
5 13 bs
6 13 bs
8 13 bs
9 13 ws
10 13 ws
11 13 bs
13 13 bs
15 13 ws
16 13 ws
17 13 ws
1 12 bs
4 12 bs
5 12 ws
8 12 ws
9 12 bs
10 12 ws
11 12 ws
12 12 bs
13 12 bs
14 12 ws
15 12 ws
16 12 bs
17 12 bs
mark (36) 0 29 1046 0 11 bst
1 11 bs
2 11 ws
3 11 ws
4 11 bs
5 11 ws
6 11 bs
7 11 bs
8 11 ws
10 11 ws
11 11 ws
12 11 bs
13 11 bs
14 11 bs
15 11 ws
16 11 bs
17 11 ws
mark (34) 0 29 1049 0 10 bst
1 10 ws
2 10 ws
3 10 bs
4 10 ws
5 10 ws
7 10 bs
8 10 bs
9 10 ws
10 10 ws
11 10 bs
12 10 bs
13 10 bs
14 10 ws
15 10 ws
16 10 bs
17 10 ws
mark (35) 0 32 1037 0 9 wst
1 9 bs
2 9 ws
3 9 bs
5 9 ws
7 9 bs
8 9 ws
9 9 ws
10 9 bs
11 9 bs
12 9 ws
13 9 bs
14 9 bs
15 9 bs
16 9 ws
17 9 ws
1 8 ws
2 8 bs
3 8 bs
5 8 ws
6 8 bs
7 8 bs
8 8 bs
9 8 ws
10 8 ws
11 8 ws
13 8 ws
14 8 bs
15 8 ws
16 8 ws
mark (37) 0 32 1044 17 8 wst
0 7 bs
1 7 ws
2 7 ws
3 7 ws
mark (23) 0 34 1028 4 7 wst
5 7 ws
6 7 ws
7 7 ws
8 7 bs
9 7 bs
10 7 ws
11 7 ws
12 7 ws
13 7 ws
14 7 ws
15 7 bs
16 7 bs
17 7 bs
mark (38) 0 29 1052 18 7 bst
1 6 bs
2 6 bs
mark (22) 0 30 1041 3 6 bst
4 6 ws
5 6 bs
10 6 bs
11 6 bs
12 6 ws
14 6 bs
15 6 bs
1 5 ws
2 5 bs
3 5 bs
4 5 ws
5 5 bs
6 5 ws
7 5 ws
8 5 bs
10 5 bs
11 5 ws
12 5 ws
14 5 bs
15 5 ws
16 5 ws
17 5 bs
18 5 bs
1 4 ws
2 4 ws
3 4 bs
4 4 bs
6 4 bs
7 4 bs
mark (28) 0 30 1051 9 4 bst
10 4 bs
11 4 ws
12 4 ws
13 4 ws
14 4 ws
15 4 bs
16 4 ws
17 4 ws
2 3 ws
3 3 ws
4 3 bs
5 3 bs
8 3 bs
mark (27) 0 34 1042 9 3 wst
10 3 ws
11 3 ws
12 3 bs
mark (9) 0 (1) 37 102 963 13 3 wst
14 3 bs
15 3 bs
16 3 bs
17 3 ws
2 2 bs
3 2 ws
4 2 ws
5 2 ws
6 2 bs
8 2 bs
9 2 ws
11 2 ws
12 2 bs
mark (20) 0 30 1043 13 2 bst
15 2 bs
16 2 bs
17 2 bs
18 2 ws
4 1 ws
5 1 bs
7 1 bs
8 1 ws
9 1 ws
10 1 ws
12 1 ws
13 1 bs
14 1 bs
16 1 bs
17 1 ws
4 0 ws
5 0 ws
6 0 bs
7 0 bs
8 0 bs
11 0 ws
mark (33) 0 32 1030 12 0 wst
13 0 ws
mark (32) 0 29 1042 14 0 bst
(a) 2 12 fs
(b) 3 13 fs
(c) 1 13 fs
end
%%Trailer
userdict /end-hook known{end-hook}if
%%EOF

%%EndDocument
 @endspecial 5922 3806 a Fh(B)55 b(24)106 b(=)55 b(2)6643
3741 y Fp(1)p 6643 3770 65 7 v 6643 3860 a(2)6783 3806
y Fh(pt)g(cpn)5922 4000 y(W)f(29)h(=)g(2)f(pt)h(cpn)5922
4193 y(B)g(30)106 b(=)55 b(1)6643 4128 y Fp(1)p 6643
4157 V 6643 4247 a(2)6783 4193 y Fh(pt)g(cpn)3023 8755
y Ff(Figure)i(17.)78 b Fe(Actual)53 b(pla)-5 b(y)55 b(\(19{38\).)1281
9223 y Fm(Figure)68 b(17:)99 b(The)68 b(mast)i(v)-10
b(alue)69 b(is)h(no)-5 b(w)69 b Fi(\000)4167 9153 y Fk(1)p
4166 9182 71 8 v 4166 9283 a(3)4258 9223 y Fm(.)108 b(Both)70
b(pla)-5 b(y)g(ers)69 b(con)-5 b(tin)g(ue)69 b(to)g(ignore)g(the)1070
9451 y(East)d(side,)j(the)e(hottest)g(area)f(on)g(the)g(b)5
b(oard.)100 b(W)66 b(21)g(is)i(w)-5 b(orth)66 b(2)5647
9382 y Fk(1)p 5647 9411 V 5647 9512 a(2)5804 9451 y Fm(p)5
b(oin)-5 b(ts.)102 b(W)66 b(25)g(is)h(a)1070 9679 y(2)1179
9610 y Fk(1)p 1179 9639 V 1179 9740 a(3)1325 9679 y Fm(p)5
b(oin)-5 b(t)55 b(sen)-5 b(te.)77 b(The)55 b(exc)-5 b(hange,)54
b(W)h(27)f({)h(B)g(28,)g(is)h(unortho)5 b(do)-5 b(x.)75
b(It)56 b(eliminates)i(White)1070 9908 y(options)73 b(in)g(some)g(v)-10
b(ariations)74 b(\(See)f(Figure)f(14)h(for)f(an)g(example.\),)k(and)c
(loses)6621 9839 y Fk(1)p 6621 9868 V 6621 9969 a(6)6785
9908 y Fm(p)5 b(oin)-5 b(t)1070 10136 y(v)g(ersus)58
b(the)h(mast)h(v)-10 b(alue,)58 b(whic)-5 b(h)59 b(is)h(no)-5
b(w)58 b Fi(\000)4039 10067 y Fk(1)p 4039 10096 V 4039
10197 a(6)4130 10136 y Fm(.)1281 10365 y(After)k(B)g(30)g(the)h(mast)g
(v)-10 b(alue)63 b(is)g Fi(\000)3705 10296 y Fk(2)p 3705
10325 V 3705 10425 a(3)3796 10365 y Fm(.)89 b(W)62 b(31)g(loses)4851
10296 y Fk(1)p 4851 10325 V 4851 10425 a(2)5005 10365
y Fm(p)5 b(oin)-5 b(t)62 b(v)-5 b(ersus)62 b(the)h(mast)g(v)-10
b(alue.)1070 10593 y(Before)85 b(W)f(31,)91 b(B)85 b(34)g(is)h(w)-5
b(orth)84 b(1)3538 10524 y Fk(1)p 3538 10553 V 3538 10654
a(2)3714 10593 y Fm(p)5 b(oin)-5 b(ts,)92 b(but)84 b(afterw)-5
b(ards)85 b(it)h(is)g(w)-5 b(orth)84 b(2)h(p)5 b(oin)-5
b(ts.)p eop
%%Page: 103 16
103 15 bop 1926 577 a Fg(GO)65 b(THERMOGRAPHY:)f(THE)g(4/21/98)e
(JIANG{R)l(UI)h(ENDGAME)631 b(103)1070 998 y Fm(If)68
b(Blac)-5 b(k)70 b(pla)-5 b(ys)68 b(elsewhere)h(after)f(W)g(31,)i
(White)f(can)f(pla)-5 b(y)5375 4639 y @beginspecial 0
@llx 74.998962 @lly 104.998543 @urx 289.995941 @ury 1007.985657
@rwi 2063.970703 @rhi @setspecial
%%BeginDocument: /u/levy/MSRI/Book42/spight/fig18.ps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: dvipsk 5.58f Copyright 1986, 1994 Radical Eye Software
%%Title: 589718.dvi
%%BoundingBox: 0 75 105 290

newpath 0 75 moveto 0 290 lineto 110 290 lineto 110 75 lineto closepath clip

%  #[info:
%									%
%									%
%	     _								%
%	    / \\  /'\\ -_-_  ,._-_  /'\\     _-_  -_-_	 _-_,		%
%	   || || || || || \\  ||   || ||    || \\ || \\ ||_.		%
%	   || || || || || ||  ||   || ||    ||/	  || ||	 ~ ||		%
%	   \\_-| \\,/  ||-'   \\,  \\,/	 <> \\,/  ||-'	,-_-		%
%	    /  \       |/			  |/			%
%	   '----`      '			  '			%
%									%
%		  Copyright (c) 1993  Jan van der Steen			%
%	       Centre for Mathematics and Computer Science		%
%		       Amsterdam, the Netherlands			%
%									%
%-----------------------------------------------------------------------%
%   You are not allowed to use this software in commercial software.	%
%   You are allowed to use this software in free software under the	%
%   condition that you maintain this integral message in the source.	%
%-----------------------------------------------------------------------%
% File	  : gopro.eps							%
% Purpose : Implement PostScript procedures to draw Go games		%
% Version : 1.28							%
% Modified: 07 Apr 1995 18:10:54					%
% Author  : Jan van der Steen (jansteen@cwi.nl)				%
%  #]info: 

/Liberty 100 dict def
Liberty begin

%  #[init:
%
% Default fonts for various applications
%
/bFont /Helvetica-Bold def	% Black numbers
/wFont /Helvetica      def	% White numbers
/fFont /Helvetica      def	% Grid markers
/mFont /Helvetica      def	% Metamarkers

/bF { bFont findfont yP scalefont setfont } bind def /bB -24 def /bH 752 def
/wF { wFont findfont yP scalefont setfont } bind def /wB -23 def /wH 733 def
/fF { fFont findfont yP scalefont setfont } bind def
/mF { mFont findfont yP scalefont setfont } bind def

%
% Abbreviations
%
/W 0 def			% White color
/B 1 def			% Black color

%
% The following sizes are in square units
%
/gW	.01   def	% Width of grid line
/bW	.10   def	% Width of border line
/wW	.02   def	% Width of a white stone
/bR	.48   def	% Radius of a black stone
/wR	.48   def	% Radius of a white stone
/hR	.10   def	% Radius of a hoshi point
/xP	.60   def	% Maximum width  of strings (number,indicator)
/yP	.80   def	% Maximum height of strings (number,indicator)
/axis	true  def	% Do we print coordinates too
/cache	true  def	% Do we use the stone cache

%
% The stone cache
%
cache {
    /EMPTY	 0 def
    /BLACK	-1 def
    /WHITE	-2 def
} if
%  #]init: 
%  #[tools:
%	 #[snap:

/snap {
    %
    % x y snap x" y"
    %
    % Make x and y snap on output device grid
    %
    transform round exch round exch itransform
} bind def

%	 #]snap: 
%	 #[centerstrn:

/centerstrn {
    %
    % string centerstrn --> --
    %
    % Print "string" balanced around (0,0) and make sure
    % it will fit in a "yP" x "yP" bounding box.
    %
    dup stringwidth pop
    %
    % Does stringwidth exceed allowed maximum
    %
    dup yP gt { dup yP exch div 1 scale } if

    %
    % Center the string
    %
    2 div neg yP .20 sub 2 div neg moveto show
} bind def

%	 #]centerstrn: 
%  #]tools: 
%  #[boardinit:

/boardinit {
    %
    % boardsize (9, 13, 19, ...) realsize (in cm) boardinit --> ---
    %
    /realsize  exch def
    /boardsize exch def

    %
    % Initialise the hoshipoints
    %
    /hoshipos
	boardsize 19 eq {6} {
	boardsize 13 eq {3} {
	boardsize  9 eq {2}
			{0}		% Nothing appropriate
		ifelse
	    } ifelse
	} ifelse
    def

    %
    % Initialise the coordinate system (square = unity)
    %
    realsize boardsize div 2.54 div 72 mul dup scale

    %
    % Get and load the caption font
    %
    % /Times-Roman findfont .5 scalefont setfont

    % .5 axis {1}{0} ifelse add dup translate
    % axis {1}{0} ifelse dup translate

    %
    % Initialise clipping to whole board, and region to NIL
    %
    /llbdx 0 def/llbdy llbdx boardsize 1 sub add def
    /urbdy 0 def/urbdx urbdy boardsize 1 sub add def
    /llrgx 0 def
    /urrgx 0 def
    /llrgy 0 def
    /urrgy 0 def

    %
    % Clean the current path
    %
    newpath
} bind def

%  #]boardinit: 
%  #[cache:
%	 #[cacheinit:

/cacheinit {
    %
    % For the stone cache
    %
    cache {
	/stonecache boardsize dup mul array def
	0 1 boardsize dup mul 1 sub {
	    stonecache exch EMPTY put
	} for
    } if
} bind def

%	 #]cacheinit: 
%	 #[cachedump:

/cachedump {
    0 1 360 {
	dup stonecache exch get
	dup EMPTY eq {
	    pop pop
	}{
	    BLACK eq {
		dup
		boardsize  mod boardsize 2 idiv sub exch
		boardsize idiv boardsize 2 idiv sub bs
	    }{
		dup
		boardsize  mod boardsize 2 idiv sub exch
		boardsize idiv boardsize 2 idiv sub ws
	    } ifelse
	} ifelse    
    } for
} bind def

%	 #]cachedump: 
%	 #[cachedelete:

/cachedelete {
    /y exch def
    /x exch def
    stonecache
	x boardsize 2 idiv add
	y boardsize 2 idiv add boardsize mul add
	EMPTY
    put
} bind def

%	 #]cachedelete: 
%	 #[cd:

/cd {
    %
    % Delete an entry from the cache (stone has been hit)
    % x y cd
    %
    cache { cachedelete }{ pop pop } ifelse
} bind def

%	 #]cd: 
%  #]cache: 
%  #[caption:

/caption {
    gsave
	0 -1 translate
	0 0 moveto show
    grestore
} bind def

%  #]caption: 
%  #[transboard:

/row  0 def
/col  0 def
/rmax 3 def	% 3 rows	(based on h = 146 diagrams)
/cmax 2 def	% 2 columns	(based on w = 146 diagrams)
/lm   2 def	% Left margin

/init {
    lm lm translate
    0 boardsize 2 add rmax 1 sub mul translate
} bind def

true {
    /transboard { 0 0 translate } bind def
}{
    /transboard {
	col boardsize 2 add mul neg
	row boardsize 2 add mul translate
	row rmax 1 sub lt { /row row 1 add def }{
	    /row 0 def
	    col cmax 1 sub lt { /col col 1 add def }{
		showpage restore save
	    } ifelse
	} ifelse
	col boardsize 2 add mul
	row boardsize 2 add mul neg translate
    } bind def
} ifelse

%  #]transboard: 
%  #[board:
%	 #[hoshidump:

/hoshidump {
    gsave
    boardsize 2 idiv dup translate
    0 setgray
    newpath	    0                   0               hR 0 360 arc fill
    newpath	    hoshipos            hoshipos        hR 0 360 arc fill
    newpath	    hoshipos            hoshipos neg    hR 0 360 arc fill
    newpath	    hoshipos neg        hoshipos        hR 0 360 arc fill
    newpath	    hoshipos neg        hoshipos neg    hR 0 360 arc fill
    boardsize 19 eq {
	newpath	        0               hoshipos        hR 0 360 arc fill
	newpath	        hoshipos        0               hR 0 360 arc fill
	newpath	        0               hoshipos neg    hR 0 360 arc fill
	newpath	        hoshipos neg    0               hR 0 360 arc fill
    } if
    grestore
} bind def

%	 #]hoshidump: 
%	 #[coordump:

/X-AXIS [
    (A)(B)(C)(D)(E)(F)(G)(H)(J)(K)(L)(M)(N)(O)(P)(Q)(R)(S)(T)
] def
/Y-AXIS [
    (1)(2)(3)(4)(5)(6)(7)(8)(9)(10)(11)(12)(13)(14)(15)(16)(17)(18)(19)
] def

/coordump {
    %
    % Surround the board with coordinates
    %
    fF
    newpath
    0 bdh moveto	% upper edge
    1 1 boardsize {
	1 sub X-AXIS exch get
	gsave currentpoint translate centerstrn grestore
	1 0 rmoveto
    } for
    newpath
    0 -1 moveto		% lower edge
    1 1 boardsize {
	1 sub X-AXIS exch get
	gsave currentpoint translate centerstrn grestore
	1 0 rmoveto
    } for
    newpath
    -1 0 moveto		% left edge
    1 1 boardsize {
	1 sub Y-AXIS exch get
	gsave currentpoint translate centerstrn grestore
	0 1 rmoveto
    } for
    newpath
    bdw 0 moveto	% right edge
    1 1 boardsize {
	1 sub Y-AXIS exch get
	gsave currentpoint translate centerstrn grestore
	0 1 rmoveto
    } for
    newpath
} bind def

%  #]coordump: 
%	 #[board:

/board {
    transboard					% Translate into position

    %
    % Clip region
    %
    % Example 1: Bottom slice
    % /bdx  0 def	% SGF coordinates (topdown, leftright)
    % /bdy  8 def	% SGF coordinates (topdown, leftright)
    % /bdw 19 def
    % /bdh 11 def
    %
    % Example 2: Top slice
    % /bdx  0 def
    % /bdy  0 def
    % /bdw 19 def
    % /bdh 10 def
    %
    /psclipx bdx def
    /psclipy boardsize bdy bdh add sub def
    /psclipw bdw def
    /pscliph bdh def

    axis {
	%
	% Add space for the coordinates
	%
	/psclipw psclipw 2 add def	% left/right side
	/pscliph pscliph 2 add def	% top/bottom side
    } if

    newpath
	0           0        moveto
	psclipw     0       rlineto
	0           pscliph rlineto
	psclipw neg 0       rlineto
    closepath
    gsave 1 setgray fill grestore clip
    newpath
    %
    % Translate to relative origin
    %
    psclipx .5 sub neg
    psclipy .5 sub neg translate

    axis {1}{0} ifelse dup translate

    %
    % Region
    %
    gsave
	llrgx urrgx ne llrgy urrgy ne or {
	    newpath
	    llrgx .5 sub llrgy .5 add moveto
	    llrgx .5 sub urrgy .5 sub lineto
	    urrgx .5 add urrgy .5 sub lineto
	    urrgx .5 add llrgy .5 add lineto
	    closepath
	    .75 setgray
	    % 255 255 div
	    % 175 255 div
	    % 125 255 div setrgbcolor
	    gsave gW setlinewidth stroke grestore fill
	    newpath
	} if
    grestore

    %
    % Horizontals
    %
    newpath
    1 1 boardsize 2 sub {
	0 exch snap moveto
	boardsize 1 sub 0 rlineto
    } for
    %
    % Verticals
    %
    1 1 boardsize 2 sub {
	0 snap moveto
	0 boardsize 1 sub rlineto
    } for
    gW setlinewidth stroke

    %
    % Borders
    %
    newpath
    0			0			moveto
    0			boardsize 1 sub		rlineto
    boardsize 1 sub	0			rlineto
    0			boardsize 1 sub neg	rlineto
    closepath
    bW setlinewidth stroke

    hoshidump					% Print the hoshi points
    cache { cachedump } if			% Print the cache contents
    axis  { coordump  } if			% Print the coordinates
    % grestore
} bind def

%	 #]board: 
%  #]board: 
%  #[stones:
%	 #[wst:

/wst {
    %
    % Numbered white stone
    %
    % [[s0 K0][...][sn Kn]] ox w x y wst --> --
    %
    %	x,y 	[0..boardsize-1]
    %	ox,w	[1/1000 unit]
    %
    gsave
	/y  exch def
	/x  exch def
	/h  wH   yP mul 1000 div def
	/w  exch yP mul 1000 div def
	/oy wB   yP mul 1000 div def
	/ox exch yP mul 1000 div def
	cache {
	    stonecache
		x boardsize 2 idiv add
		y boardsize 2 idiv add boardsize mul add
		WHITE
	    put
	} if
	x y translate
	0 0 ws
	0 setgray wF

	w xP gt { xP w div }{1} ifelse
	h yP gt { yP h div }{1} ifelse scale
	w 2 div ox add neg
	h 2 div oy add neg translate
	0 0 moveto
	1 1 counttomark 2 sub 2 idiv { pop neg yP mul 1000 div 0 rmoveto show } for
	pop % "mark" itself
    grestore
} bind def

%	 #]wst: 
%	 #[bst:

/bst {
    %
    % Numbered black stone
    %
    % [[s0 K0][...][sn Kn]] ox w x y bst --> --
    %
    %	x,y 	[0..boardsize-1]
    %	ox,w	[1/1000 unit]
    %
    %
    gsave
	/y  exch def
	/x  exch def
	/h  bH   yP mul 1000 div def
	/w  exch yP mul 1000 div def
	/oy bB   yP mul 1000 div def
	/ox exch yP mul 1000 div def
	cache {
	    stonecache
		x boardsize 2 idiv add
		y boardsize 2 idiv add boardsize mul add
		BLACK
	    put
	} if
	x y translate
	0 0 bs
	1 setgray bF

	w xP gt { xP w div }{1} ifelse
	h yP gt { yP h div }{1} ifelse scale
	w 2 div ox add neg
	h 2 div oy add neg translate
	0 0 moveto
	1 1 counttomark 2 sub 2 idiv { pop neg yP mul 1000 div 0 rmoveto show } for
	pop % "mark" itself
    grestore
} bind def

%	 #]bst: 
%	 #[ws:

/ws {
    %
    % x y ws --> --
    %
    % Unnumbered white stone
    %
    newpath
    wR 0 360 arc
    gsave
	1 setgray fill
    grestore
    wW setlinewidth
    0 setgray stroke
} bind def

%	 #]ws: 
%	 #[bs:

/bs {
    %
    % x y ws --> --
    %
    % Unnumbered black stone
    %
    newpath
    bR 0 360 arc
    0 setgray fill
} bind def

%	 #]bs: 
%  #]stones: 
%  #[stone signs:
%	 #[ps:

/ps {
    %
    % color x y ps --> --
    %
    % Plus sign in "color" stone
    %
    gsave
	/ycoor exch def
	/xcoor exch def
	/color exch def
	xcoor ycoor color 0 eq { ws } { bs } ifelse
	newpath
	    xcoor ycoor translate
	    .06 setlinewidth
	    color setgray
	    -.2 0  moveto
	     .2 0  lineto
	    0  -.2 moveto
	    0   .2 lineto
	stroke
    grestore
} bind def

%	 #]ps: 
%	 #[ms:

/ms {
    %
    % color x y ms --> --
    %
    % Minus sign in "color" stone
    %
    gsave
	/ycoor exch def
	/xcoor exch def
	/color exch def
	xcoor ycoor color 0 eq { ws } { bs } ifelse
	newpath
	    xcoor ycoor translate
	    .06 setlinewidth
	    color setgray
	    -.2 0 moveto
	     .2 0 lineto
	stroke
    grestore
} bind def

%	 #]ms: 
%	 #[square_e:

/square_e {
    %
    % color x y square_e --> --
    %
    % Empty square in "color" stone
    %
    gsave
	/ycoor exch def
	/xcoor exch def
	/color exch def
	xcoor ycoor color 0 eq { ws } { bs } ifelse
	newpath
	    xcoor ycoor translate
	    .04 setlinewidth
	    color setgray
	    -.2353   -.2353   moveto
	    -.2353    .2353   lineto
	     .2353    .2353   lineto
	     .2353   -.2353   lineto
	closepath
	stroke
    grestore
} bind def

%	 #]square_e: 
%	 #[square_f:

/square_f {
    %
    % color x y square_f --> --
    %
    % Filled square in "color" stone
    %
    gsave
	/ycoor exch def
	/xcoor exch def
	/color exch def
	xcoor ycoor color 0 eq { ws } { bs } ifelse
	newpath
	    xcoor ycoor translate
	    .04 setlinewidth
	    color setgray
	    -.2353   -.2353   moveto
	    -.2353    .2353   lineto
	     .2353    .2353   lineto
	     .2353   -.2353   lineto
	closepath
	fill
    grestore
} bind def

%	 #]square_f: 
%	 #[triang_e:

/triang_e {
    %
    % color x y triang_e --> --
    %
    % Empty triangle in "color" stone
    %
    gsave
	/ycoor exch def
	/xcoor exch def
	/color exch def
	xcoor ycoor color 0 eq { ws } { bs } ifelse
	newpath
	    xcoor ycoor translate
	    .04 setlinewidth
	    color setgray
	    -.2353   -.175   moveto
	     .4706   0       rlineto
	    -.2353    .500   rlineto
	closepath
	stroke
    grestore
} bind def

%	 #]triang_e: 
%	 #[triang_f:

/triang_f {
    %
    % color x y triang_f --> --
    %
    % Filled triangle in "color" stone
    %
    gsave
	/ycoor exch def
	/xcoor exch def
	/color exch def
	xcoor ycoor color 0 eq { ws } { bs } ifelse
	newpath
	    xcoor ycoor translate
	    .04 setlinewidth
	    color setgray
	    -.2353   -.175   moveto
	     .4706   0       rlineto
	    -.2353    .500   rlineto
	closepath
	fill
    grestore
} bind def

%	 #]triang_f: 
%	 #[shade:

/shade {
    %
    % color x y shade --> --
    %
    % Give the board some color at (x,y)
    %
    gsave
	translate		% To x y
	newpath
	    -.5 -.5 moveto
	    0 1 rlineto
	    1 0 rlineto
	    0 -1 rlineto
	closepath
	100 div setgray fill		% with color

	%
	% Restore grid
	%
	gW setlinewidth
	newpath -.5 0 moveto 1 0 rlineto stroke
	newpath 0 -.5 moveto 0 1 rlineto stroke
    grestore
} bind def

%	 #]shade: 
%	 #[bterr:

/bterr {
    %
    % x y bterr --> --
    %
    % Black territory indicator
    %
    gsave
	false {
	    %
	    % white stone filled 60% black
	    %
	    wR 0 360 arc
	    gsave
		.40 setgray fill
	    grestore
	    wW setlinewidth
	    0 setgray stroke
	}{
	    false {
		%
		% The character 'b'
		%
		gsave
		    2 copy wR 3 mul 4 div 0 360 arc 1 setgray fill
		grestore
		translate fF (b) centerstrn
	    }{
		%
		% A small black square
		%
		translate
		newpath
		    -.4 -.4  moveto
		    0.8 0   rlineto
		    0   0.8 rlineto
		    -.8 0   rlineto
		closepath
		gsave .25 setgray fill grestore stroke
	    } ifelse
	} ifelse
    grestore
} bind def

%	 #]bterr: 
%	 #[wterr:

/wterr {
    %
    % x y wterr --> --
    %
    % White territory indicator
    %
    gsave
	false {
	    %
	    % White stone filled 10% black
	    %
	    wR 0 360 arc
	    gsave
		.90 setgray fill
	    grestore
	    wW setlinewidth
	    0 setgray stroke
	}{
	    false {
		%
		% The character 'w'
		%
		gsave
		    2 copy wR 3 mul 4 div 0 360 arc 1 setgray fill
		grestore
		translate fF (w) centerstrn
	    }{
		%
		% A small white square
		%
		translate
		newpath
		    -.4 -.4  moveto
		    0.8 0   rlineto
		    0   0.8 rlineto
		    -.8 0   rlineto
		closepath
		gsave .75 setgray fill grestore stroke
	    } ifelse
	} ifelse
    grestore
} bind def

%	 #]wterr: 
%	 #[metamark:

/metamark {
    %
    % color x y (string) metamark --> --
    %
    % Arbitrairy mark in "color" stone
    %
    gsave
	/marker exch def
	/ycoor  exch def
	/xcoor  exch def
	/color  exch def
	xcoor ycoor color 0 eq { ws } { bs } ifelse
	xcoor ycoor translate
	mF
	marker stringwidth pop 2 div neg 0 translate
	color 1 eq { 1 setgray } if
	0 0 moveto marker show
    grestore
} bind def

%	 #]metamark: 
%  #]stone signs: 
%  #[field signs:
%	 #[fs:

/fs {
    %
    % string x y fs --> --
    %
    % Grid point indicator
    %
    gsave
	newpath
	    translate
	    0 0 wR 0 360 arc
	    1 setgray
	    fill
	0 setgray fF centerstrn
    grestore
} bind def

%	 #]fs: 
%	 #[arrow:

/arrow {
    %
    % angle x y arrow --> --
    %
    % Put an arrow from (x,y) in direction determined by angle
    %
    gsave
	translate
	0.5 setgray 0 0 hR 0 360 arc fill
	rotate
	newpath
	     0.0   0.25  moveto
	    -0.1   0.25  lineto
	     0.0   0.48  lineto
	     0.1   0.25  lineto
	closepath 0.5 setgray
	gsave stroke grestore
	fill
    grestore
} bind def

%	 #]arrow: 
%	 #[nl:

/nl {
    %
    % string x y nl --> --
    %
    % Numbered liberty --- Put Number next to a marked grid point
    %
    gsave
	translate
	newpath
	     0.0  -0.25  moveto
	    -0.25  0.0   lineto
	     0.0   0.25  lineto
	     0.25  0.0   lineto
	closepath 0.5 setgray fill
	.3 .3 translate
	.6 dup scale
	0 setgray fF centerstrn
    grestore
} bind def

%	 #]nl: 
%	 #[no:

/no {
    %
    % string x y no --> --
    %
    % Put Number next to grid point
    %
    gsave
	translate
	% 0.5 setgray 0 0 hR 0 360 arc fill
	.3 .3 translate
	.6 dup scale
	0 setgray fF centerstrn
    grestore
} bind def

%	 #]no: 
%	 #[ds:

/ds {
    %
    % string x y ds --> --
    %
    % Destructive Grid point indicator
    %
    gsave
	translate
	0 setgray fF centerstrn
    grestore
} bind def

%	 #]ds: 
%  #]field signs: 

end

Liberty begin
/cache false def
/axis  false def
19 10.20 boardinit
/bdx 12 def
/bdy  5 def
/bdw 19 def
/bdh 19 def
/rgx  0 def
/rgy  0 def
/rgw 19 def
/rgh 19 def
board
13 13 bs
15 13 ws
16 13 ws
17 13 ws
12 12 bs
13 12 bs
14 12 ws
15 12 ws
16 12 bs
17 12 bs
12 11 bs
13 11 bs
14 11 bs
15 11 ws
16 11 bs
17 11 ws
12 10 bs
13 10 bs
14 10 ws
15 10 ws
16 10 bs
17 10 ws
12 9 ws
13 9 bs
14 9 bs
15 9 bs
16 9 ws
17 9 ws
mark (7) 0 
/wB -23 def
/wH 733 def
46 474 18 9 wst
13 8 ws
14 8 bs
15 8 ws
16 8 ws
mark (2) 0 
/bB -24 def
/bH 752 def
30 485 17 8 bst
mark (5) 0 35 478 18 8 wst
12 7 ws
13 7 ws
14 7 ws
15 7 bs
16 7 bs
17 7 bs
mark (1) 37 102 245 18 7 wst
12 6 ws
14 6 bs
15 6 bs
mark (4) 0 24 498 16 6 bst
mark (3) 0 32 474 17 6 wst
mark (6) 0 32 487 18 6 bst
12 5 ws
13 5 bs
14 5 bs
15 5 ws
16 5 ws
17 5 bs
18 5 bs
12 4 ws
13 4 ws
14 4 ws
15 4 bs
16 4 ws
17 4 ws
12 3 bs
13 3 ws
14 3 bs
15 3 bs
16 3 bs
17 3 ws
mark (8) 0 22 503 18 3 bst
12 2 bs
13 2 bs
15 2 bs
16 2 bs
17 2 bs
18 2 ws
12 1 ws
13 1 bs
14 1 bs
16 1 bs
17 1 ws
12 0 ws
13 0 ws
14 0 bs
end
%%Trailer
userdict /end-hook known{end-hook}if
%%EOF

%%EndDocument
 @endspecial 5893 4973 a Fd(Figure)59 b(18.)1070 1227
y Fm(at)h(35,)g(threatening)h(W)f(a)g({)g(B)g(b,)g(W)g(c,)h(whic)-5
b(h)60 b(wins)h(the)f(2)1070 1455 y(Blac)-5 b(k)60 b(stones)g(on)f(the)
h(side.)81 b(B)60 b(32)f(is)h(a)g(1)f(p)5 b(oin)-5 b(t)59
b(sen)-5 b(te,)61 b(but)1070 1684 y(W)68 b(33)g(is)h(w)-5
b(orth)68 b(less)i(than)d(a)i(pla)-5 b(y)68 b(in)h(either)g(the)f(East)
g(or)1070 1912 y(W)-15 b(est.)89 b(After)62 b(B)g(36)g(the)g(mast)h(v)
-10 b(alue)63 b(is)g Fi(\000)4012 1843 y Fk(1)p 4012
1872 71 8 v 4012 1973 a(6)4103 1912 y Fm(.)88 b(White)63
b(pla)-5 b(ys)1070 2141 y(W)72 b(37)g(in)g(the)h(East,)i(but)d(loses)i
(2)e(p)5 b(oin)-5 b(ts)73 b(b)-5 b(y)72 b(comparison)1070
2369 y(with)59 b(correct)g(pla)-5 b(y)-15 b(.)1281 2598
y(Figure)82 b(18:)124 b(In)82 b(p)5 b(ost-game)82 b(discussion)h(Rui)g
(Nai)f(W)-15 b(ei)1070 2826 y(sp)5 b(otted)88 b(the)f(correct)h(pla)-5
b(y)-15 b(.)166 b(After)88 b(the)f(skillful)k(pla)-5
b(y)88 b(of)1070 3054 y(W)59 b(1,)g(the)h(lo)5 b(cal)60
b(temp)5 b(erature)60 b(drops)f(to)g(3.)81 b(But)60 b(since)g(the)1070
3283 y(am)-5 b(bien)g(t)67 b(temp)5 b(erature)67 b(is)h(less)g(than)e
(that,)i(Blac)-5 b(k)68 b(replies.)1070 3511 y(W)87 b(3)h(is)h(another)
e(skillful)j(pla)-5 b(y)-15 b(,)95 b(threatening)88 b(the)g(Blac)-5
b(k)1070 3740 y(stones)54 b(on)f(the)h(side.)77 b(Through)52
b(B)i(8)g(the)f(sequence)h(is)h(sen)-5 b(te)1070 3968
y(for)82 b(White.)151 b(White)83 b(has)f(the)h(same)h(territory)f(as)g
(in)g(the)1070 4197 y(game,)58 b(but)g(Blac)-5 b(k)60
b(has)e(2)g(p)5 b(oin)-5 b(ts)59 b(less.)80 b(W)58 b(37)g(w)-5
b(as)58 b(White's)1070 4425 y(last)65 b(c)-5 b(hance)63
b(to)g(win)h(the)g(game.)92 b(If)64 b(White)g(had)e(pla)-5
b(y)g(ed)64 b(as)1070 4654 y(in)55 b(Figure)g(18)g(the)g(mast)g(v)-10
b(alue)56 b(w)-5 b(ould)54 b(ha)-5 b(v)g(e)55 b(b)5 b(een)54
b Fi(\000)4708 4584 y Fk(2)p 4708 4613 V 4708 4714 a(3)4799
4654 y Fm(,)i(but)1070 4882 y(instead)j(it)h(is)g(1)2138
4813 y Fk(1)p 2137 4842 V 2137 4943 a(3)2229 4882 y Fm(.)1052
10312 y @beginspecial 0 @llx 0 @lly 289.995941 @urx 289.995941
@ury 2783.960693 @rwi 2783.960693 @rhi @setspecial
%%BeginDocument: /u/levy/MSRI/Book42/spight/fig19.ps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: dvipsk 5.58f Copyright 1986, 1994 Radical Eye Software
%%Title: 589718.dvi
%%BoundingBox: 0 0 290 290

%  #[info:
%									%
%									%
%	     _								%
%	    / \\  /'\\ -_-_  ,._-_  /'\\     _-_  -_-_	 _-_,		%
%	   || || || || || \\  ||   || ||    || \\ || \\ ||_.		%
%	   || || || || || ||  ||   || ||    ||/	  || ||	 ~ ||		%
%	   \\_-| \\,/  ||-'   \\,  \\,/	 <> \\,/  ||-'	,-_-		%
%	    /  \       |/			  |/			%
%	   '----`      '			  '			%
%									%
%		  Copyright (c) 1993  Jan van der Steen			%
%	       Centre for Mathematics and Computer Science		%
%		       Amsterdam, the Netherlands			%
%									%
%-----------------------------------------------------------------------%
%   You are not allowed to use this software in commercial software.	%
%   You are allowed to use this software in free software under the	%
%   condition that you maintain this integral message in the source.	%
%-----------------------------------------------------------------------%
% File	  : gopro.eps							%
% Purpose : Implement PostScript procedures to draw Go games		%
% Version : 1.28							%
% Modified: 07 Apr 1995 18:10:54					%
% Author  : Jan van der Steen (jansteen@cwi.nl)				%
%  #]info: 

/Liberty 100 dict def
Liberty begin

%  #[init:
%
% Default fonts for various applications
%
/bFont /Helvetica-Bold def	% Black numbers
/wFont /Helvetica      def	% White numbers
/fFont /Helvetica      def	% Grid markers
/mFont /Helvetica      def	% Metamarkers

/bF { bFont findfont yP scalefont setfont } bind def /bB -24 def /bH 752 def
/wF { wFont findfont yP scalefont setfont } bind def /wB -23 def /wH 733 def
/fF { fFont findfont yP scalefont setfont } bind def
/mF { mFont findfont yP scalefont setfont } bind def

%
% Abbreviations
%
/W 0 def			% White color
/B 1 def			% Black color

%
% The following sizes are in square units
%
/gW	.01   def	% Width of grid line
/bW	.10   def	% Width of border line
/wW	.02   def	% Width of a white stone
/bR	.48   def	% Radius of a black stone
/wR	.48   def	% Radius of a white stone
/hR	.10   def	% Radius of a hoshi point
/xP	.60   def	% Maximum width  of strings (number,indicator)
/yP	.80   def	% Maximum height of strings (number,indicator)
/axis	true  def	% Do we print coordinates too
/cache	true  def	% Do we use the stone cache

%
% The stone cache
%
cache {
    /EMPTY	 0 def
    /BLACK	-1 def
    /WHITE	-2 def
} if
%  #]init: 
%  #[tools:
%	 #[snap:

/snap {
    %
    % x y snap x" y"
    %
    % Make x and y snap on output device grid
    %
    transform round exch round exch itransform
} bind def

%	 #]snap: 
%	 #[centerstrn:

/centerstrn {
    %
    % string centerstrn --> --
    %
    % Print "string" balanced around (0,0) and make sure
    % it will fit in a "yP" x "yP" bounding box.
    %
    dup stringwidth pop
    %
    % Does stringwidth exceed allowed maximum
    %
    dup yP gt { dup yP exch div 1 scale } if

    %
    % Center the string
    %
    2 div neg yP .20 sub 2 div neg moveto show
} bind def

%	 #]centerstrn: 
%  #]tools: 
%  #[boardinit:

/boardinit {
    %
    % boardsize (9, 13, 19, ...) realsize (in cm) boardinit --> ---
    %
    /realsize  exch def
    /boardsize exch def

    %
    % Initialise the hoshipoints
    %
    /hoshipos
	boardsize 19 eq {6} {
	boardsize 13 eq {3} {
	boardsize  9 eq {2}
			{0}		% Nothing appropriate
		ifelse
	    } ifelse
	} ifelse
    def

    %
    % Initialise the coordinate system (square = unity)
    %
    realsize boardsize div 2.54 div 72 mul dup scale

    %
    % Get and load the caption font
    %
    % /Times-Roman findfont .5 scalefont setfont

    % .5 axis {1}{0} ifelse add dup translate
    % axis {1}{0} ifelse dup translate

    %
    % Initialise clipping to whole board, and region to NIL
    %
    /llbdx 0 def/llbdy llbdx boardsize 1 sub add def
    /urbdy 0 def/urbdx urbdy boardsize 1 sub add def
    /llrgx 0 def
    /urrgx 0 def
    /llrgy 0 def
    /urrgy 0 def

    %
    % Clean the current path
    %
    newpath
} bind def

%  #]boardinit: 
%  #[cache:
%	 #[cacheinit:

/cacheinit {
    %
    % For the stone cache
    %
    cache {
	/stonecache boardsize dup mul array def
	0 1 boardsize dup mul 1 sub {
	    stonecache exch EMPTY put
	} for
    } if
} bind def

%	 #]cacheinit: 
%	 #[cachedump:

/cachedump {
    0 1 360 {
	dup stonecache exch get
	dup EMPTY eq {
	    pop pop
	}{
	    BLACK eq {
		dup
		boardsize  mod boardsize 2 idiv sub exch
		boardsize idiv boardsize 2 idiv sub bs
	    }{
		dup
		boardsize  mod boardsize 2 idiv sub exch
		boardsize idiv boardsize 2 idiv sub ws
	    } ifelse
	} ifelse    
    } for
} bind def

%	 #]cachedump: 
%	 #[cachedelete:

/cachedelete {
    /y exch def
    /x exch def
    stonecache
	x boardsize 2 idiv add
	y boardsize 2 idiv add boardsize mul add
	EMPTY
    put
} bind def

%	 #]cachedelete: 
%	 #[cd:

/cd {
    %
    % Delete an entry from the cache (stone has been hit)
    % x y cd
    %
    cache { cachedelete }{ pop pop } ifelse
} bind def

%	 #]cd: 
%  #]cache: 
%  #[caption:

/caption {
    gsave
	0 -1 translate
	0 0 moveto show
    grestore
} bind def

%  #]caption: 
%  #[transboard:

/row  0 def
/col  0 def
/rmax 3 def	% 3 rows	(based on h = 146 diagrams)
/cmax 2 def	% 2 columns	(based on w = 146 diagrams)
/lm   2 def	% Left margin

/init {
    lm lm translate
    0 boardsize 2 add rmax 1 sub mul translate
} bind def

true {
    /transboard { 0 0 translate } bind def
}{
    /transboard {
	col boardsize 2 add mul neg
	row boardsize 2 add mul translate
	row rmax 1 sub lt { /row row 1 add def }{
	    /row 0 def
	    col cmax 1 sub lt { /col col 1 add def }{
		showpage restore save
	    } ifelse
	} ifelse
	col boardsize 2 add mul
	row boardsize 2 add mul neg translate
    } bind def
} ifelse

%  #]transboard: 
%  #[board:
%	 #[hoshidump:

/hoshidump {
    gsave
    boardsize 2 idiv dup translate
    0 setgray
    newpath	    0                   0               hR 0 360 arc fill
    newpath	    hoshipos            hoshipos        hR 0 360 arc fill
    newpath	    hoshipos            hoshipos neg    hR 0 360 arc fill
    newpath	    hoshipos neg        hoshipos        hR 0 360 arc fill
    newpath	    hoshipos neg        hoshipos neg    hR 0 360 arc fill
    boardsize 19 eq {
	newpath	        0               hoshipos        hR 0 360 arc fill
	newpath	        hoshipos        0               hR 0 360 arc fill
	newpath	        0               hoshipos neg    hR 0 360 arc fill
	newpath	        hoshipos neg    0               hR 0 360 arc fill
    } if
    grestore
} bind def

%	 #]hoshidump: 
%	 #[coordump:

/X-AXIS [
    (A)(B)(C)(D)(E)(F)(G)(H)(J)(K)(L)(M)(N)(O)(P)(Q)(R)(S)(T)
] def
/Y-AXIS [
    (1)(2)(3)(4)(5)(6)(7)(8)(9)(10)(11)(12)(13)(14)(15)(16)(17)(18)(19)
] def

/coordump {
    %
    % Surround the board with coordinates
    %
    fF
    newpath
    0 bdh moveto	% upper edge
    1 1 boardsize {
	1 sub X-AXIS exch get
	gsave currentpoint translate centerstrn grestore
	1 0 rmoveto
    } for
    newpath
    0 -1 moveto		% lower edge
    1 1 boardsize {
	1 sub X-AXIS exch get
	gsave currentpoint translate centerstrn grestore
	1 0 rmoveto
    } for
    newpath
    -1 0 moveto		% left edge
    1 1 boardsize {
	1 sub Y-AXIS exch get
	gsave currentpoint translate centerstrn grestore
	0 1 rmoveto
    } for
    newpath
    bdw 0 moveto	% right edge
    1 1 boardsize {
	1 sub Y-AXIS exch get
	gsave currentpoint translate centerstrn grestore
	0 1 rmoveto
    } for
    newpath
} bind def

%  #]coordump: 
%	 #[board:

/board {
    transboard					% Translate into position

    %
    % Clip region
    %
    % Example 1: Bottom slice
    % /bdx  0 def	% SGF coordinates (topdown, leftright)
    % /bdy  8 def	% SGF coordinates (topdown, leftright)
    % /bdw 19 def
    % /bdh 11 def
    %
    % Example 2: Top slice
    % /bdx  0 def
    % /bdy  0 def
    % /bdw 19 def
    % /bdh 10 def
    %
    /psclipx bdx def
    /psclipy boardsize bdy bdh add sub def
    /psclipw bdw def
    /pscliph bdh def

    axis {
	%
	% Add space for the coordinates
	%
	/psclipw psclipw 2 add def	% left/right side
	/pscliph pscliph 2 add def	% top/bottom side
    } if

    newpath
	0           0        moveto
	psclipw     0       rlineto
	0           pscliph rlineto
	psclipw neg 0       rlineto
    closepath
    gsave 1 setgray fill grestore clip
    newpath
    %
    % Translate to relative origin
    %
    psclipx .5 sub neg
    psclipy .5 sub neg translate

    axis {1}{0} ifelse dup translate

    %
    % Region
    %
    gsave
	llrgx urrgx ne llrgy urrgy ne or {
	    newpath
	    llrgx .5 sub llrgy .5 add moveto
	    llrgx .5 sub urrgy .5 sub lineto
	    urrgx .5 add urrgy .5 sub lineto
	    urrgx .5 add llrgy .5 add lineto
	    closepath
	    .75 setgray
	    % 255 255 div
	    % 175 255 div
	    % 125 255 div setrgbcolor
	    gsave gW setlinewidth stroke grestore fill
	    newpath
	} if
    grestore

    %
    % Horizontals
    %
    newpath
    1 1 boardsize 2 sub {
	0 exch snap moveto
	boardsize 1 sub 0 rlineto
    } for
    %
    % Verticals
    %
    1 1 boardsize 2 sub {
	0 snap moveto
	0 boardsize 1 sub rlineto
    } for
    gW setlinewidth stroke

    %
    % Borders
    %
    newpath
    0			0			moveto
    0			boardsize 1 sub		rlineto
    boardsize 1 sub	0			rlineto
    0			boardsize 1 sub neg	rlineto
    closepath
    bW setlinewidth stroke

    hoshidump					% Print the hoshi points
    cache { cachedump } if			% Print the cache contents
    axis  { coordump  } if			% Print the coordinates
    % grestore
} bind def

%	 #]board: 
%  #]board: 
%  #[stones:
%	 #[wst:

/wst {
    %
    % Numbered white stone
    %
    % [[s0 K0][...][sn Kn]] ox w x y wst --> --
    %
    %	x,y 	[0..boardsize-1]
    %	ox,w	[1/1000 unit]
    %
    gsave
	/y  exch def
	/x  exch def
	/h  wH   yP mul 1000 div def
	/w  exch yP mul 1000 div def
	/oy wB   yP mul 1000 div def
	/ox exch yP mul 1000 div def
	cache {
	    stonecache
		x boardsize 2 idiv add
		y boardsize 2 idiv add boardsize mul add
		WHITE
	    put
	} if
	x y translate
	0 0 ws
	0 setgray wF

	w xP gt { xP w div }{1} ifelse
	h yP gt { yP h div }{1} ifelse scale
	w 2 div ox add neg
	h 2 div oy add neg translate
	0 0 moveto
	1 1 counttomark 2 sub 2 idiv { pop neg yP mul 1000 div 0 rmoveto show } for
	pop % "mark" itself
    grestore
} bind def

%	 #]wst: 
%	 #[bst:

/bst {
    %
    % Numbered black stone
    %
    % [[s0 K0][...][sn Kn]] ox w x y bst --> --
    %
    %	x,y 	[0..boardsize-1]
    %	ox,w	[1/1000 unit]
    %
    %
    gsave
	/y  exch def
	/x  exch def
	/h  bH   yP mul 1000 div def
	/w  exch yP mul 1000 div def
	/oy bB   yP mul 1000 div def
	/ox exch yP mul 1000 div def
	cache {
	    stonecache
		x boardsize 2 idiv add
		y boardsize 2 idiv add boardsize mul add
		BLACK
	    put
	} if
	x y translate
	0 0 bs
	1 setgray bF

	w xP gt { xP w div }{1} ifelse
	h yP gt { yP h div }{1} ifelse scale
	w 2 div ox add neg
	h 2 div oy add neg translate
	0 0 moveto
	1 1 counttomark 2 sub 2 idiv { pop neg yP mul 1000 div 0 rmoveto show } for
	pop % "mark" itself
    grestore
} bind def

%	 #]bst: 
%	 #[ws:

/ws {
    %
    % x y ws --> --
    %
    % Unnumbered white stone
    %
    newpath
    wR 0 360 arc
    gsave
	1 setgray fill
    grestore
    wW setlinewidth
    0 setgray stroke
} bind def

%	 #]ws: 
%	 #[bs:

/bs {
    %
    % x y ws --> --
    %
    % Unnumbered black stone
    %
    newpath
    bR 0 360 arc
    0 setgray fill
} bind def

%	 #]bs: 
%  #]stones: 
%  #[stone signs:
%	 #[ps:

/ps {
    %
    % color x y ps --> --
    %
    % Plus sign in "color" stone
    %
    gsave
	/ycoor exch def
	/xcoor exch def
	/color exch def
	xcoor ycoor color 0 eq { ws } { bs } ifelse
	newpath
	    xcoor ycoor translate
	    .06 setlinewidth
	    color setgray
	    -.2 0  moveto
	     .2 0  lineto
	    0  -.2 moveto
	    0   .2 lineto
	stroke
    grestore
} bind def

%	 #]ps: 
%	 #[ms:

/ms {
    %
    % color x y ms --> --
    %
    % Minus sign in "color" stone
    %
    gsave
	/ycoor exch def
	/xcoor exch def
	/color exch def
	xcoor ycoor color 0 eq { ws } { bs } ifelse
	newpath
	    xcoor ycoor translate
	    .06 setlinewidth
	    color setgray
	    -.2 0 moveto
	     .2 0 lineto
	stroke
    grestore
} bind def

%	 #]ms: 
%	 #[square_e:

/square_e {
    %
    % color x y square_e --> --
    %
    % Empty square in "color" stone
    %
    gsave
	/ycoor exch def
	/xcoor exch def
	/color exch def
	xcoor ycoor color 0 eq { ws } { bs } ifelse
	newpath
	    xcoor ycoor translate
	    .04 setlinewidth
	    color setgray
	    -.2353   -.2353   moveto
	    -.2353    .2353   lineto
	     .2353    .2353   lineto
	     .2353   -.2353   lineto
	closepath
	stroke
    grestore
} bind def

%	 #]square_e: 
%	 #[square_f:

/square_f {
    %
    % color x y square_f --> --
    %
    % Filled square in "color" stone
    %
    gsave
	/ycoor exch def
	/xcoor exch def
	/color exch def
	xcoor ycoor color 0 eq { ws } { bs } ifelse
	newpath
	    xcoor ycoor translate
	    .04 setlinewidth
	    color setgray
	    -.2353   -.2353   moveto
	    -.2353    .2353   lineto
	     .2353    .2353   lineto
	     .2353   -.2353   lineto
	closepath
	fill
    grestore
} bind def

%	 #]square_f: 
%	 #[triang_e:

/triang_e {
    %
    % color x y triang_e --> --
    %
    % Empty triangle in "color" stone
    %
    gsave
	/ycoor exch def
	/xcoor exch def
	/color exch def
	xcoor ycoor color 0 eq { ws } { bs } ifelse
	newpath
	    xcoor ycoor translate
	    .04 setlinewidth
	    color setgray
	    -.2353   -.175   moveto
	     .4706   0       rlineto
	    -.2353    .500   rlineto
	closepath
	stroke
    grestore
} bind def

%	 #]triang_e: 
%	 #[triang_f:

/triang_f {
    %
    % color x y triang_f --> --
    %
    % Filled triangle in "color" stone
    %
    gsave
	/ycoor exch def
	/xcoor exch def
	/color exch def
	xcoor ycoor color 0 eq { ws } { bs } ifelse
	newpath
	    xcoor ycoor translate
	    .04 setlinewidth
	    color setgray
	    -.2353   -.175   moveto
	     .4706   0       rlineto
	    -.2353    .500   rlineto
	closepath
	fill
    grestore
} bind def

%	 #]triang_f: 
%	 #[shade:

/shade {
    %
    % color x y shade --> --
    %
    % Give the board some color at (x,y)
    %
    gsave
	translate		% To x y
	newpath
	    -.5 -.5 moveto
	    0 1 rlineto
	    1 0 rlineto
	    0 -1 rlineto
	closepath
	100 div setgray fill		% with color

	%
	% Restore grid
	%
	gW setlinewidth
	newpath -.5 0 moveto 1 0 rlineto stroke
	newpath 0 -.5 moveto 0 1 rlineto stroke
    grestore
} bind def

%	 #]shade: 
%	 #[bterr:

/bterr {
    %
    % x y bterr --> --
    %
    % Black territory indicator
    %
    gsave
	false {
	    %
	    % white stone filled 60% black
	    %
	    wR 0 360 arc
	    gsave
		.40 setgray fill
	    grestore
	    wW setlinewidth
	    0 setgray stroke
	}{
	    false {
		%
		% The character 'b'
		%
		gsave
		    2 copy wR 3 mul 4 div 0 360 arc 1 setgray fill
		grestore
		translate fF (b) centerstrn
	    }{
		%
		% A small black square
		%
		translate
		newpath
		    -.4 -.4  moveto
		    0.8 0   rlineto
		    0   0.8 rlineto
		    -.8 0   rlineto
		closepath
		gsave .25 setgray fill grestore stroke
	    } ifelse
	} ifelse
    grestore
} bind def

%	 #]bterr: 
%	 #[wterr:

/wterr {
    %
    % x y wterr --> --
    %
    % White territory indicator
    %
    gsave
	false {
	    %
	    % White stone filled 10% black
	    %
	    wR 0 360 arc
	    gsave
		.90 setgray fill
	    grestore
	    wW setlinewidth
	    0 setgray stroke
	}{
	    false {
		%
		% The character 'w'
		%
		gsave
		    2 copy wR 3 mul 4 div 0 360 arc 1 setgray fill
		grestore
		translate fF (w) centerstrn
	    }{
		%
		% A small white square
		%
		translate
		newpath
		    -.4 -.4  moveto
		    0.8 0   rlineto
		    0   0.8 rlineto
		    -.8 0   rlineto
		closepath
		gsave .75 setgray fill grestore stroke
	    } ifelse
	} ifelse
    grestore
} bind def

%	 #]wterr: 
%	 #[metamark:

/metamark {
    %
    % color x y (string) metamark --> --
    %
    % Arbitrairy mark in "color" stone
    %
    gsave
	/marker exch def
	/ycoor  exch def
	/xcoor  exch def
	/color  exch def
	xcoor ycoor color 0 eq { ws } { bs } ifelse
	xcoor ycoor translate
	mF
	marker stringwidth pop 2 div neg 0 translate
	color 1 eq { 1 setgray } if
	0 0 moveto marker show
    grestore
} bind def

%	 #]metamark: 
%  #]stone signs: 
%  #[field signs:
%	 #[fs:

/fs {
    %
    % string x y fs --> --
    %
    % Grid point indicator
    %
    gsave
	newpath
	    translate
	    0 0 wR 0 360 arc
	    1 setgray
	    fill
	0 setgray fF centerstrn
    grestore
} bind def

%	 #]fs: 
%	 #[arrow:

/arrow {
    %
    % angle x y arrow --> --
    %
    % Put an arrow from (x,y) in direction determined by angle
    %
    gsave
	translate
	0.5 setgray 0 0 hR 0 360 arc fill
	rotate
	newpath
	     0.0   0.25  moveto
	    -0.1   0.25  lineto
	     0.0   0.48  lineto
	     0.1   0.25  lineto
	closepath 0.5 setgray
	gsave stroke grestore
	fill
    grestore
} bind def

%	 #]arrow: 
%	 #[nl:

/nl {
    %
    % string x y nl --> --
    %
    % Numbered liberty --- Put Number next to a marked grid point
    %
    gsave
	translate
	newpath
	     0.0  -0.25  moveto
	    -0.25  0.0   lineto
	     0.0   0.25  lineto
	     0.25  0.0   lineto
	closepath 0.5 setgray fill
	.3 .3 translate
	.6 dup scale
	0 setgray fF centerstrn
    grestore
} bind def

%	 #]nl: 
%	 #[no:

/no {
    %
    % string x y no --> --
    %
    % Put Number next to grid point
    %
    gsave
	translate
	% 0.5 setgray 0 0 hR 0 360 arc fill
	.3 .3 translate
	.6 dup scale
	0 setgray fF centerstrn
    grestore
} bind def

%	 #]no: 
%	 #[ds:

/ds {
    %
    % string x y ds --> --
    %
    % Destructive Grid point indicator
    %
    gsave
	translate
	0 setgray fF centerstrn
    grestore
} bind def

%	 #]ds: 
%  #]field signs: 

end

Liberty begin
/cache false def
/axis  false def
19 10.20 boardinit
/bdx  0 def
/bdy  0 def
/bdw 19 def
/bdh 19 def
/rgx  0 def
/rgy  0 def
/rgw 19 def
/rgh 19 def
board
1 18 bs
5 18 bs
6 18 bs
7 18 ws
11 18 ws
12 18 bs
13 18 bs
15 18 ws
0 17 ws
1 17 bs
3 17 bs
5 17 bs
6 17 ws
7 17 ws
8 17 ws
9 17 ws
10 17 ws
mark (63) 0 
/wB -23 def
/wH 733 def
43 1019 11 17 wst
12 17 ws
mark (62) 0 
/bB -24 def
/bH 752 def
32 1039 13 17 bst
14 17 bs
15 17 ws
0 16 ws
1 16 bs
2 16 bs
3 16 bs
4 16 bs
5 16 ws
7 16 ws
8 16 bs
10 16 ws
11 16 ws
12 16 bs
13 16 bs
14 16 ws
15 16 ws
1 15 ws
2 15 ws
3 15 ws
4 15 ws
5 15 ws
6 15 ws
7 15 ws
9 15 bs
10 15 bs
11 15 ws
12 15 bs
14 15 bs
15 15 ws
1 14 ws
6 14 bs
8 14 bs
9 14 bs
10 14 ws
11 14 bs
12 14 bs
13 14 bs
14 14 bs
15 14 ws
17 14 bs
mark (60) 0 32 1041 0 13 bst
mark (55) 0 35 1034 1 13 wst
2 13 bs
mark (58) 0 27 1054 3 13 bst
4 13 bs
5 13 bs
6 13 bs
8 13 bs
9 13 ws
10 13 ws
11 13 bs
13 13 bs
15 13 ws
16 13 ws
17 13 ws
1 12 bs
mark (56) 0 27 1048 2 12 bst
mark (57) 0 35 1041 3 12 wst
4 12 bs
5 12 ws
8 12 ws
9 12 bs
10 12 ws
11 12 ws
12 12 bs
13 12 bs
14 12 ws
15 12 ws
16 12 bs
17 12 bs
0 11 bs
1 11 bs
2 11 ws
3 11 ws
4 11 bs
5 11 ws
6 11 bs
7 11 bs
8 11 ws
10 11 ws
11 11 ws
12 11 bs
13 11 bs
14 11 bs
15 11 ws
16 11 bs
17 11 ws
0 10 bs
1 10 ws
2 10 ws
3 10 bs
4 10 ws
5 10 ws
7 10 bs
8 10 bs
9 10 ws
10 10 ws
11 10 bs
12 10 bs
13 10 bs
14 10 ws
15 10 ws
16 10 bs
17 10 ws
0 9 ws
mark (59) 0 35 1030 1 9 wst
2 9 ws
3 9 bs
5 9 ws
7 9 bs
8 9 ws
9 9 ws
10 9 bs
11 9 bs
12 9 ws
13 9 bs
14 9 bs
15 9 bs
16 9 ws
17 9 ws
1 8 ws
2 8 bs
3 8 bs
5 8 ws
6 8 bs
7 8 bs
8 8 bs
9 8 ws
10 8 ws
11 8 ws
mark (65) 0 43 1026 12 8 wst
13 8 ws
14 8 bs
15 8 ws
16 8 ws
17 8 ws
mark (43) 0 28 1034 18 8 wst
0 7 bs
1 7 ws
2 7 ws
3 7 ws
4 7 ws
5 7 ws
6 7 ws
7 7 ws
8 7 bs
9 7 bs
10 7 ws
11 7 ws
12 7 ws
13 7 ws
14 7 ws
15 7 bs
16 7 bs
17 7 bs
18 7 bs
mark (40) 0 24 1049 0 6 bst
1 6 bs
2 6 bs
3 6 bs
4 6 ws
5 6 bs
mark (1) 37 (6) 0 43 823 7 6 wst
mark (1) 37 (4) 0 28 838 8 6 wst
mark (42) 0 24 1047 9 6 bst
10 6 bs
11 6 bs
12 6 ws
14 6 bs
15 6 bs
mark (39) 0 32 1033 0 5 wst
1 5 ws
2 5 bs
3 5 bs
4 5 ws
5 5 bs
6 5 ws
7 5 ws
8 5 bs
10 5 bs
11 5 ws
12 5 ws
14 5 bs
15 5 ws
16 5 ws
17 5 bs
18 5 bs
1 4 ws
2 4 ws
3 4 bs
4 4 bs
6 4 bs
7 4 bs
9 4 bs
10 4 bs
11 4 ws
12 4 ws
13 4 ws
14 4 ws
15 4 bs
16 4 ws
17 4 ws
2 3 ws
3 3 ws
4 3 bs
5 3 bs
mark (50) 0 27 1046 7 3 bst
8 3 bs
9 3 ws
10 3 ws
11 3 ws
12 3 bs
13 3 ws
14 3 bs
15 3 bs
16 3 bs
17 3 ws
mark (46) 0 24 1051 1 2 bst
2 2 bs
3 2 ws
4 2 ws
5 2 ws
6 2 bs
mark (49) 0 28 1037 7 2 wst
8 2 bs
9 2 ws
11 2 ws
12 2 bs
13 2 bs
15 2 bs
16 2 bs
17 2 bs
18 2 ws
mark (53) 0 35 1027 2 1 wst
4 1 ws
mark (a) 0 46 474 5 1 bst
mark (45) 0 28 1041 6 1 wst
7 1 bs
8 1 ws
9 1 ws
10 1 ws
12 1 ws
13 1 bs
14 1 bs
16 1 bs
17 1 ws
4 0 ws
5 0 ws
6 0 bs
7 0 bs
8 0 bs
mark (47) 0 28 1048 9 0 wst
11 0 ws
12 0 ws
13 0 ws
14 0 bs
end
%%Trailer
userdict /end-hook known{end-hook}if
%%EOF

%%EndDocument
 @endspecial 5963 5580 a Fh(B)54 b(44)107 b(=)54 b(1)h(pt)g(cpn)5963
5773 y(B)f(48)107 b(=)54 b(k)-5 b(o)55 b(\(a\))5963 5966
y(W)f(51)h(=)f(k)-5 b(o)55 b(\(45\))5963 6160 y(B)f(52)107
b(=)54 b(\014lls)h(\(49\))5963 6353 y(B)f(54)107 b(=)6603
6288 y Fp(1)p 6603 6317 65 7 v 6603 6407 a(2)6742 6353
y Fh(pt)55 b(cpn)5963 6546 y(B)f(64)107 b(=)54 b(k)-5
b(o)55 b(\(a\))5963 6740 y(B)f(66)107 b(=)54 b(\014lls)h(\(45\))3023
10554 y Ff(Figure)i(19.)78 b Fe(Actual)53 b(pla)-5 b(y)55
b(\(39{66\).)p eop
%%Page: 104 17
104 16 bop 1070 577 a Fg(104)2065 b(WILLIAM)65 b(L.)g(SPIGHT)1281
998 y Fm(Figure)i(19:)95 b(There)67 b(are)g(some)g(sligh)-5
b(t)70 b(deviations)e(from)f(ortho)5 b(do)-5 b(x)66 b(pla)-5
b(y)67 b(at)h(the)f(end.)1070 1227 y(W)e(39)g(should)g(tak)-5
b(e)65 b(the)h(k)-5 b(o)65 b(at)g(45)g(in)h(the)g(South.)97
b(The)65 b(k)-5 b(o)65 b(has)g(a)g(temp)5 b(erature)65
b(of)g(1)7045 1158 y Fk(1)p 7045 1187 71 8 v 7045 1287
a(3)7136 1227 y Fm(.)1070 1455 y(W)59 b(39)f(is)j(a)e(1)g(p)5
b(oin)-5 b(t)59 b(sen)-5 b(te,)60 b(and)e(a)h(p)5 b(ossible)61
b(threat)e(for)g(this)h(k)-5 b(o.)80 b(B)59 b(44)g(misses)j(a)d(c)-5
b(hance)1070 1684 y(when)70 b(he)g(tak)-5 b(es)71 b(the)g(1)g(p)5
b(oin)-5 b(t)71 b(coup)5 b(on)69 b(instead)i(of)g(\014lling)h(at)f(45.)
114 b(If)71 b(Blac)-5 b(k)71 b(\014lls)i(at)e(45,)1070
1912 y(White)76 b(tak)-5 b(es)76 b(the)f(1)g(p)5 b(oin)-5
b(t)76 b(coup)5 b(on,)78 b(and)c(Blac)-5 b(k)77 b(can)e(pla)-5
b(y)75 b(at)h(47)f(with)h(sen)-5 b(te.)129 b(Then)1070
2141 y(Blac)-5 b(k)69 b(tak)-5 b(es)68 b(the)2358 2071
y Fk(1)p 2358 2100 V 2358 2201 a(2)2517 2141 y Fm(p)5
b(oin)-5 b(t)68 b(card.)105 b(A)-5 b(t)69 b(that)f(p)5
b(oin)-5 b(t)68 b(there)g(w)-5 b(ould)68 b(b)5 b(e)68
b(only)g(2)g(k)-5 b(os)68 b(on)f(the)1070 2369 y(b)5
b(oard.)110 b(White)70 b(w)-5 b(ould)70 b(ha)-5 b(v)g(e)69
b(to)h(win)g(the)g(k)-5 b(o)69 b(\014gh)-5 b(t)69 b(to)h(get)g(the)g
(same)g(result)h(as)f(in)g(the)1070 2598 y(game.)78 b(If)59
b(Blac)-5 b(k)59 b(w)-5 b(on)59 b(the)f(k)-5 b(o)58 b(\014gh)-5
b(t,)58 b(he)h(w)-5 b(ould)58 b(score)h(1)g(p)5 b(oin)-5
b(t)58 b(more.)1281 2826 y(B)i(46)h(is)g(an)f(o)-5 b(v)g(ersigh)g(t.)84
b(White)61 b(do)5 b(es)60 b(not)g(ha)-5 b(v)g(e)60 b(to)g(answ)-5
b(er)60 b(this)i(apparen)-5 b(t)59 b(k)-5 b(o)60 b(threat)1070
3054 y(righ)-5 b(t)73 b(a)-5 b(w)g(a)g(y)-15 b(.)119
b(White)73 b(pla)-5 b(ys)72 b(atari)i(at)e(47,)j(and)d(then)g(when)f
(Blac)-5 b(k)74 b(tak)-5 b(es)73 b(the)f(k)-5 b(o)72
b(bac)-5 b(k,)1070 3283 y(White)66 b(pla)-5 b(ys)66 b(at)g(49.)98
b(If)66 b(Blac)-5 b(k)66 b(\014lls)h(the)f(k)-5 b(o)65
b(White)h(can)f(capture)g(Blac)-5 b(k's)67 b(7)e(stones,)j(so)1070
3511 y(Blac)-5 b(k)57 b(m)-5 b(ust)57 b(tak)-5 b(e)57
b(at)f(50.)77 b(Then)56 b(White)g(tak)-5 b(es)57 b(the)f(k)-5
b(o)56 b(bac)-5 b(k)56 b(and)g(Blac)-5 b(k)57 b(has)f(to)g(connect)1070
3740 y(at)g(49.)77 b(Since)56 b(White)g(is)h(k)-5 b(omaster,)57
b(Blac)-5 b(k)57 b(should)f(simply)i(pla)-5 b(y)56 b(B)g(46)g(at)g(47.)
77 b(That)56 b(gets)1070 3968 y(the)k(last)h(1)f(p)5
b(oin)-5 b(t)60 b(pla)-5 b(y)-15 b(,)60 b(but)g(then)f(White)i(gets)f
(the)4679 3899 y Fk(1)p 4679 3928 V 4679 4029 a(2)4830
3968 y Fm(p)5 b(oin)-5 b(t)61 b(card)e(instead)h(of)g(Blac)-5
b(k,)61 b(so)1070 4197 y(there)d(is)i(no)e(di\013erence)h(in)g(the)f
(score.)3662 4781 y Fl(Summary)1281 5225 y Fm(When)78
b(White)j(to)5 b(ok)79 b(the)h(4)f(p)5 b(oin)-5 b(t)80
b(coup)5 b(on,)84 b(she)c(o)-5 b(v)g(erlo)5 b(ok)-5 b(ed)79
b(the)h(double)f(sen)-5 b(te)81 b(in)1070 5453 y(the)65
b(South)f(and)g(South)-5 b(w)g(est,)66 b(allo)-5 b(wing)67
b(Blac)-5 b(k)66 b(to)f(mak)-5 b(e)65 b(the)g(game)g(close.)98
b(Then)64 b(Blac)-5 b(k)1070 5682 y(o)g(v)g(erestimated)75
b(the)f(v)-10 b(alue)74 b(of)f(his)h(pla)-5 b(ys)74 b(in)g(the)g(W)-15
b(est,)77 b(allo)-5 b(wing)76 b(White)e(to)f(pla)-5 b(y)74
b(\014rst)1070 5910 y(in)68 b(the)g(North.)106 b(White)68
b(c)-5 b(hose)68 b(the)g(wrong)f(sp)5 b(ot)68 b(in)g(the)g(North,)i
(ending)d(up)h(with)g(gote.)1070 6139 y(Then)55 b(for)h(a)f(long)i
(time)g(b)5 b(oth)56 b(pla)-5 b(y)g(ers)56 b(o)-5 b(v)g(erlo)5
b(ok)-5 b(ed)56 b(White's)h(skillful)h(option)f(in)f(the)g(East)1070
6367 y(and)69 b(underestimated)h(its)i(temp)5 b(erature.)112
b(White)70 b(lost)h(sev)-5 b(eral)71 b(c)-5 b(hances)70
b(to)g(win,)j(while)1070 6595 y(Blac)-5 b(k)47 b(failed)g(to)g(secure)f
(the)g(game.)74 b(Finally)-15 b(,)50 b(White)d(made)f(the)h(wrong)e
(pla)-5 b(y)46 b(in)h(the)f(East,)1070 6824 y(losing)60
b(2)e(p)5 b(oin)-5 b(ts)59 b(and)f(the)h(game.)1281 7052
y(T)-15 b(raditional)47 b(ev)-10 b(aluation)47 b(of)f(go)g(pla)-5
b(ys)46 b(pro)5 b(duces)46 b(the)g(temp)5 b(eratures)46
b(and)f(mean)h(v)-10 b(alues)1070 7281 y(of)51 b(classical)k
(thermograph)-5 b(y)-15 b(.)75 b(Thermographs,)51 b(ho)-5
b(w)g(ev)g(er,)53 b(yield)f(additional)h(information)1070
7509 y(ab)5 b(out)59 b(ortho)5 b(do)-5 b(x)58 b(pla)-5
b(y)60 b(in)g(di\013eren)-5 b(t)60 b(en)-5 b(vironmen)g(ts.)82
b(The)59 b(concept)h(of)f(k)-5 b(omaster)60 b(allo)-5
b(ws)1070 7738 y(us)82 b(to)h(\014nd)f(the)h(mast)g(v)-10
b(alues)84 b(and)d(temp)5 b(eratures)83 b(of)g(all)h(p)5
b(ositions)84 b(in)-5 b(v)g(olving)84 b(single)1070 7966
y(k)-5 b(os.)75 b(De\014ning)49 b(thermographs)g(in)h(terms)h(of)e(pla)
-5 b(y)50 b(in)g(a)f(univ)-5 b(ersal)50 b(enric)-5 b(hed)50
b(en)-5 b(vironmen)g(t)1070 8195 y(extends)69 b(thermograph)-5
b(y)68 b(to)h(p)5 b(ositions)71 b(with)f(m)-5 b(ultiple)71
b(k)-5 b(os.)110 b(Researc)-5 b(h)70 b(con)-5 b(tin)g(ues)69
b(in)-5 b(to)1070 8423 y(p)5 b(ositions)68 b(in)g(whic)-5
b(h)67 b(neither)g(pla)-5 b(y)g(er)67 b(is)h(k)-5 b(omaster)68
b(and)e(in)-5 b(to)67 b(what)g(conditions)h(allo)-5 b(w)68
b(a)1070 8651 y(pla)-5 b(y)g(er)59 b(to)f(b)5 b(e)59
b(k)-5 b(omaster.)3260 9236 y Fl(Ac)f(kno)g(wledgmen)g(ts)1281
9679 y Fm(This)67 b(analysis)g(has)f(b)5 b(een,)67 b(and)f(con)-5
b(tin)g(ues)67 b(to)f(b)5 b(e,)67 b(a)g(collab)5 b(orativ)-5
b(e)67 b(e\013ort.)101 b(It)67 b(is)g(the)1070 9908 y(result)50
b(of)f(man)-5 b(y)49 b(discussions)i(in)-5 b(v)g(olving)50
b(Elwyn)f(Berlek)-10 b(amp,)53 b(Bill)f(F)-15 b(raser,)51
b(Jiang)e(Zh)-5 b(ujiu,)1070 10136 y(Rui)42 b(Nai)g(W)-15
b(ei,)46 b(and)41 b(m)-5 b(yself.)74 b(This)42 b(y)-5
b(ear)41 b(W)-15 b(ei)43 b(Lu)e(Chen)g(also)i(con)-5
b(tributed)41 b(to)h(the)g(analysis.)1070 10365 y(It)50
b(w)-5 b(ould)49 b(ha)-5 b(v)g(e)49 b(b)5 b(een)48 b(imp)5
b(ossible)52 b(without)e(the)f(aid)h(of)f(Bill)j(F)-15
b(raser's)49 b(Gosolv)-5 b(er)50 b(program.)1070 10593
y(F)-15 b(or)55 b(instance,)i(the)f(North)f(is)i(particularly)g
(complex,)g(and)e(w)-5 b(e)56 b(ha)-5 b(v)g(e)55 b(en)-5
b(tered)56 b(more)g(than)p eop
%%Page: 105 18
105 17 bop 1926 577 a Fg(GO)65 b(THERMOGRAPHY:)f(THE)g(4/21/98)e
(JIANG{R)l(UI)h(ENDGAME)631 b(105)1070 998 y Fm(20,000)81
b(North)h(p)5 b(ositions)84 b(in)-5 b(to)83 b(the)f(program's)g
(database.)148 b(I)83 b(wish)g(to)f(thank)g(Elwyn)1070
1227 y(Berlek)-10 b(amp)60 b(and)d(Martin)i(M)5 b(\177)-93
b(uller)60 b(for)e(their)i(helpful)e(commen)-5 b(ts)60
b(on)e(this)i(w)-5 b(ork.)3608 1736 y Fl(References)1070
2070 y Fh([Berlek)c(amp)62 b(1996])123 b(E.)61 b(R.)g(Berlek)-9
b(amp,)62 b(\\The)g(economist's)i(view)d(of)g(com)-5
b(binatorial)64 b(games",)1281 2264 y(pp.)70 b(365{405)h(in)e
Fc(Games)j(of)f(No)h(Chanc)-8 b(e)p Fh(,)69 b(R.)g(No)-5
b(w)g(ak)g(o)g(wski,)72 b(ed.,)e(Cam)-5 b(bridge)72 b(Univ)-5
b(ersit)g(y)1281 2457 y(Press,)54 b(Cam)-5 b(bridge)56
b(\(1996\).)1070 2721 y([Berlek)-9 b(amp)75 b(2000])150
b(E.)74 b(R.)g(Berlek)-9 b(amp,)76 b(\\Sums)g(of)e(N)g(x)g(2)g
(amazons",)j(pp.)e(1{34)g(in)g Fc(Game)1281 2914 y(The)-8
b(ory,)83 b(Optimal)h(Stopping,)g(Pr)-8 b(ob)g(ability)83
b(and)h(Statistics)p Fh(,)f(T.)f(Bruss)h(and)g(L.)f(Le)g(Cam,)1281
3107 y(eds.,)71 b(Lecture)f(Notes)h({)g(Monograph)g(Series)g
Fb(35)p Fh(,)f(Institute)h(of)f(Mathematical)j(Statistics,)1281
3300 y(Ha)-5 b(yw)g(ard,)55 b(CA,)g(\(2000\).)1070 3564
y([Berlek)-9 b(amp)79 b(2001])158 b(E.)78 b(R.)g(Berlek)-9
b(amp,)79 b(\\Idemp)5 b(oten)-5 b(ts)81 b(among)f(partisan)f(games",)h
(in)e(this)1281 3757 y(v)-5 b(olume.)1070 4021 y([Spigh)g(t)49
b(1998])94 b(W.)47 b(L.)g(Spigh)-5 b(t,)49 b(\\Extended)f(thermograph)
-5 b(y)49 b(for)d(m)-5 b(ultiple)49 b(k)-5 b(os)48 b(in)f(go",)h(pp.)f
(232{)1281 4214 y(251)54 b(in)h Fc(Computers)j(and)g(Games)p
Fh(,)c(J.)f(v)-9 b(an)54 b(den)h(Herik)f(and)g(H.)g(Iida,)h(eds.,)g
(Lecture)f(Notes)h(in)1281 4408 y(Computer)h(Science)g
Fb(1558)p Fh(,)c(Springer,)k(Berlin)e(\(1998\).)1070
4900 y Fa(William)59 b(L.)h(Spight)1070 5093 y(729)121
b(55th)61 b(St.)1070 5286 y(O)-5 b(akland,)58 b(CA)i(94609)1070
5480 y(United)g(St)-11 b(a)g(tes)1281 5673 y Fh(bspigh)-5
b(t@pacb)5 b(ell.net)p eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF
